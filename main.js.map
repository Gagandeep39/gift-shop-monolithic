{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQuD;AACkD;AAEH;AAElC;AACmC;AACH;AACG;AACE;AAExC;AACqC;AAC7B;AACS;AACuB;AACH;AACjB;AACA;AAEqB;AACpB;AAC6B;AACvB;AAC0B;AACrB;AACmB;AACE;AAEA;AAEZ;AACT;AACpB;AACoB;AACpC;AACb;AACA;AACuC;AACZ;;;AAE3E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,0EAAa;QACxB,WAAW,EAAE,CAAC,uEAAe,CAAC;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,kFAAc;aAC1B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,4FAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,gHAAuB;aACnC;YACD;gBACE,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,mHAAwB;aACpC;YACD;gBACE,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,+GAAuB;aACnC;SACF;KACF;IAED;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,uFAAiB;QAC5B,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2GAAoB,EAAE;YAC7C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+FAAgB,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE;YACvE;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,gIAAwB;gBACnC,WAAW,EAAE,CAAC,0DAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2GAAoB;gBAC/B,WAAW,EAAE,CAAC,0DAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,2GAAoB;gBAC/B,WAAW,EAAE,CAAC,0DAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,gIAAwB;gBACnC,WAAW,EAAE,CAAC,0DAAS,CAAC;aACzB;YACD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+FAAgB,EAAE;YAC9C;gBACE,IAAI,EAAE,mBAAmB;gBACzB,SAAS,EAAE,8HAAwB;gBACnC,WAAW,EAAE,CAAC,0DAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,gGAAiB;gBAC5B,WAAW,EAAE,CAAC,0DAAS,CAAC;gBACxB,QAAQ,EAAE;oBACR,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,oHAAoB,EAAE;oBACpD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gIAAwB,EAAE;oBACzD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sGAAgB,EAAE;oBAChD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,6HAAuB,EAAE;oBAChE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;iBACxD;aACF;YACD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oHAAuB,EAAE;SAC3D;KACF;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,6EAAc;QACzB,WAAW,EAAE,CAAC,0DAAS,EAAE,0DAAS,CAAC;QACnC,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;QACvB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+GAAsB,EAAE;YAClD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kHAAuB,EAAE;YACpD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gHAAuB,EAAE;YAC5D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kHAAuB,EAAE;YAC3D,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,gHAAuB,EAAE;YACxE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;YACnD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,6GAAsB,EAAE;SACjE;KACF;IACD,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,EAAE;IAClE,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,qFAAiB,EAAE;IAC7C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,iGAAqB,EAAE;IACjD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE;CACvC,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;8GAAhB,gBAAgB;kHAHjB,kEAAoB,CAAC,MAAM,CAAC,EAC5B,0DAAY;oIAEX,gBAAgB,qFAFjB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9IjB,MAAM,YAAY;IAGvB;QAFA,UAAK,GAAG,UAAU,CAAC;IAEJ,CAAC;;wEAHL,YAAY;0GAAZ,YAAY;QCPzB,2EAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQ0B;AAEF;AACT;AACgC;AACN;AACS;AACwB;AAChC;AACgC;AACY;AAC1B;AACe;AACS;AACzB;AACG;AACjB;AACG;AACM;AAClB;AACD;AACQ;AACI;AACb;AACV;AACF;AACP;AACuD;AACG;AACpB;AACY;AACa;AACvB;AACT;AACuB;AACA;AACD;AACO;AACN;AACC;AACE;AACP;AACA;AACM;AACvB;AACuB;AACT;AAC+B;AACP;AACwB;AACrC;AACD;AACF;AACJ;AACO;AACU;AAC9B;AAC0B;AACO;AACrD;;AAuE1D,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFR,wDAAY;4GAJb;QACT,yDAAgB;QAChB,iEAAgB;KACjB,YAXC,qEAAa;QACb,iEAAgB;QAChB,0FAAuB;QACvB,gEAAmB;QACnB,mEAAgB;QAChB,wDAAW;QACX,0FAAoB;oIAQX,SAAS,mBAnElB,wDAAY;QACZ,kFAAc;QACd,2FAAiB;QACjB,mHAAuB;QACvB,mFAAa;QACb,mHAAoB;QACpB,+HAAwB;QACxB,qGAAgB;QAChB,oHAAqB;QACrB,8HAAwB;QACxB,qGAAmB;QACnB,wGAAoB;QACpB,8GAAsB;QACtB,uFAAiB;QACjB,0FAAe;QACf,gGAAiB;QACjB,8EAAc;QACd,6EAAe;QACf,qFAAiB;QACjB,yFAAmB;QACnB,gHAAuB;QACvB,mHAAwB;QACxB,+FAAgB;QAChB,2GAAoB;QACpB,wHAAoB;QACpB,iGAAqB;QACrB,wFAAkB;QAClB,+GAAyB;QACzB,+GAAyB;QACzB,qHAAqB;QACrB,+GAAyB;QACzB,gHAAuB;QACvB,kHAA0B;QAC1B,2GAAoB;QACpB,2GAAoB;QACpB,iHAAuB;QACvB,iHAAuB;QACvB,wGAAoB;QACpB,uIAAyB;QACzB,gIAAwB;QACxB,wJAA0B;QAC1B,mHAAuB;QACvB,kHAA0B;QAC1B,gHAAsB;QACtB,4GAAwB;QACxB,mHAAuB;QACvB,6HAAuB;QACvB,+FAAgB;QAChB,yHAAqB;QACrB,gIAAwB;QACxB,2EAAa,aAGb,qEAAa;QACb,iEAAgB;QAChB,0FAAuB;QACvB,gEAAmB;QACnB,mEAAgB;QAChB,wDAAW;QACX,0FAAoB;;;;;;;;;;;;;;;;;;;;;ACzH0D;;;;;;;;IC4ChE,sEAAuE;IACrE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,2JAIF;;;IAhBF,0EAGC;IACC,2HAEM;IACN,2HASM;IACR,4DAAM;;;IAbE,0DAA+D;IAA/D,kIAA+D;IAIlE,0DAGrB;IAHqB,+IAGrB;;;IA2BkB,sEAA8E;IAC5E,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,kKAIF;;;IAhBF,0EAGC;IACC,2HAEM;IACN,2HASM;IACR,4DAAM;;;IAbE,0DAAsE;IAAtE,yIAAsE;IAIzE,0DAGrB;IAHqB,sJAGrB;;;IA2BkB,sEAA2E;IACzE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,gKAIF;;;IAhBF,0EAGC;IACC,2HAEM;IACN,2HASM;IACR,4DAAM;;;IAbE,0DAAmE;IAAnE,sIAAmE;IAItE,0DAGrB;IAHqB,mJAGrB;;;IAQc,0EAA8D;IAC5D,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,0FACF;;;IAEE,sEAGQ;;;;AD3HjB,MAAM,uBAAuB;IAQlC,YACS,cAA8B,EAC7B,eAAgC,EAChC,QAAkB,EAClB,SAAiC;QAHlC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAwB;QAX3C,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAe,EAAE,CAAC;QAE5B,qBAAgB,GAAG,EAAE,CAAC;IAQnB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,4DAAgB,CAAC;YAC7C,YAAY,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/D,mBAAmB,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACtE,gBAAgB,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACpE,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IACD,UAAU,CAAC,QAAa;QAEtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACtD,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,wCAAwC,GAAG,QAAQ,CAAC,YAAY,CAAC,EACjE,qBAAqB,CACtB,CAAC;YACJ,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,KAAK,EAAE,KAAK,EAAE,OAAO,KAAK,gBAAgB;oBAC5C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;wBACzD,qBAAqB,EAAE,OAAO,CAAC,OAAO;qBACvC,CAAC,CACH,CAAC;;oBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;8FA7DU,uBAAuB;qHAAvB,uBAAuB;QCpBpC,yEAAkB;QAChB,oEAMO;QACP,yEAAqB;QAGf,oEAMO;QACP,yEAAmC;QAK3B,4IAAS,YAAQ,IAAC;QAFpB,4DAKE;QACF,8EACF;QAAA,4DAAK;QACL,4EAIC;QADC,oJAAY,gBAAY,IAAC;QAGzB,2EAAwB;QACK,0EAAa;QAAA,4DAAQ;QAChD,wEAWE;QACF,sHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACwB,iFAAoB;QAAA,4DAAQ;QAC1E,2EAWY;QACZ,sHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACqB,0EAAa;QAAA,4DAAQ;QAChE,gFAWC;QALC,0JAAU,oCAAgC,IAAC;QAK5C,4DAAW;QACZ,sHAiBM;QACR,4DAAM;QACN,sHAEM;QACN,8EAAoD;QAClD,wHAGQ;QACR,0EACF;QAAA,4DAAS;;QA9InB,0DAGE;QAHF,qNAGE;QAOI,0DAGE;QAHF,qNAGE;QAeE,0DAAgC;QAAhC,6FAAgC;QAY5B,0DAGE;QAHF,gNAGE;QAKD,0DAAiE;QAAjE,qIAAiE;QA0BlE,0DAIE;QAJF,uNAIE;QAID,0DAAwE;QAAxE,4IAAwE;QA4BzE,0DAEE;QAFF,oNAEE;QAID,0DAAqE;QAArE,yIAAqE;QAiBpE,0DAAa;QAAb,6EAAa;QAKd,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;AC5IU;;;;;;ICmC/C,0EAKC;IACC,kIAEF;IAAA,4DAAM;;ADnCT,MAAM,oBAAoB;IAG/B,YAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,mEAAQ,EAAE,CAAC;IACjC,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;IACzD,CAAC;;wFAXU,oBAAoB;kHAApB,oBAAoB;QCTjC,wEAA+B;QAAA,uEAAY;QAAA,4DAAK;QAEhD,qEAGE;QAEF,yEAAuB;QAIf,gJAAY,kBAAc,IAAC;QAI3B,oEAAG;QAAA,oEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,iFASE;QALA,wMAAmC;QAJrC,4DASE;QACF,iEAAM;QACN,mHAQM;QACR,4DAAM;QAGN,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,oFASC;QALC,kNAA0C;QAK3C,4DAAW;QAId,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,oFASC;QALC,+MAAuC;QAKxC,4DAAW;QAId,2EAAwB;QAMpB,0EACF;QAAA,4DAAS;;;;QAxEP,2DAAmC;QAAnC,8FAAmC;QAQlC,0DAGb;QAHa,yGAGb;QAsBY,0DAA0C;QAA1C,qGAA0C;QAuB1C,0DAAuC;QAAvC,kGAAuC;QAYvC,0DAA+B;QAA/B,gFAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFuC;AAE5C;AAE8B;;;;;;;;;;ICwClD,sEAAqE;IACnE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,0JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA6D;IAA7D,gIAA6D;IAIhE,0DAGrB;IAHqB,6IAGrB;;;IA0BkB,sEAAsE;IACpE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,2JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA8D;IAA9D,iIAA8D;IAIjE,0DAGrB;IAHqB,8IAGrB;;;IA0BkB,sEAAyE;IACvE,uEACF;IAAA,4DAAM;;;IACN,sEAAwE;IACtE,uFACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,8JAIF;;;IAnBF,0EAGC;IACC,0HAEM;IACN,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAhBE,0DAAiE;IAAjE,oIAAiE;IAGjE,0DAAgE;IAAhE,mIAAgE;IAInE,0DAGrB;IAHqB,iJAGrB;;;IA2BkB,sEAAsE;IACpE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,2JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA8D;IAA9D,iIAA8D;IAIjE,0DAGrB;IAHqB,8IAGrB;;;IA2BkB,sEAA4E;IAC1E,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,iKAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAAoE;IAApE,uIAAoE;IAIvE,0DAGrB;IAHqB,oJAGrB;;;IA2BkB,sEAAqE;IACnE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,0JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA6D;IAA7D,gIAA6D;IAIhE,0DAGrB;IAHqB,6IAGrB;;;;IAYkB,0EAAoF;IAClF,uEAOE;IACF,4EAA2D;IAAA,uDAEzD;IAAA,4DAAQ;;;;IATR,0DAAsF;IAAtF,qNAAsF;IAOpD,0DAAsB;IAAtB,0FAAsB;IAAC,0DAEzD;IAFyD,iFAEzD;;;IASF,sEAMC;IACC,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,4JAIF;;;IA3BF,0EAMC;IACC,0HAQM;IACN,0HAWM;IACR,4DAAM;;;IApBD,0DAKvB;IALuB,kIAKvB;IAIuB,0DAKvB;IALuB,+IAKvB;;;IAuBkB,6EAGC;IACC,uDACF;IAAA,4DAAS;;;IAHP,sFAAyB;IAEzB,0DACF;IADE,iGACF;;;IAGA,sEAAoE;IAAA,qEAAU;IAAA,4DAAM;;;IACpF,sEAAiF;IAC7E,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,yJACJ;;;IAJF,0EAA+F;IAC7F,0HAAoF;IACpF,0HAEM;IACR,4DAAM;;;IAJE,0DAA4D;IAA5D,+HAA4D;IAC5D,0DAAyE;IAAzE,4IAAyE;;;IAKnF,0EAA8D;IAC5D,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,2FACF;;;IAEE,sEAGQ;;;ADzSjB,MAAM,sBAAsB;IASjC,YACU,KAAqB,EACtB,cAA8B,EAC7B,cAA8B,EAC9B,eAAgC,EAChC,QAAkB,EAClB,MAAc,EACd,SAAiC;QANjC,UAAK,GAAL,KAAK,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAwB;QAf3C,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAe,EAAE,CAAC;QAC5B,aAAQ,GAAG,8EAAa,CAAC;QAEzB,gBAAW,GAAG,EAAE,CAAC;IAWd,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,iBAAiB,GAAG,IAAI,4DAAgB,CAAC;YAC5C,WAAW,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC9D,YAAY,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/D,eAAe,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC7G,YAAY,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/D,kBAAkB,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACrE,WAAW,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC9D,aAAa,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAChE,UAAU,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,eAAe;aACjB,kBAAkB,EAAE;aACpB,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK;YAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,UAAU,CAAC,QAAa;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uCAAuC,GAAG,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,CAAC;QACrG,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,EAAE,KAAK,EAAE,OAAO,KAAK,gBAAgB;gBAC5C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBACxD,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;4FA5EU,sBAAsB;oHAAtB,sBAAsB;QCzBnC,yEAAkB;QAChB,oEAMO;QACP,yEAAqB;QAGf,oEAMO;QACP,yEAAmC;QAK3B,2IAAS,YAAQ,IAAC;QAFpB,4DAKE;QACF,6EACF;QAAA,4DAAK;QACL,4EAIC;QADC,mJAAY,gBAAY,IAAC;QAGzB,2EAAwB;QACI,yEAAY;QAAA,4DAAQ;QAC9C,wEAWE;QACF,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACiB,0EAAa;QAAA,4DAAQ;QAC5D,wEAUE;QACF,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACoB,6EAAgB;QAAA,4DAAQ;QAClE,wEAUE;QACF,qHAoBM;QACR,4DAAM;QAEN,2EAAwB;QACiB,0EAAa;QAAA,4DAAQ;QAC5D,wEAWE;QACF,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACuB,gFAAmB;QAAA,4DAAQ;QACxE,2EAWY;QACZ,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACgB,yEAAY;QAAA,4DAAQ;QAC1D,gFAWC;QALC,yJAAU,oCAAgC,IAAC;QAK5C,4DAAW;QACZ,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QAEb,0EAAc;QAAA,4DAAQ;QAC7B,qHAYM;;QACN,qHA4BM;QACR,4DAAM;QAGR,2EAAwB;QACU,oEAAQ;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DACtD;QAAA,8EAOA;QAEG,+EACF;QAAA,4DAAS;QACT,2HAKS;QACX,4DAAS;QACT,qHAKM;QACR,4DAAM;QACN,qHAEM;QACN,8EAAoD;QAClD,uHAGQ;QACR,iEACF;QAAA,4DAAS;;QAjUnB,0DAGE;QAHF,gNAGE;QAOI,0DAGE;QAHF,gNAGE;QAeE,0DAA+B;QAA/B,4FAA+B;QAY3B,0DAGE;QAHF,8MAGE;QAKD,0DAA+D;QAA/D,mIAA+D;QA2BhE,0DAEE;QAFF,+MAEE;QAID,0DAAgE;QAAhE,oIAAgE;QA2BjE,0DAEE;QAFF,kNAEE;QAID,0DAAmE;QAAnE,uIAAmE;QA+BpE,0DAEE;QAFF,+MAEE;QAID,0DAAgE;QAAhE,oIAAgE;QA0BjE,0DAIE;QAJF,qNAIE;QAID,0DAAsE;QAAtE,0IAAsE;QA4BvE,0DAEE;QAFF,8MAEE;QAID,0DAA+D;QAA/D,mIAA+D;QAqBxC,0DAAsB;QAAtB,oJAAsB;QAe3C,0DAIrB;QAJqB,qIAIrB;QA6BkB,0DAGE;QAHF,6MAGE;QAI+B,0DAAiB;QAAjB,0EAAiB;QAI/B,0DAAa;QAAb,mFAAa;QAMH,0DAA8D;QAA9D,kIAA8D;QAOzF,0DAAa;QAAb,6EAAa;QAKd,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;;;AC7TQ;;;;;;;;ICgC7C,0EAKC;IACC,kIAEF;IAAA,4DAAM;;;IAwBN,0EAKC;IACC,8FACF;IAAA,4DAAM;;;IAyBN,0EAKC;IACC,mFACF;IAAA,4DAAM;;;IAwBN,0EAKC;IACC,oHACF;IAAA,4DAAM;;;IAgGJ,6EAA0D;IACxD,uDACF;IAAA,4DAAS;;;IAF0B,mFAAsB;IACvD,0DACF;IADE,8FACF;;AD/NL,MAAM,mBAAmB;IAM9B,YAAoB,OAAwB,EAAU,eAAiC,EAAU,KAAc;QAA3F,YAAO,GAAP,OAAO,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAS;QAH/G,aAAQ,GAAgB,EAAE,CAAC;QAIzB,IAAI,CAAC,OAAO,GAAG,IAAI,iEAAO,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,QAAqB,EAAE,EAAE;YAC1E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,GAAY;QAChC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IACxB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,iEAAO,EAAE,CAAC;IAC/B,CAAC;;sFAzBU,mBAAmB;iHAAnB,mBAAmB;QCZhC,wEAA+B;QAAA,sEAAW;QAAA,4DAAK;QAC/C,qEAGE;QAEF,yEAAuB;QAIf,+IAAY,iBAAa,IAAC;QAI1B,oEAAG;QAAA,oEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,iFASE;QALA,qMAAiC;QAJnC,4DASE;QACF,iEAAM;QACN,kHAQM;QACR,4DAAM;QAGN,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,iFAQE;QAJA,sMAAkC;QAJpC,4DAQE;QACF,iEAAM;QACN,kHAOM;QACR,4DAAM;QAIN,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,iFAQE;QAJA,yMAAqC;QAJvC,4DAQE;QACF,iEAAM;QACN,kHAOM;QACR,4DAAM;QAGN,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,iFAQE;QAJA,sMAAkC;QAJpC,4DAQE;QACF,iEAAM;QACN,kHAOM;QACR,4DAAM;QAGN,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,oFASC;QALC,+MAAwC;QAKzC,4DAAW;QAId,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,oFASC;QALC,wMAAiC;QAKlC,4DAAW;QAId,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,kFASC;QAHC,wMAAmC;QAInC,8EAA0B;QAAA,iFAAqB;QAAA,4DAAS;QACxD,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAK9C,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAChB,0EAAoC;QAG9B,oEAGK;QACP,4DAAO;QAET,kFAQC;QALC,oJAAU,8CAA0C,IAAC;QAMrD,wHAES;QACX,4DAAS;QAIX,2EAAwB;QAMpB,yEACF;QAAA,4DAAS;;;;;;;QA3NP,2DAAiC;QAAjC,4FAAiC;QAQhC,0DAGb;QAHa,yGAGb;QAsBY,0DAAkC;QAAlC,6FAAkC;QAOjC,0DAGb;QAHa,yGAGb;QAsBY,0DAAqC;QAArC,gGAAqC;QAOpC,0DAGb;QAHa,yGAGb;QAqBY,0DAAkC;QAAlC,6FAAkC;QAOjC,0DAGb;QAHa,yGAGb;QAqBY,0DAAwC;QAAxC,mGAAwC;QAuBxC,0DAAiC;QAAjC,4FAAiC;QAyBjC,0DAAmC;QAAnC,8FAAmC;QA0BnC,2DAAgC;QAAhC,2FAAgC;QAIV,0DAAW;QAAX,iFAAW;QAUjC,0DAA8B;QAA9B,gFAA8B;;;;;;;;;;;;;;;;;;;;;;;;AC5OnC,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;4GAAd,cAAc;QCP3B,yEAA0B;QACxB,4EAAiC;QAGjC,yEAAqB;QACnB,2EAA+B;QACjC,4DAAM;QAGR,wEAAyB;;;;;;;;;;;;;;;;;;;;;;;ACPyD;;;;;;;;;ICoDhE,sEAAuE;IACrE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,2JAIF;;;IAhBF,0EAGC;IACC,2HAEM;IACN,2HASM;IACR,4DAAM;;;IAbE,0DAA+D;IAA/D,kIAA+D;IAIlE,0DAGrB;IAHqB,+IAGrB;;;IA2BkB,sEAA8E;IAC5E,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,kKAIF;;;IAhBF,0EAGC;IACC,2HAEM;IACN,2HASM;IACR,4DAAM;;;IAbE,0DAAsE;IAAtE,yIAAsE;IAIzE,0DAGrB;IAHqB,sJAGrB;;;IA2BkB,sEAA2E;IACzE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,gKAIF;;;IAhBF,0EAGC;IACC,2HAEM;IACN,2HASM;IACR,4DAAM;;;IAbE,0DAAmE;IAAnE,sIAAmE;IAItE,0DAGrB;IAHqB,mJAGrB;;;IAQc,0EAA8D;IAC5D,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,0FACF;;;IAEE,sEAGQ;;;;ADlIjB,MAAM,uBAAuB;IASlC,YACU,KAAqB,EACtB,cAA8B,EAC7B,eAAgC,EAChC,QAAkB,EAClB,SAAiC;QAJjC,UAAK,GAAL,KAAK,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAwB;QAZ3C,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAe,EAAE,CAAC;QAE5B,qBAAgB,GAAG,EAAE,CAAC;IASnB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACjE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,4DAAgB,CAAC;YAC7C,UAAU,EAAE,IAAI,8DAAkB,CAAC,IAAI,CAAC,UAAU,CAAC;YACnD,YAAY,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/D,mBAAmB,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACtE,gBAAgB,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACpE,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,IAAI,CAAC,eAAe;aACjB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;aAC1B,SAAS,CAAC,CAAC,GAAa,EAAE,EAAE;YAC3B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC,CAAC,kCAAkC;YAChF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB,CAAC,QAAQ;QACzB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,YAAY,EAAE,QAAQ,EAAE,YAAY;YACpC,mBAAmB,EAAE,QAAQ,EAAE,mBAAmB;YAClD,gBAAgB,EAAE,QAAQ,EAAE,gBAAgB;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IACD,UAAU,CAAC,QAAa;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CACrD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,wCAAwC,GAAG,QAAQ,CAAC,YAAY,CAAC,EACjE,qBAAqB,CACtB,CAAC;YACF,iBAAiB;YACjB,uEAAuE;YACvE,qBAAqB;YACrB,sDAAsD;YACtD,YAAY;QACd,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,EAAE,KAAK,EAAE,OAAO,KAAK,gBAAgB;gBAC5C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBACzD,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IACzD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;8FA7FU,uBAAuB;qHAAvB,uBAAuB;QCdpC,yEAAkB;QAChB,oEAMO;QACP,yEAAqB;QAGf,oEAMO;QACP,yEAAmC;QAK3B,4IAAS,YAAQ,IAAC;QAFpB,4DAKE;QACF,4EAAe;QAAA,4EAAyB;QAAC,wDAAiB;QAAA,4DAAO;QAEnE,4EAIC;QADC,oJAAY,gBAAY,IAAC;QAEzB,wEAAyD;QAEzD,2EAAwB;QACK,0EAAa;QAAA,4DAAQ;QAChD,wEAWE;QACF,sHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACwB,iFAAoB;QAAA,4DAAQ;QAC1E,2EAWY;QACZ,sHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACqB,0EAAa;QAAA,4DAAQ;QAChE,gFAWC;QALC,0JAAU,oCAAgC,IAAC;QAK5C,4DAAW;QACZ,sHAiBM;QACR,4DAAM;QACN,sHAEM;QACN,8EAAoD;QAClD,wHAGQ;QACR,6EACF;QAAA,4DAAS;QACT,8EAIC;QADC,gJAAS,oBAAgB,IAAC;QAE1B,8EACF;QAAA,4DAAS;;QAtJnB,0DAGE;QAHF,qNAGE;QAOI,0DAGE;QAHF,qNAGE;QAW2C,0DAAiB;QAAjB,0FAAiB;QAI1D,0DAAgC;QAAhC,6FAAgC;QAa5B,0DAGE;QAHF,gNAGE;QAKD,0DAAiE;QAAjE,qIAAiE;QA0BlE,0DAIE;QAJF,uNAIE;QAID,0DAAwE;QAAxE,4IAAwE;QA4BzE,0DAEE;QAFF,oNAEE;QAID,0DAAqE;QAArE,yIAAqE;QAiBpE,0DAAa;QAAb,6EAAa;QAKd,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;;;;ACrImC;;;;;;;;;;IC6ChE,sEAAqE;IACnE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,0JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA6D;IAA7D,gIAA6D;IAIhE,0DAGrB;IAHqB,6IAGrB;;;IA0BkB,sEAAsE;IACpE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,2JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA8D;IAA9D,iIAA8D;IAIjE,0DAGrB;IAHqB,8IAGrB;;;IA0BkB,sEAAyE;IACvE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,8JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAAiE;IAAjE,oIAAiE;IAIpE,0DAGrB;IAHqB,iJAGrB;;;IA2BkB,sEAAsE;IACpE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,2JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA8D;IAA9D,iIAA8D;IAIjE,0DAGrB;IAHqB,8IAGrB;;;IA2BkB,sEAA4E;IAC1E,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,iKAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAAoE;IAApE,uIAAoE;IAIvE,0DAGrB;IAHqB,oJAGrB;;;IA2BkB,sEAAqE;IACnE,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,0JAIF;;;IAhBF,0EAGC;IACC,0HAEM;IACN,0HASM;IACR,4DAAM;;;IAbE,0DAA6D;IAA7D,gIAA6D;IAIhE,0DAGrB;IAHqB,6IAGrB;;;;IAYkB,0EAAyE;IACvE,uEAOE;IACF,4EAAuD;IAAA,uDAErD;IAAA,4DAAQ;;;;IATR,0DAAsF;IAAtF,qNAAsF;IAOpD,0DAAkB;IAAlB,sFAAkB;IAAC,0DAErD;IAFqD,2EAErD;;;IASF,sEAMC;IACC,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,4JAIF;;;IA3BF,0EAMC;IACC,0HAQM;IACN,0HAWM;IACR,4DAAM;;;IApBD,0DAKvB;IALuB,kIAKvB;IAIuB,0DAKvB;IALuB,+IAKvB;;;IAuBkB,6EAGC;IACC,uDACF;IAAA,4DAAS;;;IAHP,sFAAyB;IAEzB,0DACF;IADE,iGACF;;;IAGA,sEAAoE;IAAA,qEAAU;IAAA,4DAAM;;;IACpF,sEAAiF;IAC7E,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,yJACJ;;;IAJF,0EAA+F;IAC7F,0HAAoF;IACpF,0HAEM;IACR,4DAAM;;;IAJE,0DAA4D;IAA5D,+HAA4D;IAC5D,0DAAyE;IAAzE,4IAAyE;;;IAKnF,0EAA8D;IAC5D,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,2FACF;;;IAEE,sEAGQ;;;ADzSjB,MAAM,sBAAsB;IAUjC,YACU,KAAqB,EACtB,cAA8B,EAC7B,cAA8B,EAC9B,eAAgC,EAChC,QAAkB,EAClB,MAAc,EACd,SAAiC;QANjC,UAAK,GAAL,KAAK,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAwB;QAf3C,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAe,EAAE,CAAC;QAC5B,aAAQ,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAEnC,gBAAW,GAAG,EAAE,CAAC;IAWd,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC/D,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,iBAAiB,GAAG,IAAI,4DAAgB,CAAC;YAC5C,SAAS,EAAE,IAAI,8DAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;YACjD,WAAW,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC9D,YAAY,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/D,eAAe,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAClE,YAAY,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/D,kBAAkB,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACrE,WAAW,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC9D,aAAa,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAChE,UAAU,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAC9D,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE;YACtE,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC,MAAM,CAAC;QACV,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAY,EAAE,EAAE;YACvE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,kCAAkC;YACtE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC,MAAM,CAAC;IACZ,CAAC;IAED,kBAAkB,CAAC,OAAO;QACxB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,WAAW,EAAE,OAAO,EAAE,WAAW;YACjC,YAAY,EAAE,OAAO,EAAE,YAAY;YACnC,eAAe,EAAE,OAAO,EAAE,eAAe;YACzC,YAAY,EAAE,OAAO,EAAE,YAAY;YACnC,kBAAkB,EAAE,OAAO,EAAE,kBAAkB;YAC/C,WAAW,EAAE,OAAO,EAAE,WAAW;YACjC,aAAa,EAAE,OAAO,EAAE,aAAa;YACrC,UAAU,EAAE,OAAO,EAAE,UAAU;SAChC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK;YAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,UAAU,CAAC,QAAa;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CACnD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uCAAuC,GAAG,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,CAAC;YACnG,iBAAiB;YACjB,mEAAmE;YACnE,qBAAqB;YACrB,8CAA8C;YAC9C,YAAY;QACd,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,EAAE,KAAK,EAAE,OAAO,KAAK,gBAAgB;gBAC5C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBACxD,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;IAC9C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;4FAxGU,sBAAsB;oHAAtB,sBAAsB;QCvBnC,yEAAkB;QAChB,oEAMO;QACP,yEAAqB;QAGf,oEAMO;QACP,yEAAmC;QAK3B,2IAAS,YAAQ,IAAC;QAFpB,4DAKE;QACF,2EAAc;QAAA,4EAAyB;QAAC,wDAAgB;QAAA,4DAAO;QAEjE,4EAIC;QADC,mJAAY,gBAAY,IAAC;QAEzB,wEAAwD;QAExD,2EAAwB;QACI,yEAAY;QAAA,4DAAQ;QAC9C,wEAWE;QACF,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACiB,0EAAa;QAAA,4DAAQ;QAC5D,wEAUE;QACF,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACoB,6EAAgB;QAAA,4DAAQ;QAClE,wEAUE;QACF,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACiB,gFAAmB;QAAA,4DAAQ;QAClE,wEAWE;QACF,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACuB,gFAAmB;QAAA,4DAAQ;QACxE,2EAWY;QACZ,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QACgB,yEAAY;QAAA,4DAAQ;QAC1D,gFAWC;QALC,yJAAU,oCAAgC,IAAC;QAK5C,4DAAW;QACZ,qHAiBM;QACR,4DAAM;QAEN,2EAAwB;QAEb,0EAAc;QAAA,4DAAQ;QAC7B,qHAYM;QACN,qHA4BM;QACR,4DAAM;QAGR,2EAAwB;QACU,oEAAQ;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DACtD;QAAA,8EAOA;QAEG,+EACF;QAAA,4DAAS;QACT,2HAKS;QACX,4DAAS;QACT,qHAKM;QACR,4DAAM;QACN,qHAEM;QACN,8EAAoD;QAClD,uHAGQ;QACR,4EACF;QAAA,4DAAS;QACT,8EAIC;QADC,+IAAS,oBAAgB,IAAC;QAE1B,8EACF;QAAA,4DAAS;;QAtUnB,0DAGE;QAHF,gNAGE;QAOI,0DAGE;QAHF,gNAGE;QAW0C,0DAAgB;QAAhB,yFAAgB;QAIxD,0DAA+B;QAA/B,4FAA+B;QAa3B,0DAGE;QAHF,8MAGE;QAKD,0DAA+D;QAA/D,mIAA+D;QA2BhE,0DAEE;QAFF,+MAEE;QAID,0DAAgE;QAAhE,oIAAgE;QA2BjE,0DAEE;QAFF,kNAEE;QAID,0DAAmE;QAAnE,uIAAmE;QA4BpE,0DAEE;QAFF,+MAEE;QAID,0DAAgE;QAAhE,oIAAgE;QA0BjE,0DAIE;QAJF,qNAIE;QAID,0DAAsE;QAAtE,0IAAsE;QA4BvE,0DAEE;QAFF,8MAEE;QAID,0DAA+D;QAA/D,mIAA+D;QAqBxC,0DAAW;QAAX,iFAAW;QAehC,0DAIrB;QAJqB,qIAIrB;QA6BkB,0DAGE;QAHF,6MAGE;QAI+B,0DAAiB;QAAjB,0EAAiB;QAI/B,0DAAa;QAAb,mFAAa;QAMH,0DAA8D;QAA9D,kIAA8D;QAOzF,0DAAa;QAAb,6EAAa;QAKd,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;;;AC5TY;AACV;AACY;;;;;;;;;ICgBjD,yEAAsD;IACpD,wEACF;IAAA,4DAAK;;;IACL,yEAA2D;IACzD,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,kGACF;;;IAIA,yEAAsD;IAAA,+DAAI;IAAA,4DAAK;;;IAC/D,yEAA6D;IAC3D,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,oGACF;;;IAIA,yEAAsD;IACpD,wEACF;IAAA,4DAAK;;;IACL,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,2GACF;;;IAGA,yEAAsD;IAAA,+DAAI;IAAA,4DAAK;;;;IAC/D,yEAA6D;IAC3D,qEAAsG;IACxG,4DAAK;;;IADE,0DAA0D;IAA1D,qKAA0D;;;IAInE,oEAA4D;;;IAC5D,oEAAiE;;;;ADrCpE,MAAM,uBAAuB;IAclC,YACU,eAAgC,EACjC,cAA8B;QAD7B,oBAAe,GAAf,eAAe,CAAiB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAfvC,eAAU,GAAG,IAAI,uEAAkB,EAAY,CAAC;QAIhD,2EAA2E;QAC3E,oDAAoD;QACpD,qBAAgB,GAAa;YAC3B,YAAY;YACZ,cAAc;YACd,qBAAqB;YACrB,MAAM;SACP,CAAC;IAKC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,eAAe;aAC7C,kBAAkB,EAAE;aACpB,SAAS,CAAC,CAAC,QAAoB,EAAE,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,QAAQ,CAAC,WAAmB;QAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,oBAAoB;YAAE,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;IACzE,CAAC;;8FA3CU,uBAAuB;qHAAvB,uBAAuB;kEAGvB,2DAAO;kEACP,qEAAY;;;;;;QClBzB,yEAA8C;QAIf,qEAAU;QAAA,4DAAK;QACtC,gEAAM;QACR,4DAAM;QACN,yEAA4B;QAKxB,oJAAS,iCAA6B,IAAC;QAJzC,4DAME;QACF,oEAA8H;QAChI,4DAAM;QACN,0EAA2B;QAEvB,6EAAwC;QACtC,oHAEK;QACL,oHAEK;QACP,qEAAe;QAEf,6EAA0C;QACxC,oHAA+D;QAC/D,oHAEK;QACP,qEAAe;QAEf,6EAAiD;QAC/C,oHAEK;QACL,oHAEK;QACP,qEAAe;QACf,6EAAkC;QAChC,oHAA+D;QAC/D,oHAEK;QACP,qEAAe;QAEf,oHAA4D;QAC5D,oHAAiE;QACnE,4DAAQ;QACR,gFAIiB;QACnB,4DAAM;;QA3CmF,0DAAqC;QAArC,6IAAqC;QAG3G,0DAAyB;QAAzB,sFAAyB;QAgCpB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAG1D,0DAA+B;QAA/B,kJAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDkB;AACV;AACY;AACvB;;;;;;;;;;;;ICqB1B,yEAAsD;IACpD,uEACF;IAAA,4DAAK;;;IACL,yEAA0D;IACxD,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,iGACF;;;IAIA,yEAAsD;IAAA,+DAAI;IAAA,4DAAK;;;IAC/D,yEAA4D;IAC1D,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,mGACF;;;IAIA,yEAAsD;IACpD,wEACF;IAAA,4DAAK;;;IACL,yEAAmE;IACjE,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,0GACF;;;IAIA,yEAAsD;IAAA,iEAAM;IAAA,4DAAK;;;;IACjE,yEAAuC;IACrC,uDACA;IAAA,6EAKC;IAFC,sWAAS,2FAAqB,KAAC;IAG/B,qEAAkD;IACpD,4DAAS;;;IART,0DACA;IADA,qGACA;;;IAYF,yEAAsD;IAAA,gEAAK;IAAA,4DAAK;;;IAChE,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,2GACF;;;IAIA,yEAAsD;IAAA,mEAAQ;IAAA,4DAAK;;;IACnE,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,yGACF;;;IAIA,yEAAsD;IAAA,oEAAS;IAAA,4DAAK;;;IACpE,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;;IADH,0DACF;IADE,6HACF;;;IAIA,yEAAsD;IAAA,+DAAI;IAAA,4DAAK;;;;IAC/D,yEAA4D;IAC1D,qEAIE;IACJ,4DAAK;;;IAJD,0DAAmD;IAAnD,oKAAmD;;;IAOzD,oEAA4D;;;IAC5D,oEAAiE;;;;ADlFpE,MAAM,uBAAuB;IAmBlC,YACU,cAA8B,EAC/B,cAA8B,EAC7B,wBAAkD;QAFlD,mBAAc,GAAd,cAAc,CAAgB;QAC/B,mBAAc,GAAd,cAAc,CAAgB;QAC7B,6BAAwB,GAAxB,wBAAwB,CAA0B;QArB5D,eAAU,GAAG,IAAI,uEAAkB,EAAW,CAAC;QAE/C,gBAAW,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAGtC,2EAA2E;QAC3E,oDAAoD;QACpD,qBAAgB,GAAa;YAC3B,WAAW;YACX,aAAa;YACb,oBAAoB;YACpB,eAAe;YACf,cAAc;YACd,iBAAiB;YACjB,cAAc;YACd,MAAM;SACP,CAAC;IAMC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc;aAC3C,gBAAgB,EAAE;aAClB,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;YACjC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,QAAQ,CAAC,WAAmB;QAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,mBAAmB;YAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IACvE,CAAC;IAED,YAAY,CAAC,OAAO;QAClB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,wBAAwB;aAC1B,KAAK,EAAE;aACP,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,KAAK,OAAO,EAAE;oBACnB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACzB;YACH,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB,CAAC,OAAO;QAC3B,OAAO,CACL,OAAO,CAAC,YAAY;YACpB,OAAO,CAAC,YAAY,GAAG,IAAI,GAAG,OAAO,CAAC,eAAe,CACtD,CAAC;IACJ,CAAC;;8FAvEU,uBAAuB;qHAAvB,uBAAuB;kEAIvB,2DAAO;kEACP,qEAAY;;;;;;QCpBzB,yEAA8C;QAIf,mEAAQ;QAAA,4DAAK;QACpC,gEAAM;QACR,4DAAM;QACN,yEAA4B;QAKxB,oJAAS,iCAA6B,IAAC;QAJzC,4DAME;QACF,oEAKE;QACJ,4DAAM;QACN,0EAA2B;QAEvB,6EAAuC;QACrC,oHAEK;QACL,oHAEK;QACP,qEAAe;QAEf,6EAAyC;QACvC,oHAA+D;QAC/D,oHAEK;QACP,qEAAe;QAEf,6EAAgD;QAC9C,oHAEK;QACL,oHAEK;QACP,qEAAe;QAEf,6EAA2C;QACzC,oHAAiE;QACjE,oHAUK;QACP,qEAAe;QAEf,6EAA0C;QACxC,oHAAgE;QAChE,oHAEK;QACP,qEAAe;QAEf,6EAA6C;QAC3C,oHAAmE;QACnE,oHAEK;QACP,qEAAe;QAEf,6EAA0C;QACxC,oHAAoE;QACpE,oHAEK;QACP,qEAAe;QAEf,6EAAkC;QAChC,oHAA+D;QAC/D,oHAMK;QACP,qEAAe;QAEf,oHAA4D;QAC5D,oHAAiE;QACnE,4DAAQ;QACR,gFAIiB;QACnB,4DAAM;QAIZ,sFAAmD;;QAzFzC,0DAA6B;QAA7B,6IAA6B;QAId,0DAAyB;QAAzB,sFAAyB;QAyEpB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAG1D,0DAA+B;QAA/B,kJAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;IE3EjB,wEAAyD;IACjD,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAAkC;IAAA,4DAAK;IAC3C,qEAAI;IAAA,uDAA0B;IAAA,4DAAK;IACnC,qEAAI;IAAA,wDAAgC;IAAA,4DAAK;IACzC,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACnC,0EAAkC;IAAoB,iWAAS,oGAAgC,KAAC;IAAC,oEAA+D;IAAA,4DAAS;IACzK,0EAAkC;IAAyE,oEAA8D;IAAA,4DAAS;;;IAT9K,0DAAuB;IAAvB,qFAAuB;IACvB,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAkC;IAAlC,iGAAkC;IAClC,0DAA0B;IAA1B,wFAA0B;IAC1B,0DAAgC;IAAhC,8FAAgC;IAChC,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAAwB;IAAxB,sFAAwB;IACxB,0DAA0B;IAA1B,wFAA0B;IAEwB,0DAAmD;IAAnD,mKAAmD;;;ADzB9H,MAAM,oBAAoB;IAG/B,YAAoB,OAAuB,EAAU,MAAc;QAA/C,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFnE,aAAQ,GAAc,EAAE,CAAC;IAE6C,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,CAAC,IAAe,EAAE,EAAE;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACzF,CAAC;IAED,aAAa,CAAC,OAAgB,IAAG,CAAC;;wFAlBvB,oBAAoB;kHAApB,oBAAoB;QCVjC,qEAA6G;QAE7G,wEAAgC;QAAA,sFAA2B;QAAA,4DAAK;QAEhE,yEAAwD;QAQZ,sEAAU;QAAA,4DAAK;QAC/B,yEAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC1B,yEAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC1B,yEAAgB;QAAA,uEAAW;QAAA,4DAAK;QAChC,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,uEAAW;QAAA,4DAAK;QAChC,yEAAgB;QAAA,yEAAa;QAAA,4DAAK;QAClC,0EAAgB;QAAuF,uEAAW;QAAA,4DAAS;QAGnI,iEAAI;QACJ,yEAAO;QACH,mHAWK;QACT,4DAAQ;;QAjBwE,2DAA8B;QAA9B,6IAA8B;QAK9D,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;AClBxE,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;2GAAb,aAAa;QCP1B,oEAA4B;;;;;;;;;;;;;;;;;;;;;;;ACQsD;;;;;;;;;ICkClE,sEAAwE;IACtE,uEACF;IAAA,4DAAM;;;IACN,sEAAqF;IACnF,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,4JACF;;;IANF,0EAAmG;IACjG,2HAEM;IACN,2HAEM;IACR,4DAAM;;;IANE,0DAAgE;IAAhE,mIAAgE;IAGhE,0DAA6E;IAA7E,gJAA6E;;;IAiBnF,sEAAqE;IACnE,uEACF;IAAA,4DAAM;;;IACN,sEAAkF;IAChF,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,yJACF;;;IANF,0EAAgG;IAC9F,2HAEM;IACN,2HAEM;IACR,4DAAM;;;IANE,0DAA6D;IAA7D,gIAA6D;IAG7D,0DAA0E;IAA1E,6IAA0E;;;IASlF,sEAGQ;;;IAMZ,0EAA8D;IAC5D,yFACF;IAAA,4DAAM;;;;;;ADjET,MAAM,uBAAuB;IAOlC,YACU,WAAwB,EACzB,cAA8B,EAC7B,MAAc,EACd,YAA0B;QAH1B,gBAAW,GAAX,WAAW,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QATpC,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,WAAW,CAAC;IAQpB,CAAC;IAEJ,WAAW;QACT,IAAI,IAAI,CAAC,yBAAyB;YAChC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;IACjD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK;YAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,QAAQ;QACtB,QAAQ,CAAC,QAAQ,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,WAAW;aAC9C,oBAAoB,CAAC,QAAQ,CAAC;aAC9B,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YAC3C,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACvC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YAErC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,KAAK,gBAAgB;gBAC1C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBACxD,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACN,CAAC;IAED,qBAAqB;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACtD,IAAI,GAAG,KAAK,IAAI;YAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,gBAAgB,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,4DAAgB,CAAC;YAC5C,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;gBACzE,+DAAmB;aACpB,CAAC;YACF,WAAW,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC9D,cAAc,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAClE,CAAC,CAAC;IACL,CAAC;;8FAnEU,uBAAuB;qHAAvB,uBAAuB;QCpBpC,yEAA0C;QAIlC,oEACM;QACN,yEAA6B;QAGvB,oEAA0E;QAG5E,4DAAM;QACN,4EAID;QADC,oJAAY,mBAAe,IAAC;QAE5B,2EAAwB;QACtB,wEAME;QACJ,4DAAM;QAEN,2EAAwB;QAEpB,wDACF;QAAA,4DAAQ;QACR,wEAQE;QACF,sHAOM;QACR,4DAAM;QAEN,2EAAwB;QACtB,wEAQE;QACF,sHAOM;QACR,4DAAM;QACN,8EAGC;QACC,wHAGQ;QACR,4EACF;QAAA,4DAAS;QAEX,iEAAI;QAEJ,sHAEM;QACN,2EAAyB;QACyC,gEAAI;QAAA,4DAAI;QACxE,+DACA;QAAA,yEAAuD;QAAC,kEAAK;QAAA,4DAAI;;QAhF7C,0DAAoB;QAApB,8IAAoB;QACnB,0DAAoB;QAApB,8IAAoB;QAKzC,0DAA+B;QAA/B,4FAA+B;QAe3B,0DACF;QADE,wFACF;QAQE,0DAAuF;QAAvF,iNAAuF;QAE1D,0DAAkE;QAAlE,sIAAkE;QAkB/F,0DAAoF;QAApF,8MAAoF;QAEvD,0DAA+D;QAA/D,mIAA+D;QAc3F,0DAA4B;QAA5B,4FAA4B;QAQ7B,0DAAa;QAAb,6EAAa;QAIO,0DAAuC;QAAvC,8IAAuC;QAEvC,0DAA8B;QAA9B,8IAA8B;;;;;;;;;;;;;;;;;;;;;;;;AC7E1C;AAMmC;;;;;;;;;ICkBzC,sEAA0D;IACxD,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,8IAIF;;;IAhBF,0EAGC;IACC,kHAEM;IACN,kHASM;IACR,4DAAM;;;IAbE,0DAAkD;IAAlD,qHAAkD;IAIrD,0DAGrB;IAHqB,kIAGrB;;;IAyBkB,sEAA0D;IACxD,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,8IAIF;;;IAhBF,0EAGC;IACC,kHAEM;IACN,kHASM;IACR,4DAAM;;;IAbE,0DAAkD;IAAlD,qHAAkD;IAIrD,0DAGrB;IAHqB,kIAGrB;;;IAUgB,sEAGQ;;;;;;AD5DjB,MAAM,cAAc;IAOzB,YACU,WAAwB,EACxB,MAAc,EACf,cAA8B,EAC7B,KAAqB,EACrB,iBAAoC,EACpC,MAAc;QALd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACf,mBAAc,GAAd,cAAc,CAAgB;QAC7B,UAAK,GAAL,KAAK,CAAgB;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAXxB,cAAS,GAAG,KAAK,CAAC;QA2DlB,SAAI,GAAG,4CAA4C,CAAC;IA/CjD,CAAC;IAEJ,WAAW;QACT,IAAI,IAAI,CAAC,iBAAiB;YAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACnE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;QACrE,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,MAAc,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACjD,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK;YAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,UAAU,CAAC,QAAa;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjE,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACvC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,KAAK,gBAAgB;gBAC1C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBAChD,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,4DAAgB,CAAC;YACpC,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3D,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAC5D,CAAC,CAAC;IACL,CAAC;IAMM,UAAU;QACf,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBAC3B,SAAS,EAAE,oFAA0B;aACtC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IACM,YAAY,CAAC,OAAO;QACzB,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,UAAU,EAAE,EAAE,CACxD,IAAI,CAAC,MAAM,CAAC,GAAG,CACb,GAAG,EAAE;YACH,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,iBAAiB;iBACnB,2BAA2B,CAAC;gBAC3B,KAAK,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC,QAAQ;gBAC5C,KAAK,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE;aAC/C,CAAC;iBACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG;oBACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACvC;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,EAAE;wBAC7C,KAAK,EAAE;4BACL,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,EAAE;yBAC3D;qBACF,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC,MAAM,CAAC;QACd,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAChC,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACT,MAAc,CAAC,WAAW,GAAG;YAC5B,EAAE,CAAC,IAAI,CAAC;gBACN,KAAK,EAAE,sFAA4B;gBACnC,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,IAAI;gBACX,OAAO,EAAE,MAAM;aAChB,CAAC,CAAC;YACH,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE;YACjB,IAAI,EAAE,EACJ,GAAG,GAAG,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;gBACxB,OAAO;aACR;YACD,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;YACX,EAAE,CAAC,GAAG,GAAG,2CAA2C,CAAC;YACrD,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW;QACT,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,EAAE,CACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;YACnB,IAAI,QAAQ,CAAC,YAAY,EAAE;gBACzB,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE;oBAE/C,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;oBACpC,IAAI,CAAC,iBAAiB;yBACnB,6BAA6B,CAAC;wBAC7B,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,WAAW;wBACxC,KAAK,EAAE,GAAG,CAAC,KAAK;qBACjB,CAAC;yBACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;wBACjB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;wBACrC,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG;4BACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;6BACvC;4BACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,EAAE;gCAC7C,KAAK,EAAE;oCACL,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,KAAK,EAAE;iCAClC;6BACF,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC,MAAM,CAAC;gBACd,CAAC,CAAC,CAAC;aACJ;;gBAAM,MAAM,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACpD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;4EA5JU,cAAc;4GAAd,cAAc;QC5B3B,yEAA0C;QAIlC,oEAAmC;QACnC,yEAA6B;QAGvB,oEAIE;QAOJ,4DAAM;QACN,4EAAgE;QAArB,2IAAY,WAAO,IAAC;QAC7D,2EAAwB;QACtB,wEASE;QACF,6GAiBM;QACR,4DAAM;QACN,2EAAwB;QACtB,wEAWE;QACF,6GAiBM;QACR,4DAAM;QAEN,8EAAoD;QAClD,+GAGQ;QACR,mEACF;QAAA,4DAAS;QACT,yEACG;QAAA,qEACH;QAAA,4DAAI;QACJ,iEAAI;QAEJ,2EAAoB;QAClB,sEAKE;QACF,2EAKE;QADA,oIAAS,iBAAa,IAAC;QAJzB,4DAKE;QAEJ,iEAAM;QACR,4DAAO;QACP,2EAAyB;QAEpB,6EACH;QAAA,4DAAI;;QAzGF,0DAAoB;QAApB,8IAAoB;QAKpB,0DAAoB;QAApB,8IAAoB;QAKL,0DAAuB;QAAvB,oFAAuB;QAOpC,0DAEE;QAFF,mMAEE;QAKD,0DAAoD;QAApD,wHAAoD;QA0BrD,0DAEE;QAFF,mMAEE;QAID,0DAAoD;QAApD,wHAAoD;QAoBpD,0DAA4B;QAA5B,4FAA4B;QAKE,0DAAiC;QAAjC,8IAAiC;QAsBjD,0DAAuC;QAAvC,8IAAuC;;;;;;;;;;;;;;;;;;;;;;ACzGU;;;;;;;;ICsBxD,sEAA0D;IAAA,qEAAU;IAAA,4DAAM;;;IAC1E,sEAAuE;IACnE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,+IACJ;;;IAJF,0EAAqF;IACnF,qHAA0E;IAC1E,qHAEM;IACR,4DAAM;;;IAJE,0DAAkD;IAAlD,qHAAkD;IAClD,0DAA+D;IAA/D,kIAA+D;;;IAkBrE,sEAAyD;IAAA,qEAAU;IAAA,4DAAM;;;IACzE,sEAAsE;IAClE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,8IACJ;;;IAJF,0EAAoF;IAClF,qHAAyE;IACzE,qHAEM;IACR,4DAAM;;;IAJE,0DAAiD;IAAjD,oHAAiD;IACjD,0DAA8D;IAA9D,iIAA8D;;;IAoBpE,sEAAwD;IAAA,qEAAU;IAAA,4DAAM;;;IACxE,sEAAqE;IACjE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,6IACJ;;;IAJF,0EAAmF;IACjF,qHAAwE;IACxE,qHAEM;IACR,4DAAM;;;IAJE,0DAAgD;IAAhD,mHAAgD;IAChD,0DAA6D;IAA7D,gIAA6D;;;IAkBnE,sEAAwD;IAAA,qEAAU;IAAA,4DAAM;;;IACxE,sEAAqE;IACjE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,6IACJ;;;IAJF,0EAAmF;IACjF,qHAAwE;IACxE,qHAEM;IACR,4DAAM;;;IAJE,0DAAgD;IAAhD,mHAAgD;IAChD,0DAA6D;IAA7D,gIAA6D;;;IAsBjE,sEAA6D;IAAA,qEAAU;IAAA,4DAAM;;;IAC7E,sEAA8D;IAAA,8EAAmB;IAAA,4DAAM;;;IACvF,sEAA8D;IAAA,gFAAqB;IAAA,4DAAM;;;IAH3F,0EAAwF;IACtF,qHAA6E;IAC7E,qHAAuF;IACvF,qHAAyF;IAC3F,4DAAM;;;IAHE,0DAAqD;IAArD,wHAAqD;IACrD,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAsD;IAAtD,yHAAsD;;;IAgB5D,sEAA8D;IAAA,qEAAU;IAAA,4DAAM;;;IAC9E,sEAA+D;IAAA,8EAAmB;IAAA,4DAAM;;;IACxF,sEAA+D;IAAA,gFAAqB;IAAA,4DAAM;;;IAH5F,0EAAyF;IACvF,qHAA8E;IAC9E,qHAAwF;IACxF,qHAA0F;IAC5F,4DAAM;;;IAHE,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAuD;IAAvD,0HAAuD;IACvD,0DAAuD;IAAvD,0HAAuD;;;IAkB7D,sEAA6D;IAAA,qEAAU;IAAA,4DAAM;;;IAC7E,sEAA8D;IAAA,8EAAmB;IAAA,4DAAM;;;IACvF,sEAA8D;IAAA,gFAAqB;IAAA,4DAAM;;;IAH3F,0EAAwF;IACtF,qHAA6E;IAC7E,qHAAuF;IACvF,qHAAyF;IAC3F,4DAAM;;;IAHE,0DAAqD;IAArD,wHAAqD;IACrD,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAsD;IAAtD,yHAAsD;;;IAgB5D,sEAAgE;IAAA,qEAAU;IAAA,4DAAM;;;IAChF,sEAA+D;IAAA,8EAAmB;IAAA,4DAAM;;;IAF1F,0EAA2F;IACzF,qHAAgF;IAChF,qHAAwF;IAC1F,4DAAM;;;IAFE,0DAAwD;IAAxD,2HAAwD;IACxD,0DAAuD;IAAvD,0HAAuD;;;IAoB/D,sEAAyD;IAAA,qEAAU;IAAA,4DAAM;;;IACzE,sEAAsE;IAClE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,8IACJ;;;IAJF,0EAAoF;IAClF,qHAAyE;IACzE,qHAEM;IACR,4DAAM;;;IAJE,0DAAiD;IAAjD,oHAAiD;IACjD,0DAA8D;IAA9D,iIAA8D;;;IAmBpE,sEAA0D;IAAA,qEAAU;IAAA,4DAAM;;;IAAA,sEAAoE;IAAA,4EAAiB;IAAA,4DAAM;;;IACrK,sEAAuE;IACnE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,+IACJ;;;IAJF,0EAAqF;IACnF,qHAA0E;IAAA,qHAA2F;IACrK,qHAEM;IACR,4DAAM;;;IAJE,0DAAkD;IAAlD,qHAAkD;IAAwB,0DAA4D;IAA5D,+HAA4D;IACtI,0DAA+D;IAA/D,kIAA+D;;;IAoBrE,sEAAyD;IAAA,qEAAU;IAAA,4DAAM;;;IACzE,sEAAsE;IAClE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,8IACJ;;;IAJF,0EAAoF;IAClF,qHAAyE;IACzE,qHAEM;IACR,4DAAM;;;IAJE,0DAAiD;IAAjD,qHAAiD;IACjD,0DAA8D;IAA9D,kIAA8D;;;IASpE,sEAAqF;;;IAM7F,0EAA8D;IAC5D,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,2FACF;;;;;ADpOX,MAAM,iBAAiB;IAO5B,2CAA2C;IAE3C,YACU,iBAAoC,EACrC,cAA8B,EAC7B,MAAc;QAFd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACrC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QAVxB,cAAS,GAAG,KAAK,CAAC;QAGlB,YAAO,GAAG,IAAI,CAAC;QACf,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QAQlG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK;YAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED,OAAO,CAAC,QAAQ;QACd,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB;aAC9C,OAAO,CAAC,QAAQ,CAAC;aACjB,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO;gBACV,oCAAoC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC5D,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,KAAK,gBAAgB;gBAC1C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBAC/C,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAgB,CAClC;YACE,SAAS,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5D,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC1D,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC1D,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3D,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3D,SAAS,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5D,OAAO,EAAE,IAAI,4DAAgB,CAAC;gBAC5B,KAAK,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAChC,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAC/B,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAC/B,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAClC,+DAAmB;oBACnB,8DAAkB,CAAC,UAAU,CAAC;iBAC/B,CAAC;aACH,CAAC;SACH,EACD,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,CACnC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,OAA2B;QACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC/C,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACjD,IAAI,QAAQ,IAAI,SAAS,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;SAClE;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;;kFA9FU,iBAAiB;+GAAjB,iBAAiB;QCpB9B,yEAA0C;QAQ5B,oEAA4E;QAE9E,4DAAM;QAKN,0EAAuD;QAAjD,6IAAY,gBAAY,IAAC;QACzB,0EAAiB;QAIA,sEAAU;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DACnC;QAAA,wEAOC;QACF,gHAKM;QACR,4DAAM;QAER,0EAAiB;QAEiB,qEAAS;QAAA,4DAAS;QAC/C,wEAOC;QACF,gHAKM;QACR,4DAAM;QAGV,0EAAiB;QAGkB,oEAAQ;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DACnD;QAAA,wEAOC;QACF,gHAKM;QACR,4DAAM;QAER,0EAAiB;QAEgB,iEAAK;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DAChD;QAAA,wEAOC;QACF,gHAKM;QACR,4DAAM;QAGV,uEAAK;QAK6B,gEAAI;QAAA,4DAAS;QACtC,wEAOC;QACF,gHAIM;QACR,4DAAM;QAER,0EAAiB;QAEgB,iEAAK;QAAA,4DAAS;QAC1C,wEAOC;QACF,gHAIM;QACR,4DAAM;QAGV,0EAAiB;QAGe,gEAAI;QAAA,4DAAS;QACtC,wEAOC;QACF,gHAIM;QACR,4DAAM;QAER,0EAAiB;QAEe,mEAAO;QAAA,4DAAS;QAC3C,wEAOC;QACF,gHAGM;QACR,4DAAM;QAKZ,0EAAiB;QAGmB,oEAAQ;QAAA,4DAAS;QAC9C,wEAOC;QACF,gHAKM;QACR,4DAAM;QAER,0EAAiB;QAGF,6EAAiB;QAAA,4DAAS;QACpC,wEAOC;QACF,gHAKM;QACR,4DAAM;QAGV,0EAAiB;QAGmB,oEAAQ;QAAA,4DAAS;QAC9C,wEAOC;QACF,gHAKM;QACR,4DAAM;QAER,0EAAiB;QAGX,oHAAqF;QACrF,uEACF;QAAA,4DAAS;QAIf,kHAEM;QACZ,4DAAO;QACP,4EAAyB;QACvB,kEAAI;QACJ,0EACG;QAAA,2EACH;QAAA,4DAAI;;QAtPC,0DAAoB;QAApB,8IAAoB;QAOK,0DAAsB;QAAtB,mFAAsB;QAYxC,0DAA0E;QAA1E,mMAA0E;QAE7C,0DAAoD;QAApD,wHAAoD;QAiBjF,0DAAyE;QAAzE,kMAAyE;QAE5C,0DAAmD;QAAnD,uHAAmD;QAmBhF,0DAAwE;QAAxE,iMAAwE;QAE3C,0DAAkD;QAAlD,sHAAkD;QAiB/E,0DAAwE;QAAxE,iMAAwE;QAE3C,0DAAkD;QAAlD,sHAAkD;QAoB7E,0DAA6E;QAA7E,sMAA6E;QAGhD,0DAAuD;QAAvD,2HAAuD;QAepF,0DAA8E;QAA9E,uMAA8E;QAGjD,0DAAwD;QAAxD,4HAAwD;QAiBrF,0DAA6E;QAA7E,sMAA6E;QAGhD,0DAAuD;QAAvD,2HAAuD;QAgBpF,0DAAgF;QAAhF,yMAAgF;QAEnD,0DAA0D;QAA1D,8HAA0D;QAmBzF,0DAAyE;QAAzE,kMAAyE;QAE5C,0DAAmD;QAAnD,uHAAmD;QAkBhF,0DAA0E;QAA1E,mMAA0E;QAE7C,0DAAoD;QAApD,wHAAoD;QAmBjF,0DAAyE;QAAzE,kMAAyE;QAE5C,0DAAmD;QAAnD,uHAAmD;QAWzE,0DAA4B;QAA5B,4FAA4B;QAMrC,0DAAa;QAAb,6EAAa;QAMJ,0DAA8B;QAA9B,8IAA8B;;;;;;;;;;;;;;;;;;;;;;;ACpPmB;;;;;;;;;ICgBhE,sEAAoE;IAAA,qEAAU;IAAA,4DAAM;;;IACpF,sEAAiF;IAC7E,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,wJACJ;;;IAJF,0EAA+F;IAC7F,4HAAoF;IACpF,4HAEM;IACR,4DAAM;;;IAJE,0DAA4D;IAA5D,+HAA4D;IAC5D,0DAAyE;IAAzE,4IAAyE;;;IAMjF,sEAAqF;;;;;ADX9F,MAAM,wBAAwB;IAKnC,YACU,WAAwB,EACxB,MAAc,EACf,cAA8B,EAC7B,YAA0B;QAH1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACf,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAc;QANpC,cAAS,GAAG,KAAK,CAAC;IAOf,CAAC;IAEJ,WAAW;QACT,IAAI,IAAI,CAAC,gBAAgB;YAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACjE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK;YAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,UAAU,CAAC,QAAQ;QACjB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW;aACrC,qBAAqB,CAAC,QAAQ,CAAC;aAC/B,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QACpD,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,KAAK,gBAAgB;gBAC1C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBAC1D,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACN,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,mBAAmB,GAAG,IAAI,4DAAgB,CAAC;YAC9C,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAC5D,CAAC,CAAC;IACL,CAAC;;gGArDU,wBAAwB;sHAAxB,wBAAwB;QCpBrC,yEAA0C;QAIlC,oEACM;QACN,yEAA6B;QAGvB,oEAA0E;QAG5E,4DAAM;QACN,4EAA2F;QAArC,qJAAY,2BAAuB,IAAC;QACxF,2EAAwB;QACtB,wEAOE;QACF,uHAKM;QACR,4DAAM;QACN,8EAAoD;QAClD,yHAAqF;QACrF,qFACF;QAAA,4DAAS;QAGX,iEAAI;QACJ,2EAAyB;QAC2B,yEAAa;QAAA,4DAAI;;QA7BjD,0DAAoB;QAApB,6IAAoB;QACnB,0DAAoB;QAApB,6IAAoB;QAGrB,0DAAiC;QAAjC,8FAAiC;QAQ/C,0DAAoF;QAApF,4MAAoF;QAEvD,0DAA8D;QAA9D,kIAA8D;QAQtF,0DAA4B;QAA5B,4FAA4B;QAOlB,0DAA8B;QAA9B,8IAA8B;;;;;;;;;;;;;;;;;;;;;;ACrCmB;;;;;;;;ICgCxD,sEAA0D;IAAA,qEAAU;IAAA,4DAAM;;;IAC1E,sEAAuE;IACnE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,+IACJ;;;IAJF,0EAAqF;IACnF,2HAA0E;IAC1E,2HAEM;IACR,4DAAM;;;IAJE,0DAAkD;IAAlD,qHAAkD;IAClD,0DAA+D;IAA/D,kIAA+D;;;IAkBrE,sEAAyD;IAAA,qEAAU;IAAA,4DAAM;;;IACzE,sEAAsE;IAClE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,8IACJ;;;IAJF,0EAAoF;IAClF,2HAAyE;IACzE,2HAEM;IACR,4DAAM;;;IAJE,0DAAiD;IAAjD,oHAAiD;IACjD,0DAA8D;IAA9D,iIAA8D;;;IAoBpE,sEAAwD;IAAA,qEAAU;IAAA,4DAAM;;;IACxE,sEAAqE;IACjE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,6IACJ;;;IAJF,0EAAmF;IACjF,2HAAwE;IACxE,2HAEM;IACR,4DAAM;;;IAJE,0DAAgD;IAAhD,mHAAgD;IAChD,0DAA6D;IAA7D,gIAA6D;;;IAkBnE,sEAAwD;IAAA,qEAAU;IAAA,4DAAM;;;IACxE,sEAAqE;IACjE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,6IACJ;;;IAJF,0EAAmF;IACjF,2HAAwE;IACxE,2HAEM;IACR,4DAAM;;;IAJE,0DAAgD;IAAhD,mHAAgD;IAChD,0DAA6D;IAA7D,gIAA6D;;;IAsBjE,sEAA6D;IAAA,qEAAU;IAAA,4DAAM;;;IAC7E,sEAA8D;IAAA,8EAAmB;IAAA,4DAAM;;;IACvF,sEAA8D;IAAA,gFAAqB;IAAA,4DAAM;;;IAH3F,0EAAwF;IACtF,2HAA6E;IAC7E,2HAAuF;IACvF,2HAAyF;IAC3F,4DAAM;;;IAHE,0DAAqD;IAArD,wHAAqD;IACrD,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAsD;IAAtD,yHAAsD;;;IAgB5D,sEAA8D;IAAA,qEAAU;IAAA,4DAAM;;;IAC9E,sEAA+D;IAAA,8EAAmB;IAAA,4DAAM;;;IACxF,sEAA+D;IAAA,gFAAqB;IAAA,4DAAM;;;IAH5F,0EAAyF;IACvF,2HAA8E;IAC9E,2HAAwF;IACxF,2HAA0F;IAC5F,4DAAM;;;IAHE,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAuD;IAAvD,0HAAuD;IACvD,0DAAuD;IAAvD,0HAAuD;;;IAkB7D,sEAA6D;IAAA,qEAAU;IAAA,4DAAM;;;IAC7E,sEAA8D;IAAA,8EAAmB;IAAA,4DAAM;;;IACvF,sEAA8D;IAAA,gFAAqB;IAAA,4DAAM;;;IAH3F,0EAAwF;IACtF,2HAA6E;IAC7E,2HAAuF;IACvF,2HAAyF;IAC3F,4DAAM;;;IAHE,0DAAqD;IAArD,wHAAqD;IACrD,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAsD;IAAtD,yHAAsD;;;IAgB5D,sEAAgE;IAAA,qEAAU;IAAA,4DAAM;;;IAChF,sEAA+D;IAAA,8EAAmB;IAAA,4DAAM;;;IAF1F,0EAA2F;IACzF,2HAAgF;IAChF,2HAAwF;IAC1F,4DAAM;;;IAFE,0DAAwD;IAAxD,2HAAwD;IACxD,0DAAuD;IAAvD,0HAAuD;;;IAW/D,sEAAqF;;;IAM7F,0EAA8D;IAC5D,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,0FACF;;;;;ADnLX,MAAM,uBAAuB;IAUlC,2CAA2C;IAE3C,YACU,iBAAoC,EACrC,cAA8B,EAC7B,MAAc;QAFd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACrC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QAZxB,cAAS,GAAG,KAAK,CAAC;QAGlB,YAAO,GAAG,IAAI,CAAC;QACf,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;aACtE,WAAW,EAAE;aACb,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAOb,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO;QAChD,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC;QACzD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK;YAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED,OAAO,CAAC,QAAQ;QAEd,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB;aAC9C,YAAY,CAAC,QAAQ,CAAC;aACtB,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO;gBACV,kCAAkC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC1D,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,KAAK,gBAAgB;gBAC1C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBAC/C,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAgB,CAAC;YACnC,SAAS,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5D,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC1D,OAAO,EAAE,IAAI,8DAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAClE,OAAO,EAAE,IAAI,4DAAgB,CAAC;gBAC5B,KAAK,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAChC,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAC/B,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAC/B,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAClC,+DAAmB;oBACnB,8DAAkB,CAAC,UAAU,CAAC;iBAC/B,CAAC;aACH,CAAC;SACH,CAAC,CAAC;IACL,CAAC;;8FApFU,uBAAuB;qHAAvB,uBAAuB;QCZpC,yEAA0C;QAQ5B,oEAA4E;QAE5E,wEAAuB;QACrB,4FACF;QAAA,4DAAK;QAMP,2EAAuD;QAAjD,oJAAY,gBAAY,IAAC;QACzB,0EAAiB;QAIA,sEAAU;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DACnC;QAAA,wEAOC;QACF,sHAKM;QACR,4DAAM;QAER,2EAAiB;QAEiB,qEAAS;QAAA,4DAAS;QAC/C,wEAOC;QACF,sHAKM;QACR,4DAAM;QAGV,0EAAiB;QAGkB,oEAAQ;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DACnD;QAAA,wEAOC;QACF,sHAKM;QACR,4DAAM;QAER,2EAAiB;QAEgB,iEAAK;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DAChD;QAAA,wEAOC;QACF,sHAKM;QACR,4DAAM;QAGV,uEAAK;QAK6B,gEAAI;QAAA,4DAAS;QACtC,wEAOC;QACF,sHAIM;QACR,4DAAM;QAER,2EAAiB;QAEgB,iEAAK;QAAA,4DAAS;QAC1C,wEAOC;QACF,sHAIM;QACR,4DAAM;QAGV,0EAAiB;QAGe,gEAAI;QAAA,4DAAS;QACtC,wEAOC;QACF,sHAIM;QACR,4DAAM;QAER,2EAAiB;QAEe,mEAAO;QAAA,4DAAS;QAC3C,wEAOC;QACF,sHAGM;QACR,4DAAM;QAKZ,0EAAiB;QAIT,wHAAqF;QACrF,sEACF;QAAA,4DAAS;QAIf,sHAEM;QACZ,4DAAO;QACP,2EAAyB;QACvB,iEAAI;QACJ,yEACG;QAAA,0EACH;QAAA,4DAAI;;QA7LC,0DAAoB;QAApB,8IAAoB;QAUK,0DAAsB;QAAtB,mFAAsB;QAYxC,0DAA0E;QAA1E,mMAA0E;QAE7C,0DAAoD;QAApD,wHAAoD;QAiBjF,0DAAyE;QAAzE,kMAAyE;QAE5C,0DAAmD;QAAnD,uHAAmD;QAmBhF,0DAAwE;QAAxE,iMAAwE;QAE3C,0DAAkD;QAAlD,sHAAkD;QAiB/E,0DAAwE;QAAxE,iMAAwE;QAE3C,0DAAkD;QAAlD,sHAAkD;QAoB7E,0DAA6E;QAA7E,sMAA6E;QAGhD,0DAAuD;QAAvD,2HAAuD;QAepF,0DAA8E;QAA9E,uMAA8E;QAGjD,0DAAwD;QAAxD,4HAAwD;QAiBrF,0DAA6E;QAA7E,sMAA6E;QAGhD,0DAAuD;QAAvD,2HAAuD;QAgBpF,0DAAgF;QAAhF,yMAAgF;QAEnD,0DAA0D;QAA1D,8HAA0D;QAalF,0DAA4B;QAA5B,4FAA4B;QAMrC,0DAAa;QAAb,6EAAa;QAMJ,0DAA8B;QAA9B,8IAA8B;;;;;;;;;;;;;;;;;;AC5LxD,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;8GAAhB,gBAAgB;QCP7B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;ACAtB;;;;;;GAMG;AAC4E;;;;;ICmBzE,2EACG;IAAA,uDACH;IAAA,4DAAO;;;IADJ,0DACH;IADG,qGACH;;;;IAEF,0EAME;IALA,iSAAS,gFAAe,KAAC;IAD3B,4DAME;;;IACF,sEAGQ;;;AD1BL,MAAM,qBAAqB;IAoBhC;QAJA,oBAAe,GAAG,IAAI,uDAAY,EAAU,CAAC;IAI9B,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,aAAa;QACX,OAAO,IAAI,CAAC,eAAe,IAAI,CAAC;YAC9B,CAAC,CAAC,IAAI,CAAC,YAAY;YACnB,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;IAC1E,CAAC;IAED,aAAa;QACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;;0FAhCU,qBAAqB;mHAArB,qBAAqB;QCdlC,yEAA0B;QAItB,oKAA6B,iCAAiC,IAAC;QAHjE,4DAKE;QACF,yEAA6B;QAGvB,uDACA;QAAA,oEAKE;QACJ,4DAAI;QACJ,uEAA+B;QAAA,uDAAwB;QAAA,4DAAI;QAE7D,yEAA8B;QAC5B,qEAA6C;QAC7C,wEAAM;QAAC,wDAAsB;QAAA,4DAAO;QAEtC,0EAA2B;QACzB,wDACA;QAAA,sHAEO;QACT,4DAAM;QACN,oHAME;QACF,sHAGQ;QACV,4DAAM;;QAvCJ,0DAAmB;QAAnB,6IAAmB;QAQf,0DACA;QADA,2FACA;QAEE,0DAAuC;QAAvC,6JAAuC;QAKZ,0DAAwB;QAAxB,uFAAwB;QAIhD,0DAAsB;QAAtB,+FAAsB;QAG7B,0DACA;QADA,sGACA;QAAsB,0DAAyB;QAAzB,yFAAyB;QAS9C,0DAA2C;QAA3C,kJAA2C;QAG3C,0DAAkE;QAAlE,0IAAkE;;;;;;;;;;;;;;;;;;;;;;;AC3B3B;;;;;;;;;ICL1C,0EAAgE;IAC9D,qIAEA;IAAA,4EAAiD;IAC/C,yEACF;IAAA,4DAAS;;IAFmB,0DAAoB;IAApB,6IAAoB;;;;IAKhD,yFAWC;IAFC,0VAAmB,mFAAkB,KAAC;IAEvC,4DAAqB;;;;IAVpB,wFAA4B;;;IAFhC,0EAA4D;IAC1D,iJAWsB;IACxB,4DAAM;;;IAFe,0DAAiB;IAAjB,sHAAiB;;;ADFnC,MAAM,gBAAgB;IAS3B,YACU,QAAkB,EACnB,cAA8B,EAC7B,WAAwB;QAFxB,aAAQ,GAAR,QAAQ,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,gBAAW,GAAX,WAAW,CAAa;QARlC,iBAAY,GAAG;YACb,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,IAAI;SAChB,CAAC;IAMC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW;aACb,iBAAiB,EAAE;aACnB,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;gBAChB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3C,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;SACrD,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,qBAAqB,CAAC,eAAiC;QACrD,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAC5B,KAAK,MAAM,GAAG,IAAI,eAAe,EAAE;YACjC,mBAAmB,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;YACzD,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,eAAe,KAAK,CAAC;gBAC5C,aAAa,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;;gBAC/C,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAE/C,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;IAC1C,CAAC;IAED,cAAc,CAAC,cAA8B;QAC3C,OAAO,CACL,cAAc,CAAC,YAAY;YAC3B,cAAc,CAAC,YAAY,GAAG,IAAI,GAAG,cAAc,CAAC,eAAe,CACpE,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,SAAiB;QAC1B,IAAI,CAAC,YAAY,GAAG;YAClB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,IAAI;SACd,CAAC;QACF,IAAI,CAAC,WAAW;aACb,kBAAkB,CAAC,SAAS,CAAC;aAC7B,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG;gBAClC,OAAO,EAAE,KAAK;gBACd,SAAS,EAAE,IAAI;aAChB;SACF,CAAC,CAAC;IACP,CAAC;;gFA1EU,gBAAgB;8GAAhB,gBAAgB;QCtB7B,yEAA8C;QAGjB,qEAAU;QAAA,4DAAK;QACtC,gEAAM;QACR,4DAAM;QACN,4GAMM;QACN,4GAaM;QACN,yEAA4B;QAC1B,gEAAM;QAEN,yEAAuB;QAAA,2EAAe;QAAA,4DAAK;QAC3C,iEAAM;QACR,4DAAM;QACN,uEAAK;QAED,yEAAY;QAAA,2EAAmB;QAAA,wDAA4B;QAAA,4DAAO;QAEpE,wEAAmB;QACjB,wFAA2B;QAAA,2EACxB;QAAA,wDACH;QAAA,4DAAO;QAEX,0EAA+B;QAE3B,+EACF;QAAA,4DAAS;QACT,8EAA6G;QAC3G,sEACF;QAAA,4DAAS;;QA1CkB,0DAAiC;QAAjC,4HAAiC;QAOnC,0DAA+B;QAA/B,0HAA+B;QAsBvB,2DAA4B;QAA5B,yGAA4B;QAIxD,0DACH;QADG,wGACH;QAG0B,0DAAoB;QAApB,6IAAoB;QAGxC,0DAAwC;QAAxC,gIAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCC;AACN;AAQU;;;;;;;;;;;;;IC8B/C,qEAAqC;IAG/B,qEAKE;IACF,0EAA8C;IAKvC,uDAAyB;IAAA,4DAC3B;IAEH,2EAEG;IAAA,uDAA6B;IAAA,4DAC/B;IAIP,0EAAkC;IACxB,wDAA4C;;IAAA,4DAAS;IAE/D,0EAAkC;IACxB,wDAA6B;IAAA,4DAAS;IAEhD,0EAAkC;IACxB,wDAA0B;IAAA,4DAAS;IAE7C,0EAAkC;IACxB,wDAA+C;;IAAA,4DAAS;IAGlE,0EAAkC;IACZ,0VAAS,iGAA6B,KAAC;IACzD,sEAA4C;IAC9C,4DAAS;;;;IApCL,0DAA+B;IAA/B,+JAA+B;IAU1B,0DAAyB;IAAzB,uFAAyB;IAK3B,0DAA6B;IAA7B,2FAA6B;IAM5B,0DAA4C;IAA5C,iKAA4C;IAG5C,0DAA6B;IAA7B,2FAA6B;IAG7B,0DAA0B;IAA1B,wFAA0B;IAG1B,0DAA+C;IAA/C,4KAA+C;;;IA2C3D,0EAGC;IACC,oGACF;IAAA,4DAAM;;;IAkBN,0EAGC;IACC,oGACF;IAAA,4DAAM;;;IAkBN,0EAGC;IACC,qGACF;IAAA,4DAAM;;;IAmBN,0EAGC;IACC,oGACF;IAAA,4DAAM;;;;IAtGhB,0EAAkF;IAM5E,mEAAoD;IAAA,wFAEtD;IAAA,4DAAM;IACN,0EAAiB;IAKN,oEACF;IAAA,4DAAO;IAEV,iFASE;IALA,oTAAa,wFACrB,IADkC;IAJ5B,4DASE;IACF,mHAKM;IACR,4DAAM;IACN,2EAA6C;IAGtC,oEACF;IAAA,4DAAO;IAEV,iFASE;IALA,oTAAa,wFACrB,IADkC;IAJ5B,4DASE;IACF,mHAKM;IACR,4DAAM;IACN,2EAA6C;IAGtC,oEACF;IAAA,4DAAO;IAEV,iFASE;IALA,oTAAa,yFACrB,IADmC;IAJ7B,4DASE;IACF,mHAKM;IACR,4DAAM;IACN,2EAA6C;IAGtC,oEACF;IAAA,4DAAO;IAEV,iFAUE;IANA,oTAAa,2FACrB,IADqC,wOAKnB,qFAAmB,KALA;IAJ/B,4DAUE;IACF,mHAKM;IACR,4DAAM;IAMZ,2EAAsB;IAIlB,oEACC;IAAA,sFACH;IAAA,4DAAM;IACN,2EAAiB;IAGgB,kEAAM;IAAA,4DAChC;IAAA,0EAAQ;IAAA,wDAA2C;;IAAA,4DAAS;IAE/D,0EAA8D;IACjC,iFAAqB;IAAA,4DAC/C;IAAA,0EAAQ;IAAA,wDAAkC;;IAAA,4DAAS;IAEtD,0EAA8D;IACjC,4EAAgB;IAAA,4DAC1C;IAAA,0EAAQ;IAAA,wDAAsC;;IAAA,4DAAS;IAa1D,0EAA8D;IACT,iEAAK;IAAA,4DAAS;IACjE,0EAA6B;IAAA,wDAA6B;;IAAA,4DAAK;IAGnE,8EAIG;IAFC,+RAAS,4EAAU,KAAC;IAGpB,oEAAwD;IAAC,oFAE3D;IAAA,4DAAS;IACT,oEACA;IAAA,8EAA0H;IAA5B,+RAAS,mFAAiB,KAAC;IAAC,8EAAkB;IAAA,4DAAS;;;;;;;IAtIjJ,2DAA0B;IAA1B,wFAA0B;IAOzB,0DAAgD;IAAhD,yGAAgD;IAgBjD,0DAA0B;IAA1B,wFAA0B;IAOzB,0DAAgD;IAAhD,yGAAgD;IAgBjD,0DAA2B;IAA3B,yFAA2B;IAO1B,0DAAmD;IAAnD,yGAAmD;IAgBpD,0DAA6B;IAA7B,2FAA6B;IAQ5B,0DAAoE;IAApE,4HAAoE;IAsB9D,2DAA2C;IAA3C,qKAA2C;IAI3C,0DAAkC;IAAlC,4JAAkC;IAIlC,0DAAsC;IAAtC,gKAAsC;IAelB,0DAA6B;IAA7B,uJAA6B;IAM1D,0DAAmB;IAAnB,mFAAmB;IAMb,0DAAmB;IAAnB,mFAAmB;;ADnO9B,MAAM,aAAa;IAexB,YACS,WAAwB,EACvB,WAAwB,EACxB,iBAAoC,EACpC,kBAAsC,EACtC,MAAc,EACd,oBAA0C,EAC1C,eAAuC,EACvC,MAAc;QAPf,gBAAW,GAAX,WAAW,CAAa;QACvB,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,oBAAe,GAAf,eAAe,CAAwB;QACvC,WAAM,GAAN,MAAM,CAAQ;QAtBxB,eAAU,GAAG,CAAC,CAAC;QACf,QAAG,GAAW,CAAC,CAAC;QAChB,UAAK,GAAW,CAAC,CAAC;QAClB,aAAQ,GAAW,CAAC,CAAC;QACrB,YAAO,GAAY,IAAI,iEAAO,EAAE,CAAC;QAEjC,SAAI,GAAS,IAAI,2DAAI,EAAE,CAAC;QACxB,aAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE9B,wBAAmB,GAAG,CAAC,CAAC;IAcrB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;QACvC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YAC5D,IAAI,CAAC,iBAAiB;iBACnB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,CAAC;iBAC7D,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,SAAiB;QAC1B,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChE,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,eAAiC;QACrD,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAC5B,IAAI,KAAK,CAAC;QACV,KAAK,MAAM,GAAG,IAAI,eAAe,EAAE;YACjC,mBAAmB,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;YACzD,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,eAAe,KAAK,CAAC;gBAC5C,aAAa,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;;gBAC/C,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAE/C,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAEhC,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SACnB;QACD,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;QAE9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC7D,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClD,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpD,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1D,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,GAAG;QAClB,MAAM,IAAI,GAAG;YACX,GAAG,IAAI,CAAC,OAAO;YACf,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,SAAS,EAAE,GAAG,CAAC,SAAS;SACzB,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAChD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CACnE,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,KAAK,CAAC;gBAAE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;iBAClD;gBACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC;aACrD;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;QACV,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,QAAQ;QAC9B,IAAI,QAAQ,IAAI,CAAC;YAAE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;aACvC,IAAI,QAAQ,IAAI,EAAE;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;aAC9C,IAAI,QAAQ,IAAI,EAAE;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;aAC9C,IAAI,QAAQ,IAAI,GAAG;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;aAC/C,IAAI,QAAQ,IAAI,GAAG;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;;YAC/C,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;IACrD,CAAC;IACD,cAAc,CAAC,cAA8B;QAC3C,OAAO,CACL,cAAc,CAAC,YAAY;YAC3B,cAAc,CAAC,YAAY,GAAG,IAAI,GAAG,cAAc,CAAC,eAAe,CACpE,CAAC;IACJ,CAAC;IAQD,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,GAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACrE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAC/B,CAAC;IACJ,CAAC;IACD,YAAY;QACV,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,OAAO,GAAG;YACb,GAAG,EAAE,uFAA6B;YAClC,gHAAgH;YAChH,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,WAAW;YACjB,WAAW,EAAE,kBAAkB;YAC/B,KAAK,EAAE,iCAAiC;YACxC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;YAC1B,iCAAiC;YACjC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YAEtG,OAAO,EAAE;gBACP,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,qBAAqB;gBAC5B,OAAO,EAAE,YAAY;aACtB;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,kBAAkB;aAC5B;YACD,KAAK,EAAE;gBACL,KAAK,EAAE,SAAS;aACjB;SACF,CAAC;QACF,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,qBAAqB,CAAC,OAAO;QAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5D,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;;0EAjLU,aAAa;2GAAb,aAAa;QC1B1B,yEAAuB;QAUL,kEAAgC;QAAA,0EAClC;QAAA,4DAAM;QAER,yEAAgB;QAEZ,mEACC;QAAA,8EACH;QAAA,4DAAM;QAER,yEAAgB;QAEZ,oEACC;QAAA,iFACH;QAAA,4DAAM;QAER,yEAAgB;QAEZ,oEACC;QAAA,iFACH;QAAA,4DAAM;QAGR,yEAAgB;QAEZ,mEACC;QAAA,8EACH;QAAA,4DAAM;QAGR,yEAAgB;QAEZ,oEACC;QAAA,+EACH;QAAA,4DAAM;QAIZ,yEAAO;QACL,4GA0CK;QACP,4DAAQ;QAOhB,8GA+JM;QACR,4DAAM;;QAlN8B,2DAAW;QAAX,iFAAW;QAkDS,0DAA0B;QAA1B,yHAA0B;;;;;;;;;;;;;;;;;;AC3F3E,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;kHAApB,oBAAoB;QCPjC,oEAAG;QAAA,8EAAmB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;ACU8B;AAEhB;;;;;;;ICI9B,oEAQM;;;IAJJ,gFAAoB;;;IAKtB,oEAGM;;;;ADRT,MAAM,iBAAiB;IAW5B,YACU,QAAkB,EACnB,cAA8B,EAC7B,MAAc;QAFd,aAAQ,GAAR,QAAQ,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QAbxB,WAAM,GAAG;YACP,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE;YACjE,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;YACvD,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;SACxD,CAAC;QAEF,iBAAY,GAAG,EAAE,CAAC;QAElB,UAAK,GAAG,kBAAkB,CAAC;QAOzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IACD,WAAW;QACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,WAAW,KAAI,CAAC;IAEhB,uBAAuB;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;aACxC,IAAI,CAAC,sDAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,YAAY,0DAAa,CAAC,CAAC;aACvD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IACD,UAAU,CAAC,GAAG;QACZ,IAAI,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACnC;aACI,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACnC;aACI,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACnC;IACH,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;;kFApDU,iBAAiB;+GAAjB,iBAAiB;QCpB9B,yEAA8C;QAItC,oEAIE;QAEJ,4DAAM;QAGR,yEAA+C;QAGzC,2GAQM;QACN,2GAGM;QACR,4DAAK;QAGT,2EAA4B;QAEA,wDAAY;QAAA,4DAAK;QACzC,iEAAM;QACN,2EAAoB;QAClB,4EAA+B;QACjC,4DAAM;QAMd,qFAAiD;;QAvCvC,0DAAoB;QAApB,6IAAoB;QAYD,0DAAe;QAAf,qFAAe;QAUlB,0DAA0C;QAA1C,mLAA0C;QAOpC,0DAAY;QAAZ,qFAAY;;;;;;;;;;;;;;;;;;;;;;;;;AC/BD;;;;;;;;;;AAYpC,MAAM,uBAAuB;IAKlC,YACU,KAAqB,EACrB,YAA0B,EAC1B,QAAkB,EACnB,cAA8B,EAC7B,sBAA8C,EAC9C,gBAAyC;QALzC,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,qBAAgB,GAAhB,gBAAgB,CAAyB;IAChD,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,oBAAoB,CAAC,EAAE;QACrB,IAAI,CAAC,sBAAsB;aACxB,sBAAsB,CAAC,EAAE,CAAC;aAC1B,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,GAAsB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,IAAI,CAAC,YAAY;aACd,SAAS,CAAC,EAAE,CAAC;aACb,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE;YAChD,OAAO,EAAE,MAAM;YACf,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,MAAM;YACb,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9C,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,GAAG,KAAK,cAAc;gBAAE,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;;gBAE/D,IAAI,CAAC,YAAY;qBACd,iBAAiB,CAAC;oBACjB,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,OAAO;oBACnC,MAAM,EAAE,WAAW;iBACpB,CAAC;qBACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBACjB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,OAAO,CACL,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,KAAK,WAAW;YAC/D,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,KAAK,WAAW,CAChE,CAAC;IACJ,CAAC;;8FA7EU,uBAAuB;qHAAvB,uBAAuB;QCfpC,0EAAS;QAEL,mEAAO;QAAA,0EAAmB;QAAC,uDAA4B;QAAA,4DAAO;QAEhE,uEAAmB;QACjB,2EACA;QAAA,0EAAmB;QACjB,sEACA;QAAA,oEAIE;QACJ,4DAAO;QAET,wEAAmB;QACjB,wEACA;QAAA,2EAAmB;QACjB,wDACF;QAAA,4DAAO;QAGX,2EAAS;QAGL,kEACA;QAAA,2EAAmB;QAAC,wDAA8B;QAAA,4DAAO;QAG3D,wEAAmB;QACjB,uEACA;QAAA,2EAAmB;QAAC,wDAA+B;QAAA,4DAAO;QAG5D,wEAAmB;QACjB,mEACA;QAAA,2EAAmB;QAAC,wDAA+B;QAAA,4DAAO;QAI9D,2EAAS;QAGL,oEACA;QAAA,2EAAmB;QAAC,wDAAiC;QAAA,4DAAO;QAG9D,wEAAmB;QACjB,kEACA;QAAA,2EAAmB;QAAC,wDAA8B;QAAA,4DAAO;QAG3D,wEAAmB;QACjB,mEACA;QAAA,2EAAmB;QAAC,wDAA+B;QAAA,4DAAO;QAG5D,wEAAmB;QACjB,qEACA;QAAA,2EAAmB;QAAC,wDAAiC;QAAA,4DAAO;QAIhE,0EAA0B;QACD,2EAAe;QAAA,4DAAK;QAE7C,2EAAS;QAEL,0EACA;QAAA,2EAAmB;QAAA,wDAAkC;QAAA,4DAAO;QAE9D,wEAAmB;QACjB,+EACA;QAAA,2EAAmB;QAAA,wDAAuC;QAAA,4DAAO;QAEnE,wEAAmB;QACjB,6EACA;QAAA,2EAAmB;QAAA,wDAAqC;QAAA,4DAAO;QAEjE,wEAAmB;QACjB,yEACA;QAAA,2EAAmB;QAAA,wDAAiC;QAAA,4DAAO;QAE7D,wEAAmB;QACjB,0EACA;QAAA,2EAAmB;QAAC,wDAAgC;QAAA,4DAAO;QAG/D,6EAAiD;QAAA,6EAAiB;QAAA,4DAAS;QAC3E,6EAA8E;QAAA,2EAAe;QAAA,4DAAS;;QAvFvE,0DAA4B;QAA5B,sIAA4B;QASnD,0DAA4D;QAA5D,0MAA4D;QAO9D,0DACF;QADE,gOACF;QAOoB,0DAA8B;QAA9B,wIAA8B;QAK9B,0DAA+B;QAA/B,yIAA+B;QAK/B,0DAA+B;QAA/B,yIAA+B;QAQ/B,0DAAiC;QAAjC,2IAAiC;QAKjC,0DAA8B;QAA9B,wIAA8B;QAK9B,0DAA+B;QAA/B,yIAA+B;QAK/B,0DAAiC;QAAjC,2IAAiC;QAUlC,0DAAkC;QAAlC,gJAAkC;QAIlC,0DAAuC;QAAvC,qJAAuC;QAIvC,0DAAqC;QAArC,mJAAqC;QAIrC,0DAAiC;QAAjC,+IAAiC;QAIhC,0DAAgC;QAAhC,0IAAgC;QAG5B,0DAAoB;QAApB,8IAAoB;QAClB,0DAA8C;QAA9C,2JAA8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/E5B;AASW;;;;;;;;;;IC0BzD,sEAGQ;;ADrBH,MAAM,gBAAgB;IAQ3B,YACU,MAAc,EACd,KAAqB,EACrB,QAAkB,EAClB,WAAwB,EACxB,iBAAoC,EACpC,MAAc,EACd,eAAuC,EACxC,cAA8B,EAC7B,oBAA0C;QAR1C,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAwB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,yBAAoB,GAApB,oBAAoB,CAAsB;IACjD,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,aAAa;QACX,IAAI,CAAC,iBAAiB;aACnB,wBAAwB,EAAE;aAC1B,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAClB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IACD,aAAa;QACX,IAAI,CAAC,WAAW;aACb,iBAAiB,EAAE;aACnB,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAS,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC;SAC9D,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ;aAChB,IAAI,CACH,mDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAC/B,oDAAI,CAAC,CAAC,CAAC,EACP,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CACV,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CACrE,CACF;aACA,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,cAAc,GAAG,GAAG,EAAE,cAAc,CAAC;YAC1C,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,OAAO,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,qBAAqB,CAAC,eAAiC;QACrD,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAC5B,IAAI,UAAU,CAAC;QACf,KAAK,MAAM,GAAG,IAAI,eAAe,EAAE;YACjC,mBAAmB,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;YACzD,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC,eAAe,KAAK,CAAC;gBAC5C,aAAa,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;;gBAC/C,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAE/C,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;QACxC,UAAU,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC;QAE3D,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,cAAc,CAAC,cAA8B;QAC3C,OAAO,CACL,cAAc,CAAC,YAAY;YAC3B,cAAc,CAAC,YAAY,GAAG,IAAI,GAAG,cAAc,CAAC,eAAe,CACpE,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,GAAG;QAClB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,MAAM,IAAI,GAAG;YACX,GAAG,IAAI,CAAC,OAAO;YACf,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,SAAS,EAAE,GAAG,CAAC,SAAS;SACzB,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YACxC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACvE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;SACrD,CAAC,CAAC;IACL,CAAC;IAED,aAAa;IAEb,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,SAAS,CAAC;YAClD,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;gBACpC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;YAC7B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAQD,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe;aACjB,eAAe,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;aACtC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;YAClC,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;SACrD,CAAC,CAAC;IACP,CAAC;IACD,YAAY;QACV,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,IAAI,CAAC,OAAO,GAAG;YACb,GAAG,EAAE,uFAA6B;YAClC,gHAAgH;YAChH,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,WAAW;YACjB,WAAW,EAAE,kBAAkB;YAC/B,KAAK,EAAE,iCAAiC;YACxC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;YAC1B,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE,CACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CACnB,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CACzD;YACH,OAAO,EAAE;gBACP,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ;gBAChD,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO;gBACzB,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO;aAC5B;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,kBAAkB;aAC5B;YACD,KAAK,EAAE;gBACL,KAAK,EAAE,SAAS;aACjB;SACF,CAAC;QACF,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,qBAAqB,CAAC,OAAO;QAC3B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5D,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QAC/B,IAAI,CAAC,eAAe;aACjB,iBAAiB,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;aAC5C,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;YACzC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;SACrD,CAAC,CAAC;IACP,CAAC;;gFA/KU,gBAAgB;8GAAhB,gBAAgB;QC1B7B,yEAA0B;QAIpB,mEACA;QAAA,0EAAmB;QAAC,uDAAoB;QAAA,4DAAO;QAGjD,uEAAmB;QACjB,iEACA;QAAA,0EAAmB;QAAC,uDAAoB;QAAA,4DAAO;QAGjD,wEAAmB;QACjB,mEACA;QAAA,2EAAmB;QAAC,wDAAqB;QAAA,4DAAO;QAGlD,wEAAmB;QACjB,qEACA;QAAA,2EAAmB;QAAC,wDAAuB;QAAA,4DAAO;QAGtD,2EAAS;QACY,kEAAM;QAAA,2EAAmB;QAAA,wDAA6B;QAAA,4DAAO;QAChF,wEAAmB;QAAA,gFAAoB;QAAA,2EAAmB;QAAA,wDAA2B;QAAA,4DAAO;QAC5F,wEAAmB;QACjB,6EAAgB;QAAA,2EAAmB;QAAA,wDAAuB;QAAA,4DAAO;QAEnE,wEAAmB;QACjB,yEAAY;QAAA,2EAAmB;QAAA,wDAAmB;QAAA,4DAAO;QAK/D,0EAA6B;QACC,yIAAS,YAAQ,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC5D,2EAAuB;QAAA,qEAAS;QAAA,4DAAO;QACvC,6EAA6D;QAA1B,yIAAS,mBAAe,IAAC;QAC1D,qEAAkD;QACpD,4DAAS;QACT,6EAA0D;QAA5B,yIAAS,qBAAiB,IAAC;QACvD,qEAAsE;QACxE,4DAAS;QACT,iHAGQ;QACV,4DAAM;QACN,iEAAM;;QA5CoB,0DAAoB;QAApB,yHAAoB;QAKpB,0DAAoB;QAApB,yHAAoB;QAKpB,0DAAqB;QAArB,0HAAqB;QAKrB,0DAAuB;QAAvB,4HAAuB;QAID,0DAA6B;QAA7B,yGAA6B;QACf,0DAA2B;QAA3B,wGAA2B;QAEhD,0DAAuB;QAAvB,oGAAuB;QAG3B,0DAAmB;QAAnB,gGAAmB;QAenD,2DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;;;;ACrCiD;;;;;;;;;;ICKxE,sEAAwD;IAAA,qEAAU;IAAA,4DAAM;;;IACxE,sEAAyD;IAAA,8EAAmB;IAAA,4DAAM;;;IAClF,sEAAyD;IAAA,gFAAqB;IAAA,4DAAM;;;IAHtF,0EAAmF;IACjF,2HAAwE;IACxE,2HAAkF;IAClF,2HAAoF;IACtF,4DAAM;;;IAHE,0DAAgD;IAAhD,mHAAgD;IAChD,0DAAiD;IAAjD,oHAAiD;IACjD,0DAAiD;IAAjD,oHAAiD;;;IAgBvD,sEAAyD;IAAA,qEAAU;IAAA,4DAAM;;;IACzE,sEAA0D;IAAA,8EAAmB;IAAA,4DAAM;;;IACnF,sEAA0D;IAAA,gFAAqB;IAAA,4DAAM;;;IAHvF,0EAAoF;IAClF,4HAAyE;IACzE,4HAAmF;IACnF,4HAAqF;IACvF,4DAAM;;;IAHE,0DAAiD;IAAjD,oHAAiD;IACjD,0DAAkD;IAAlD,qHAAkD;IAClD,0DAAkD;IAAlD,qHAAkD;;;IAkBxD,sEAAwD;IAAA,qEAAU;IAAA,4DAAM;;;IACxE,sEAAyD;IAAA,8EAAmB;IAAA,4DAAM;;;IAClF,sEAAyD;IAAA,gFAAqB;IAAA,4DAAM;;;IAHtF,0EAAmF;IACjF,4HAAwE;IACxE,4HAAkF;IAClF,4HAAoF;IACtF,4DAAM;;;IAHE,0DAAgD;IAAhD,mHAAgD;IAChD,0DAAiD;IAAjD,oHAAiD;IACjD,0DAAiD;IAAjD,oHAAiD;;;IAiBvD,sEAA2D;IAAA,qEAAU;IAAA,4DAAM;;;IAC3E,sEAA0D;IAAA,8EAAmB;IAAA,4DAAM;;;IACnF,sEAAwE;IACtE,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,gJACJ;;;IALA,0EAAsF;IACpF,4HAA2E;IAC3E,4HAAmF;IACnF,4HAEI;IACN,4DAAM;;;IALE,0DAAmD;IAAnD,sHAAmD;IACnD,0DAAkD;IAAlD,qHAAkD;IAClD,0DAAgE;IAAhE,mIAAgE;;;IAQqD,sEAG3H;;;AD9DH,MAAM,wBAAwB;IAOnC,YACU,iBAAoC,EACpC,kBAAsC,EACtC,WAAwB,EACzB,cAA8B,EAC7B,MAAc,EACd,QAAkB;QALlB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;IACzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB;aACnB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,CAAC;aAC7D,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,kBAAkB;aACpB,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;aAC7C,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;YAC1C,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;SACrD,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB,CAAC,GAAW;QAC3B,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC1C,qBAAqB,EAAE,0CAA0C;aAClE,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,CAAC,+BAA+B,EAAE,CAAC;SACxC;IACH,CAAC;IAED,+BAA+B;QAC7B,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS;YACjE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED,kBAAkB,CAAC,OAAO;QACxB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,EAAE,KAAK;YACrB,OAAO,EAAE,OAAO,EAAE,OAAO;YACzB,IAAI,EAAE,OAAO,EAAE,IAAI;SACpB,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB,CAAC,QAAQ;QAC9B,IAAI,QAAQ,IAAI,CAAC;YAAE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;aACvC,IAAI,QAAQ,IAAI,EAAE;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;aAC9C,IAAI,QAAQ,IAAI,EAAE;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;aAC9C,IAAI,QAAQ,IAAI,GAAG;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;aAC/C,IAAI,QAAQ,IAAI,GAAG;YAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;;YAC/C,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;IACjC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,4DAAgB,CAAC;YACtC,KAAK,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;gBAChC,+DAAmB;gBACnB,gEAAoB,CAAC,CAAC,CAAC;gBACvB,gEAAoB,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;gBAC/B,+DAAmB;gBACnB,gEAAoB,CAAC,CAAC,CAAC;gBACvB,gEAAoB,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;gBAC/B,+DAAmB;gBACnB,gEAAoB,CAAC,CAAC,CAAC;gBACvB,gEAAoB,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;gBAClC,+DAAmB;gBACnB,8DAAkB,CAAC,UAAU,CAAC;aAC/B,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,gDAAgD;QAChD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,iBAAiB,CAAC,WAA6B;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,EAAE;YACnD,KAAK,EAAE;gBACL,OAAO,EAAE;oBACP,IAAI,EAAE,WAAW,CAAC,KAAK,EAAE,IAAI;oBAC7B,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,KAAK;oBAC/B,IAAI,EAAE,WAAW,CAAC,KAAK,EAAE,IAAI;oBAC7B,OAAO,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO;iBACpC;gBACD,cAAc,EAAE,IAAI,CAAC,cAAc;aACpC;SACF,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;gGA/HU,wBAAwB;sHAAxB,wBAAwB;QCtBrC,0EAAuD;QAAtB,gJAAU,cAAU,IAAC;QACpD,yEAAiB;QAGe,+DAAI;QAAA,4DAAS;QACtC,sEAOC;QACF,oHAIM;QACR,4DAAM;QAER,yEAAiB;QAEgB,iEAAK;QAAA,4DAAS;QAC1C,uEAOC;QACF,sHAIM;QACR,4DAAM;QAGV,0EAAiB;QAGe,gEAAI;QAAA,4DAAS;QACtC,wEAOC;QACF,sHAIM;QACR,4DAAM;QAER,0EAAiB;QAEe,mEAAO;QAAA,4DAAS;QAC3C,6EAQC;QAHA,kJAAU,uBAAmB,IAAC;QAL/B,4DAQC;QACF,sHAMM;QACR,4DAAM;QAGV,2EAA6B;QACI,0EAAc;QAAA,4DAAO;QAAC,2EAAc;QAAA,4EAA6B;QAAA,wDAAwB;QAAA,4DAAO;QAAE,yHAG3H;QACN,iEAAI;QAAC,4EAAsB;QAAA,iGAAqC;QAAA,4DAAO;QAEzE,8EAA+C;QAAnB,iJAAS,YAAQ,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC5D,2EAA2B;QACG,iJAAS,oBAAgB,IAAC;QAAC,wEAAY;QAAA,4DAAS;QAC5E,8EAA6C;QAAA,gEAAI;QAAA,4DAAS;QAE5D,iEAAI;QAEN,4DAAO;;QA9FA,sFAAyB;QAUtB,0DAAwE;QAAxE,iMAAwE;QAG3C,0DAAkD;QAAlD,sHAAkD;QAe/E,0DAAyE;QAAzE,kMAAyE;QAG5C,0DAAmD;QAAnD,uHAAmD;QAiBhF,0DAAwE;QAAxE,iMAAwE;QAG3C,0DAAkD;QAAlD,sHAAkD;QAiB/E,0DAA2E;QAA3E,oMAA2E;QAE9C,0DAAqD;QAArD,yHAAqD;QAWQ,0DAAwB;QAAxB,oGAAwB;QACvH,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;;ACzEiD;;;;;;;;ICsClE,sEAA6D;IAC3D,uEACF;IAAA,4DAAM;;;IACN,sEAIC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,kJAIF;;;IAhBF,0EAGC;IACC,wHAEM;IACN,wHASM;IACR,4DAAM;;;IAbE,0DAAqD;IAArD,wHAAqD;IAIxD,0DAGnB;IAHmB,qIAGnB;;;IA2BkB,sEAEC;IACC,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,qJAIF;;;IApBF,0EAGC;IACC,wHAIM;IACN,wHAWM;IACR,4DAAM;;;IAhBD,0DAAwD;IAAxD,2HAAwD;IAKxD,0DAKrB;IALqB,wIAKrB;;;IA0BkB,sEAEC;IACC,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,oJAIF;;;IApBF,0EAGC;IACC,wHAIM;IACN,wHAWM;IACR,4DAAM;;;IAhBD,0DAAuD;IAAvD,0HAAuD;IAKvD,0DAKrB;IALqB,uIAKrB;;;IA6BkB,sEAA8D;IAC5D,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,mJAIF;;;IAlBF,0EAGC;IACC,wHAEM;IACN,wHAWM;IACR,4DAAM;;;IAfE,0DAAsD;IAAtD,yHAAsD;IAIzD,0DAKrB;IALqB,sIAKrB;;;IA0BkB,sEAA8D;IAC5D,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,mJAIF;;;IAlBF,0EAGC;IACC,wHAEM;IACN,wHAWM;IACR,4DAAM;;;IAfE,0DAAsD;IAAtD,yHAAsD;IAIzD,0DAKrB;IALqB,sIAKrB;;;IAiCsB,sEAIC;IACC,uEACF;IAAA,4DAAM;;;IAZR,0EAKC;IACC,wHAMM;IACR,4DAAM;;;IAND,0DAGzB;IAHyB,8HAGzB;;;IA2BsB,sEAIC;IACC,uEACF;IAAA,4DAAM;;;IAZR,0EAKC;IACC,wHAMM;IACR,4DAAM;;;IAND,0DAGzB;IAHyB,+HAGzB;;;IA6BsB,sEAIC;IACC,uEACF;IAAA,4DAAM;;;IAZR,0EAKC;IACC,wHAMM;IACR,4DAAM;;;IAND,0DAGzB;IAHyB,8HAGzB;;;IA4BsB,sEAMC;IACC,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,gFACF;IAAA,4DAAM;;;IAxBR,0EAMC;IACC,wHAQM;IACN,wHAQM;IACR,4DAAM;;;IAjBD,0DAKzB;IALyB,iIAKzB;IAIyB,0DAKzB;IALyB,gIAKzB;;;IA+BgB,sEAIC;IACC,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,4JAIF;;;IAxBF,0EAKC;IACC,wHAMM;IACN,wHAWM;IACR,4DAAM;;;IAlBD,0DAGnB;IAHmB,kIAGnB;IAImB,0DAKnB;IALmB,+IAKnB;;;IA6BgB,sEAIC;IACC,uEACF;IAAA,4DAAM;;;IACN,sEAMC;IACC,uDAIF;IAAA,4DAAM;;;IAJJ,0DAIF;IAJE,0JAIF;;;IAxBF,0EAKC;IACC,wHAMM;IACN,wHAWM;IACR,4DAAM;;;IAlBD,0DAGnB;IAHmB,iIAGnB;IAImB,0DAKnB;IALmB,8IAKnB;;;IAQY,0EAA8D;IAC5D,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,2FACF;;;IAII,sEAGQ;;;;AD7ajB,MAAM,oBAAoB;IAM/B,YACS,cAA8B,EAC7B,QAAkB,EAClB,MAAc,EACd,iBAAoC;QAHrC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QAT9C,cAAS,GAAG,KAAK,CAAC;IAUf,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,SAAS;QACP,IAAI,CAAC,iBAAiB;aACnB,wBAAwB,EAAE;aAC1B,SAAS,CAAC,CAAC,GAAoB,EAAE,EAAE;YAClC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,4DAAgB,CAAC;YACzC,MAAM,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACzD,SAAS,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5D,QAAQ,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC1D,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC1D,gBAAgB,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACnE,cAAc,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACjE,OAAO,EAAE,IAAI,4DAAgB,CAAC;gBAC5B,KAAK,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACxD,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACvD,IAAI,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACvD,OAAO,EAAE,IAAI,8DAAkB,CAAC,EAAE,EAAE;oBAClC,+DAAmB;oBACnB,8DAAkB,CAAC,UAAU,CAAC;iBAC/B,CAAC;aACH,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,WAA4B;QAC7C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;YAC7B,MAAM,EAAE,WAAW,EAAE,MAAM;YAC3B,SAAS,EAAE,WAAW,EAAE,SAAS;YACjC,QAAQ,EAAE,WAAW,EAAE,QAAQ;YAC/B,OAAO,EAAE,WAAW,EAAE,OAAO;YAC7B,OAAO,EAAE,WAAW,EAAE,OAAO;YAC7B,gBAAgB,EAAE,WAAW,EAAE,gBAAgB;YAC/C,cAAc,EAAE,WAAW,EAAE,cAAc;YAC3C,OAAO,EAAE;gBACP,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK;gBAClC,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI;gBAChC,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI;gBAChC,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO;aACvC;SACF,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK;YAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC5E,CAAC;IACD,UAAU,CAAC,QAAa;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3D,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,mCAAmC,CAAC;YACnD,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,KAAK,EAAE,KAAK,EAAE,OAAO,KAAK,gBAAgB;gBAC5C,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;oBACrD,qBAAqB,EAAE,OAAO,CAAC,OAAO;iBACvC,CAAC,CACH,CAAC;;gBACC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAChD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;wFAjGU,oBAAoB;kHAApB,oBAAoB;QCpBjC,yEAAkB;QAChB,oEAKO;QACP,yEAAqB;QAOT,yIAAS,YAAQ,IAAC;QAFpB,4DAKE;QACF,0EAAc;QAAA,0EAAyB;QACrC,wDACF;QAAA,4DAAO;QAET,2EAIC;QADC,iJAAY,gBAAY,IAAC;QAEzB,wEAAqD;QAErD,2EAA+B;QACR,oEAAO;QAAA,4DAAQ;QACpC,wEAWE;QACF,mHAiBM;QACR,4DAAM;QAEN,0EAAiB;QAEuB,uEAAU;QAAA,4DAAQ;QACtD,wEAUE;QACF,mHAqBM;QACR,4DAAM;QAEN,2EAA4B;QACS,sEAAS;QAAA,4DAAQ;QACpD,wEAUE;QACF,mHAqBM;QACR,4DAAM;QAER,0EAAiB;QAGqB,qEAAQ;QAAA,4DAAQ;QAClD,wEAWE;QACF,mHAmBM;QACR,4DAAM;QAEN,2EAA4B;QACQ,qEAAQ;QAAA,4DAAQ;QAClD,wEAUE;QACF,mHAmBM;QACR,4DAAM;QAGR,2EAA6B;QAIH,gEAAI;QAAA,4DACrB;QAAA,wEAWC;QACF,mHAaM;QACR,4DAAM;QAER,2EAAiB;QAEQ,iEAAK;QAAA,4DACzB;QAAA,wEAWC;QACF,mHAaM;QACR,4DAAM;QAGV,0EAAiB;QAGO,gEAAI;QAAA,4DACrB;QAAA,wEAWC;QACF,mHAaM;QACR,4DAAM;QAER,2EAAiB;QAEO,mEAAO;QAAA,4DAC1B;QAAA,wEAWC;QACF,mHAyBM;QACR,4DAAM;QAKZ,2EAAwB;QAEpB,mHACF;QAAA,4DAAQ;QACR,2EAWY;QACZ,mHAyBM;QACR,4DAAM;QAEN,2EAAwB;QACmB,4EAAe;QAAA,4DAAQ;QAChE,wEAWE;QACF,mHAyBM;QACR,4DAAM;QACN,mHAEM;QACN,2EAAqB;QACnB,iEAAM;QACN,8EAAoD;QAClD,qHAGQ;QACR,oEACF;QAAA,4DAAS;QACT,8EAIC;QADC,6IAAS,oBAAgB,IAAC;QAE1B,8EACF;QAAA,4DAAS;;QAvcnB,0DAEE;QAFF,2IAEE;QAcQ,0DACF;QADE,2IACF;QAIA,0DAA4B;QAA5B,yFAA4B;QAaxB,0DAGE;QAHF,sMAGE;QAKD,0DAAuD;QAAvD,2HAAuD;QA2BtD,0DAGE;QAHF,yMAGE;QAID,0DAA0D;QAA1D,8HAA0D;QA8B3D,0DAGE;QAHF,wMAGE;QAID,0DAAyD;QAAzD,6HAAyD;QAiC1D,0DAGE;QAHF,uMAGE;QAID,0DAAwD;QAAxD,4HAAwD;QA4BzD,0DAGE;QAHF,uMAGE;QAID,0DAAwD;QAAxD,4HAAwD;QA+BrD,0DAIE;QAJF,4MAIE;QAKD,0DAGvB;QAHuB,iIAGvB;QAmBsB,0DAIE;QAJF,6MAIE;QAKD,0DAGvB;QAHuB,kIAGvB;QAqBsB,0DAIE;QAJF,4MAIE;QAKD,0DAGvB;QAHuB,iIAGvB;QAoBsB,0DAIE;QAJF,+MAIE;QAID,0DAIvB;QAJuB,oIAIvB;QAoCgB,0DAGE;QAHF,gNAGE;QAID,0DAGjB;QAHiB,qIAGjB;QAgCgB,0DAGE;QAHF,8MAGE;QAID,0DAGjB;QAHiB,mIAGjB;QAsBkB,0DAAa;QAAb,6EAAa;QAOZ,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;;;;;ACpbiB;;;;;;;;;;;ICqBtD,oEAUM;;;;IANJ,yGAAsC;IACtC,kIAAmE;;;IAQrE,oEAGM;;;;;IA4BV,0EAGC;IACC,qEAOE;IACF,2EAAuB;IACrB,iEAAK;IAAA,2EAGJ;IACC,uDACF;IAAA,4DAAO;IACP,+DACA;IAAA,2EAAuB;IAAA,uDAErB;IAAA,4DAAO;;;;IAhBT,0DAEE;IAFF,0LAEE;IAOA,0DAA2D;IAA3D,0LAA2D;IAE3D,0DACF;IADE,kHACF;IAEuB,0DAErB;IAFqB,wGAErB;;;IAYJ,sEAGQ;;;;IARV,6EAIC;IAFC,0SAAS,8EAAa,KAAC;IAGvB,iIAGQ;IACR,yEACF;IAAA,4DAAS;;;IAJJ,0DAA4B;IAA5B,+FAA4B;;;;AD1FhC,MAAM,wBAAwB;IAKnC,YACU,KAAqB,EACrB,QAAkB,EACnB,cAA8B,EAC7B,gBAAyC,EACzC,eAAuC,EACvC,YAA0B;QAL1B,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,qBAAgB,GAAhB,gBAAgB,CAAyB;QACzC,oBAAe,GAAf,eAAe,CAAwB;QACvC,iBAAY,GAAZ,YAAY,CAAc;QAVpC,eAAU,GAAG,0EAAW,CAAC;QAEzB,oBAAe,GAAsB,EAAE,CAAC;IASrC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IACD,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe;aACjB,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC;aACpC,SAAS,CAAC,CAAC,GAAsB,EAAE,EAAE;YACpC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE;YAChD,OAAO,EAAE,MAAM;YACf,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,MAAM;YACb,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9C,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,GAAG,KAAK,cAAc;gBAAE,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;;gBAE/D,IAAI,CAAC,YAAY;qBACd,iBAAiB,CAAC;oBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,MAAM,EAAE,WAAW;iBACpB,CAAC;qBACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC9B,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,MAAM,CAAC;IACZ,CAAC;IAED,kBAAkB;QAChB,OAAO,CACL,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,KAAK,WAAW,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,KAAK,WAAW,CACnI,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,WAAW;QAC5B,QAAQ,WAAW,EAAE;YACnB,KAAK,KAAK,CAAC;YACX,KAAK,WAAW;gBACd,OAAO,OAAO,CAAC;YACjB,KAAK,WAAW;gBACd,OAAO,KAAK,CAAC;YACf;gBACE,OAAO,SAAS,CAAC;SACpB;IACH,CAAC;;gGA7EU,wBAAwB;sHAAxB,wBAAwB;QCrBrC,yEAA8C;QAItC,oEAIE;QAEF,wEAAuB;QAAA,2EAAgB;QAAA,4DAAK;QAE9C,uEAAmB;QACjB,mEAAO;QAAA,2EAAmB;QAAA,wDAAc;QAAA,4DAAO;QAEjD,wEAAmB;QACjB,4EACA;QAAA,2EAAmB;QACjB,wDACF;QAAA,4DAAO;QAET,wEAAmB;QACjB,wEACA;QAAA,2EAAmB;QACjB,wDACF;QAAA,4DAAO;QAIX,0EAA+C;QAGzC,qHAUM;QAGN,qHAGM;QAER,4DAAK;QAGT,2EAAiE;QAE7D,sEAAoD;QACpD,yEAA4B;QAAA,iEAAK;QAAA,iEAAM;QAAA,mEAAO;QAAA,4DAAI;QAEpD,2EAAiD;QAC/C,sEAAuD;QACvD,yEAA4B;QAAA,iEAAK;QAAA,iEAAM;QAAA,sEAAU;QAAA,4DAAI;QAEvD,2EAAiD;QAC/C,sEAA6D;QAC7D,yEAA4B;QAAA,mEAAO;QAAA,iEAAM;QAAA,oEAAQ;QAAA,4DAAI;QAEvD,2EAAiD;QAC/C,sEAAsD;QACtD,yEAA4B;QAAA,qEAAS;QAAA,4DAAI;QAG7C,2EAA4B;QAExB,iEAAM;QACN,yEAAuB;QAAA,yEAAa;QAAA,4DAAK;QAE3C,uHAwBM;QACR,4DAAM;QACN,iEAAM;QACN,2EAAqB;QACM,iJAAS,YAAQ,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACzD,6HAUS;QACX,4DAAM;QAIV,qFAAiD;;QAnHvC,0DAAoB;QAApB,6IAAoB;QAQI,0DAAc;QAAd,sFAAc;QAKtC,0DACF;QADE,0LACF;QAKE,0DACF;QADE,2LACF;QAQqB,0DAAkB;QAAlB,wFAAkB;QAcrB,0DAA6C;QAA7C,sLAA6C;QA+B9C,2DAAqC;QAArC,+IAAqC;QA8BrD,0DAA0B;QAA1B,0FAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGQ;;;;;;;;;;;ICkGnC,yFAS2B;;;IARzB,wFAA4B;;;IA2B9B,sEAGQ;;;;IARV,6EAIC;IAFC,0SAAS,8EAAa,KAAC;IAGvB,iIAGQ;IACR,yEACF;IAAA,4DAAS;;;IAJJ,0DAA4B;IAA5B,+FAA4B;;;;ADlHhC,MAAM,wBAAwB;IAKnC,YACU,KAAqB,EACrB,YAA0B,EAC1B,QAAkB,EACnB,cAA8B,EAC7B,sBAA8C,EAC9C,gBAAyC;QALzC,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,qBAAgB,GAAhB,gBAAgB,CAAyB;IAChD,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,oBAAoB,CAAC,EAAE;QACrB,IAAI,CAAC,sBAAsB;aACxB,sBAAsB,CAAC,EAAE,CAAC;aAC1B,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,GAAsB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,IAAI,CAAC,YAAY;aACd,SAAS,CAAC,EAAE,CAAC;aACb,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,GAAU,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE;YAChD,OAAO,EAAE,MAAM;YACf,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,MAAM;YACb,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9C,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,GAAG,KAAK,cAAc;gBAAE,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;;gBAE/D,IAAI,CAAC,YAAY;qBACd,iBAAiB,CAAC;oBACjB,OAAO,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO;oBACpC,MAAM,EAAE,WAAW;iBACpB,CAAC;qBACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;oBACnD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,OAAO,CACL,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,KAAK,WAAW;YAC/D,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,KAAK,WAAW,CAChE,CAAC;IACJ,CAAC;;gGA9EU,wBAAwB;sHAAxB,wBAAwB;QCvBrC,yEAA8C;QAItC,oEAIE;QAEF,wEAAuB;QAAA,2EAAgB;QAAA,4DAAK;QAE9C,yEAAiB;QAGX,oEAAO;QAAA,2EAAmB;QAAC,wDAA4B;QAAA,4DAAO;QAEhE,wEAAmB;QACjB,4EACA;QAAA,2EAAmB;QACjB,wDACA;QAAA,sEAIE;QACJ,4DAAO;QAET,wEAAmB;QACjB,wEACA;QAAA,2EAAmB;QACjB,wDACF;QAAA,4DAAO;QAGX,8EAAqB;QAGjB,kEACA;QAAA,2EAAmB;QAAC,wDAA8B;QAAA,4DAAO;QAG3D,wEAAmB;QACjB,uEACA;QAAA,2EAAmB;QAAC,wDAA+B;QAAA,4DAAO;QAG5D,wEAAmB;QACjB,mEACA;QAAA,2EAAmB;QAAC,wDAA+B;QAAA,4DAAO;QAKhE,2EAAS;QAGL,oEACA;QAAA,2EAAmB;QAAC,wDAAiC;QAAA,4DAAO;QAG9D,wEAAmB;QACjB,kEACA;QAAA,2EAAmB;QAAC,wDAA8B;QAAA,4DAAO;QAG3D,wEAAmB;QACjB,mEACA;QAAA,2EAAmB;QAAC,wDAA+B;QAAA,4DAAO;QAG5D,wEAAmB;QACjB,qEACA;QAAA,2EAAmB;QAAC,wDAAiC;QAAA,4DAAO;QAKlE,2EAA0B;QACxB,iEAAM;QACN,yEAAuB;QAAA,2EAAe;QAAA,4DAAK;QAE7C,2EAAS;QAEL,0EACA;QAAA,2EAAmB;QAAA,wDAAkC;QAAA,4DAAO;QAE9D,wEAAmB;QACjB,+EACA;QAAA,2EAAmB;QAAA,wDAAuC;QAAA,4DAAO;QAEnE,wEAAmB;QACjB,6EACA;QAAA,2EAAmB;QAAA,wDAAqC;QAAA,4DAAO;QAEjE,wEAAmB;QACjB,yEACA;QAAA,2EAAmB;QAAA,wDAAiC;QAAA,4DAAO;QAE7D,wEAAmB;QACjB,0EACA;QAAA,2EAAmB;QAAC,wDAAgC;QAAA,4DAAO;QAG/D,2EAA0B;QACxB,iEAAM;QACN,yEAAuB;QAAA,2EAAe;QAAA,4DAAK;QAC3C,2EAA0B;QACxB,+JAS2B;QAC7B,4DAAM;QAIR,iEAAM;QACN,2EAAqB;QACM,iJAAS,YAAQ,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACzD,8EAGC;QACC,8EACF;QAAA,4DAAS;QACT,6HAUS;QACX,4DAAM;QAGV,qFAAiD;;QA5IvC,0DAAoB;QAApB,8IAAoB;QAUS,0DAA4B;QAA5B,sIAA4B;QAKrD,0DACA;QADA,0IACA;QAGE,0DAA4D;QAA5D,0MAA4D;QAO9D,0DACF;QADE,gOACF;QAOoB,0DAA8B;QAA9B,wIAA8B;QAK9B,0DAA+B;QAA/B,yIAA+B;QAK/B,0DAA+B;QAA/B,yIAA+B;QASjC,0DAAiC;QAAjC,2IAAiC;QAKjC,0DAA8B;QAA9B,wIAA8B;QAK9B,0DAA+B;QAA/B,yIAA+B;QAK/B,0DAAiC;QAAjC,2IAAiC;QAYpC,0DAAkC;QAAlC,gJAAkC;QAIlC,0DAAuC;QAAvC,qJAAuC;QAIvC,0DAAqC;QAArC,mJAAqC;QAIrC,0DAAiC;QAAjC,+IAAiC;QAIhC,0DAAgC;QAAhC,0IAAgC;QAejC,0DAAyB;QAAzB,gIAAyB;QAW5C,0DAA8C;QAA9C,2JAA8C;QAO7C,0DAA0B;QAA1B,0FAA0B;;;;;;;;;;;;;;;;;;;;;;;IE5G7B,2EACG;IAAA,uDACH;IAAA,4DAAO;;;IADJ,0DACH;IADG,qGACH;;;ADdC,MAAM,0BAA0B;IAgBrC,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,aAAa;QACX,OAAO,IAAI,CAAC,eAAe,IAAI,CAAC;YAC9B,CAAC,CAAC,IAAI,CAAC,YAAY;YACnB,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;IAC1E,CAAC;;oGAxBU,0BAA0B;wHAA1B,0BAA0B;QCdvC,yEAA0B;QAItB,yKAA6B,iCAAiC,IAAC;QAHjE,4DAKE;QACF,yEAA6B;QAGvB,uDACA;QAAA,oEAKE;QACJ,4DAAI;QACJ,uEAA+B;QAAA,uDAAwB;QAAA,4DAAI;QAE7D,yEAA8B;QAC5B,qEAA6C;QAC7C,wEAAM;QAAC,wDAAsB;QAAA,4DAAO;QAEtC,0EAA2B;QACzB,wDACA;QAAA,2HAEO;QACT,4DAAM;;QA3BN,0DAAmB;QAAnB,6IAAmB;QAQf,0DACA;QADA,2FACA;QAEE,0DAAuC;QAAvC,4JAAuC;QAKZ,0DAAwB;QAAxB,uFAAwB;QAIhD,0DAAsB;QAAtB,+FAAsB;QAG7B,0DACA;QADA,sGACA;QAAsB,0DAAyB;QAAzB,yFAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;IEFnC,qEAA+C;IACvC,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,oEAAwF;IACxF,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IAEjC,sEAAI;IAAG,+RAAS,yEAAQ,KAAC;IAAC,oEAA2B;IAAA,8EAAkB;IAAA,4DAAI;;;IARvE,0DAA4B;IAA5B,4FAA4B;IAC5B,0DAAqB;IAArB,qFAAqB;IACrB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAA8B;IAA9B,8FAA8B;IAC7B,0DAA2B;IAA3B,+JAA2B;IAC5B,0DAA2B;IAA3B,2FAA2B;IAC3B,0DAAwB;IAAxB,wFAAwB;;ADrB3C,MAAM,qBAAqB;IAGhC,YAAoB,YAA0B,EAAU,MAAc,EAAU,QAAkB;QAA9E,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAEtG,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;0FAlBU,qBAAqB;mHAArB,qBAAqB;QCVlC,yEAA0B;QAMA,iEAAM;QAAA,oEAAG;QAAA,kEAAO;QAAA,4DAAI;QAIpC,4EAA+C;QAGK,6DAAC;QAAA,4DAAK;QAC9C,yEAAwC;QAAA,qEAAS;QAAA,4DAAK;QACtD,yEAAwC;QAAA,uEAAW;QAAA,4DAAK;QACxD,yEAAwC;QAAA,8EAAkB;QAAA,4DAAK;QAC/D,yEAAwC;QAAA,uEAAW;QAAA,4DAAK;QACxD,yEAAwC;QAAA,2EAAe;QAAA,4DAAK;QAC5D,yEAAwC;QAAA,wEAAY;QAAA,4DAAK;QAGjE,yEAAO;QAEH,kHAUK;QACT,4DAAQ;;QAXoB,2DAAqB;QAArB,wHAAqB;;;;;;;;;;;;;;;;;;;;;;;;;ACfJ;AACV;AACY;AACvB;;;;;;;;;;;ICLhC,0EAA6D;IAC3D,qIACA;IAAA,6EAAiD;IAAA,uEAAY;IAAA,4DAAS;;IAA1C,0DAAoB;IAApB,6IAAoB;;;IAK5C,yEAAsD;IAAA,mEAAQ;IAAA,4DAAK;;;IACnE,yEAA0D;IACxD,6DAAC;IAAA,uEAAM;IAAC,uDAAsB;IAAA,4DAAO;;;IAA7B,0DAAsB;IAAtB,+FAAsB;;;IAKhC,yEAAsD;IAAA,kEAAO;IAAA,4DAAK;;;IAClE,yEAAuD;IACrC,uDAAuB;IAAA,4DAAI;IAC3C,wEAAiB;IAAA,uDAAwB;IAAA,4DAAI;IAC7C,wEAAiB;IAAA,uDAAwB;IAAA,4DAAI;IAC7C,wEAAmB;IAAA,uDAA0B;IAAA,4DAAI;;;IAHjC,0DAAuB;IAAvB,sFAAuB;IACtB,0DAAwB;IAAxB,uFAAwB;IACxB,0DAAwB;IAAxB,uFAAwB;IACtB,0DAA0B;IAA1B,yFAA0B;;;IAK/C,yEAAsD;IAAA,gEAAK;IAAA,4DAAK;;;IAChE,yEAAqD;IACnD,mEAAE;IAAA,uEAAM;IAAA,uDAAwB;IAAA,4DAAO;;;IAA/B,0DAAwB;IAAxB,uFAAwB;;;IAKlC,yEAAsD;IAAA,iEAAM;IAAA,4DAAK;;;;IACjE,yEAAwD;IACK,uDAAyB;IAAA,4DAAO;;;;IAArF,0DAAoD;IAApD,sLAAoD;IAAC,0DAAyB;IAAzB,wFAAyB;;;IAKtF,yEAAsD;IAAA,kEAAO;IAAA,4DAAK;;;;IAClE,yEAA2D;IACzD,qEAIE;IACJ,4DAAK;;;IAJD,0DAAoD;IAApD,kKAAoD;;;IAQxD,yEAAsD;IACpD,2EACF;IAAA,4DAAK;;;;IACL,yEAA2D;IACzD,qEAIE;IACJ,4DAAK;;;IAJD,0DAAsD;IAAtD,kKAAsD;;;IAO5D,oEAA4D;;;IAC5D,oEAAiE;;;AD/CpE,MAAM,wBAAwB;IAgBnC,YACU,QAAkB,EACnB,cAA8B,EAC7B,YAA0B;QAF1B,aAAQ,GAAR,QAAQ,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAc;QAlBpC,iBAAY,GAAY,EAAE,CAAC;QAC3B,eAAU,GAAG,IAAI,uEAAkB,EAAS,CAAC;QAG7C,2EAA2E;QAC3E,oDAAoD;QACpD,qBAAgB,GAAa;YAC3B,SAAS;YACT,WAAW;YACX,YAAY;YACZ,aAAa;YACb,SAAS;YACT,SAAS;SACV,CAAC;IAMC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY;aACd,qBAAqB,EAAE;aACvB,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAY,EAAE,EAAE;gBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YAC1B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,QAAQ,CAAC,WAAmB;QAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,QAAQ,MAAM,EAAE;YACd,KAAK,WAAW;gBACd,OAAO,OAAO,CAAC;YACjB,KAAK,WAAW;gBACd,OAAO,KAAK,CAAC;YACf;gBACE,OAAO,SAAS,CAAC;SACpB;IACH,CAAC;;gGA5DU,wBAAwB;sHAAxB,wBAAwB;kEAGxB,2DAAO;kEACP,qEAAY;;;;;;QC1BzB,yEAA8C;QAIf,2EAAgB;QAAA,4DAAK;QAC5C,gEAAM;QACR,4DAAM;QACN,oHAGM;QACN,yEAA2B;QAEvB,4EAAqC;QACnC,oHAAmE;QACnE,qHAEK;QACP,qEAAe;QAEf,6EAAuC;QACrC,oHAAkE;QAClE,qHAKK;QACP,qEAAe;QAEf,6EAAwC;QACtC,oHAAgE;QAChE,qHAEK;QACP,qEAAe;QAEf,6EAAyC;QACvC,oHAAiE;QACjE,qHAEK;QACP,qEAAe;QAEf,6EAAqC;QACnC,oHAAkE;QAClE,qHAMK;QACP,qEAAe;QAEf,6EAAqC;QACnC,oHAEK;QACL,qHAMK;QACP,qEAAe;QAEf,qHAA4D;QAC5D,qHAAiE;QACnE,4DAAQ;QACR,gFAIiB;QACnB,4DAAM;;QArEsB,0DAA+B;QAA/B,+FAA+B;QAKxC,0DAAyB;QAAzB,sFAAyB;QAwDpB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAG1D,0DAA+B;QAA/B,kJAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE7B7B,qEAAiC;IAC3B,uDAAoB;IAAA,4DAAK;IAE7B,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAIlC,qEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IAGjC,sEAAI;IAA6D,mEAAO;IAAA,4DAAS;IACjF,sEAAI;IAA+D,oEAAQ;IAAA,4DAAS;;;IAdhF,0DAAoB;IAApB,kFAAoB;IAEpB,0DAAsB;IAAtB,oFAAsB;IACtB,0DAAuB;IAAvB,qFAAuB;IACvB,0DAAyB;IAAzB,uFAAyB;IAIzB,0DAAwB;IAAxB,sFAAwB;IACxB,0DAAwB;IAAxB,sFAAwB;IACxB,0DAAwB;IAAxB,sFAAwB;IAGhB,0DAAmD;IAAnD,gKAAmD;IACnD,0DAAqD;IAArD,iKAAqD;;AD1CxE,MAAM,qBAAqB;IAIhC,YACU,YAA0B,EAC1B,MAAc,EACd,WAAwB;QAFxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAC/B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,OAAe;QACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,IAAc,EAAE,EAAE;YAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACL,CAAC;;0FAxBU,qBAAqB;mHAArB,qBAAqB;QChBlC,+DAAO;QAWP,uEAAM;QAOY,mEAAQ;QAAA,qEAAG;QAAA,gEAAI;QAAA,4DAAI;QAI7B,4EAA+C;QAGF,6DAAC;QAAA,4DAAK;QAE7C,yEAAuC;QAAA,yEAAa;QAAA,4DAAK;QACzD,yEAAuC;QAAA,0EAAc;QAAA,4DAAK;QAC1D,yEAAuC;QAAA,4EAAgB;QAAA,4DAAK;QAI5D,yEAAuC;QAAA,sEAAU;QAAA,4DAAK;QACtD,yEAAuC;QAAA,wEAAY;QAAA,4DAAK;QACxD,yEAAuC;QAAA,wEAAY;QAAA,4DAAK;QAGxD,yEAAuC;QAAA,kEAAM;QAAA,4DAAK;QAClD,yEAAuC;QAAA,oEAAQ;QAAA,4DAAK;QAGxD,yEAAO;QACL,mHAgBK;QACP,4DAAQ;;QAjBiB,2DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;ACpCpC,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;6GAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE2CN,2EAIC;IACC,uDACF;IAAA,4DAAO;;;IAHL,+JAA6C;IAE7C,0DACF;IADE,4IACF;;;IA2BE,sEAGQ;;;;;ADtDjB,MAAM,uBAAuB;IAKlC,YACS,cAA8B,EAC7B,MAAc,EACd,QAAkB,EAClB,cAA8B,EAC9B,KAAqB,EACtB,YAA0B,EACzB,WAAwB,EACxB,gBAAkC,EAClC,WAAwB,EACxB,SAAkC;QATnC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACtB,iBAAY,GAAZ,YAAY,CAAc;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAyB;QAd5C,UAAK,GAAG,CAAC,CAAC;QAEV,YAAO,GAAY,IAAI,CAAC;IAarB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAY,EAAE,EAAE;YACvE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC,MAAM,CAAC;IACZ,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY;YACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;;YACpC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IACD,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;YAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;;YAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,UAAU,CAAC,SAAS;QAClB,MAAM,IAAI,GAAS;YACjB,SAAS;YACT,QAAQ,EAAE,IAAI,CAAC,KAAK;SACrB,CAAC;QAEF,IAAI,IAAI,CAAC,wBAAwB,EAAE,EAAE;YACnC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjD,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,wBAAwB;QACtB,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;YAAE,OAAO,IAAI,CAAC;QACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5C,OAAO,KAAK,CAAC;IACf,CAAC;IAGD,UAAU;QACR,IAAI,IAAI,CAAC,OAAO,EAAE,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;aACrD,IAAI,IAAI,CAAC,OAAO,EAAE,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;aAC1D,IAAI,IAAI,CAAC,OAAO,EAAE,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;aAC1D,IAAI,IAAI,CAAC,OAAO,EAAE,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;;YAC1D,OAAO,SAAS,CAAC;IACxB,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC;QAC3E,OAAO,IAAI,CAAC,OAAO,EAAE,YAAY,GAAG,IAAI,CAAC,OAAO,EAAE,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC;IACxG,CAAC;;8FAlFU,uBAAuB;qHAAvB,uBAAuB;QCzBpC,yEAAkB;QAChB,oEAQO;QACP,yEAAqB;QAGf,oEAQO;QACP,yEAAmC;QAEL,4IAAS,YAAQ,IAAC;QAC1C,oEAA4D;QAC5D,4EAAwB;QAAA,4EAAgB;QAAA,4DAAO;QAEjD,2EAA6B;QAGC,gEAAI;QAAA,4DAAI;QAElC,0EAA2D;QAA/B,4IAAS,wBAAoB,IAAC;QACxD,qEAAG;QAAC,wDAA4B;QAAA,4DAAI;QAEtC,0EAAuD;QACrD,wDACF;QAAA,4DAAK;QAGT,0EAA0B;QACxB,wDACA;QAAA,wHAMO;QACT,4DAAK;QACL,0EAA0B;QACxB,wDACA;QAAA,4EAAsB;QAAA,wDAA6B;QAAA,4DAAO;QAE5D,yEAA+B;QAC7B,wDACF;QAAA,4DAAI;QACJ,2EAAsB;QACc,gJAAS,eAAW,IAAC;QAAC,6DAAC;QAAA,4DAAS;QAClE,6EAME;QAFA,2LAAmB;QAJrB,4DAME;QACF,8EAAyD;QAAtB,gJAAS,eAAW,IAAC;QACtD,+DACF;QAAA,4DAAS;QACT,yEAA0B;QACxB,wDACF;QAAA,4DAAI;QAEN,2EAA0B;QACI,gJAAS,qCAA6B,IAAC;QACjE,wHAGQ;QACR,yEACF;QAAA,4DAAS;QACT,8EAAgE;QAC9D,uEACF;QAAA,4DAAS;QAEX,iEAAI;QAEJ,2EAAyD;QAA/B,6IAAS,wBAAoB,IAAC;QACtD,sEAA8D;QAC9D,4EAAwB;QAAA,uFAA2B;QAAA,4DAAO;;QAvFpE,0DAKE;QALF,uPAKE;QAOI,0DAKE;QALF,uPAKE;QAWS,2DAAoB;QAApB,8IAAoB;QAGnB,0DAA4B;QAA5B,iIAA4B;QAGhC,0DACF;QADE,gIACF;QAIF,0DACA;QADA,gIACA;QAEG,0DAAkC;QAAlC,gIAAkC;QAOrC,0DACA;QADA,qGACA;QAAsB,0DAA6B;QAA7B,sIAA6B;QAGnD,0DACF;QADE,uIACF;QAOI,0DAAmB;QAAnB,8EAAmB;QAOnB,0DACF;QADE,kJACF;QAKK,0DAA4B;QAA5B,4FAA4B;QAKH,0DAAiC;QAAjC,8IAAiC;;;;;;;;;;;;;;;;;;;;;AC1EvC;;;;;;;ICFlC,yEAOC;IADC,mWAAS,gHAA4C,KAAC;IAEtD,oEAAmE;IACnE,0EAAgD;IAC1C,uDAA2B;IAAA,4DAAK;IACpC,oEAAG;IAAA,uDAAkC;IAAA,4DAAI;;;;IAV3C,8FAAkC;IAGlC,oFAA4B;IAIvB,0DAAiC;IAAjC,0JAAiC;IAEhC,0DAA2B;IAA3B,yFAA2B;IAC5B,0DAAkC;IAAlC,gGAAkC;;ADCtC,MAAM,yBAAyB;IAEpC,YACU,eAAgC,EAChC,YAA0B;QAD1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAHpC,eAAU,GAAe,EAAE,CAAC;IAIzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,eAAe;aACjB,kBAAkB,EAAE;aACpB,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,qBAAqB,CAAC,YAAY;QAChC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACvD,CAAC;;kGApBU,yBAAyB;uHAAzB,yBAAyB;QClBtC,yEAIC;QAEG,qHAaM;QACR,4DAAM;QACN,uEAKC;QACC,qEAAmE;QACnE,0EAAsB;QAAA,mEAAQ;QAAA,4DAAO;QAEvC,uEAKC;QACC,qEAAmE;QACnE,0EAAsB;QAAA,gEAAI;QAAA,4DAAO;;QA1BV,0DAAe;QAAf,mFAAe;;;;;;;;;;;;;;;;;;;;ACX1C;;;;;;GAMG;AAC4E;;;;;;ICEzE,sEAGQ;;;IAaZ,qEAAiE;;;;IAK/D,2EAIC;IACC,uDACF;IAAA,4DAAO;;;IAHL,+JAA6C;IAE7C,0DACF;IADE,qGACF;;;;;ADrBG,MAAM,oBAAoB;IAoB/B,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAJjD,oBAAe,GAAG,EAAE,CAAC;QAErB,mBAAc,GAAG,IAAI,uDAAY,EAAU,CAAC;IAEQ,CAAC;IAErD,QAAQ,KAAU,CAAC;IAEnB,UAAU,CAAC,SAAS;QAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;aAC5C,IAAI,IAAI,CAAC,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;aACjD,IAAI,IAAI,CAAC,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;aACjD,IAAI,IAAI,CAAC,eAAe,IAAI,EAAE;YAAE,OAAO,SAAS,CAAC;;YACjD,OAAO,SAAS,CAAC;IACxB,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC,YAAY,CAAC;QACzD,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;IAC7E,CAAC;;wFA3CU,oBAAoB;kHAApB,oBAAoB;QCfjC,yEAA2B;QAMrB,oEACF;QAAA,4DAAS;QACT,4EAAoD;QAAhC,4IAAS,6BAAqB,IAAC;QACjD,kHAGQ;QAER,wEACF;QAAA,4DAAS;QAEX,yEAME;QAFA,mKAA6B,gCAAgC,IAAC;QAJhE,4DAME;QAEF,gHAAiE;QACnE,4DAAM;QACN,yEAA0B;QAEtB,wDACA;QAAA,oHAMO;QACT,4DAAK;QACL,yEAA+B;QAAA,wDAAwB;QAAA,4DAAI;QAC3D,iEAAM;QACN,yEAAyB;QACvB,wDAAuB;QAAA,4EAAsB;QAAA,wDAAoB;QAAA,4DAAO;;QAtCxE,0DAAuE;QAAvE,4LAAuE;QAE/C,0DAAwC;QAAxC,6JAAwC;QAK3D,0DAA4B;QAA5B,4FAA4B;QASjC,0DAAuB;QAAvB,iJAAuB;QAMnB,0DAA0B;QAA1B,0FAA0B;QAI9B,0DACA;QADA,2FACA;QAEG,0DAAyB;QAAzB,yFAAyB;QAMC,0DAAwB;QAAxB,uFAAwB;QAGrD,0DAAuB;QAAvB,qGAAuB;QAAsB,0DAAoB;QAApB,iGAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/B/B;;;;;;;;;;;;;;ICTpC,yEAA4F;IAC1F,mFAA+C;IACjD,4DAAM;;;;IASA,wEAA4F;IAAjC,8VAAS,0FAAsB,KAAC;IAAE,uDAAiB;IAAA,4DAAI;;;IAArB,0DAAiB;IAAjB,yFAAiB;;;IAGlH,sEAAiE;;;IAVnE,yEAA+D;IAC7D,yEACA;IAAA,yEAAsB;IAElB,uDACF;IAAA,4DAAS;IACT,yEAAiE;IAC/D,kHAAkH;IACpH,4DAAM;IAER,yHAAiE;IACnE,4DAAM;;;IAPA,0DACF;IADE,6IACF;IAEuB,0DAAc;IAAd,uFAAc;IAGhC,0DAA4B;IAA5B,+FAA4B;;;;IAKnC,0EASE;IAPA,wSAAS,4EAAU,KAAC;IAFtB,4DASE;;;IACF,sEAAiE;;;IAZnE,yEAA8D;IAC5D,uDACA;IAAA,uHASE;IACF,yHAAiE;IACnE,4DAAM;;;IAZJ,0DACA;IADA,iGACA;IACG,0DAA6B;IAA7B,gGAA6B;IASzB,0DAA4B;IAA5B,+FAA4B;;;IAcnC,sEAAiE;;;;IAXnE,yEAA8D;IAC5D,uDACA;IAAA,0EAQE;IAPA,iSAAS,4EAAU,KAAC;IADtB,4DAQE;IACF,yHAAiE;IACnE,4DAAM;;;IAXJ,0DACA;IADA,4GACA;IASO,0DAA4B;IAA5B,+FAA4B;;;;IAErC,uFAYC;IADC,mVAAkB,mFAAiB,KAAC;IACrC,4DAAmB;;;IATlB,yFAA4B;;ADxBzB,MAAM,oBAAoB;IAkB/B,YACS,cAA8B,EAC7B,YAA0B,EAC1B,cAA8B,EAC9B,YAA8B,EAC9B,WAAwB,EACxB,MAAc,EACd,WAAwB,EACxB,gBAAyC;QAP1C,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAyB;QAzBnD,gBAAW,GAAc,EAAE,CAAC;QAC5B,mBAAc,GAAG,IAAI,CAAC;QACtB,iBAAY,GAAG,IAAI,CAAC;QACpB,SAAI,GAAG,CAAC,CAAC;QACT,gBAAW,GAAG;YACZ,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,KAAK,EAAE;YAC/D,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;YACjE,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,8BAA8B,EAAE,SAAS,EAAE,KAAK,EAAE;YACpF,EAAE,IAAI,EAAE,iBAAiB,EAAE,MAAM,EAAE,8BAA8B,EAAE,SAAS,EAAE,MAAM,EAAE;YACtF,EAAE,IAAI,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,EAAE;YACvE,EAAE,IAAI,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,KAAK,EAAE;YACtE,EAAE,IAAI,EAAE,qBAAqB,EAAE,MAAM,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,EAAE;YAC7E,EAAE,IAAI,EAAE,qBAAqB,EAAE,MAAM,EAAE,iBAAiB,EAAE,SAAS,EAAE,KAAK,EAAE;SAC7E,CAAC;QACF,mBAAc,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QA0GrC,wBAAmB,GAAG,CAAC,CAAC;IA9FrB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,oBAAoB;IACpB,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAc,EAAE,EAAE;YAClE,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC,MAAM,CAAC;IACZ,CAAC;IAED,2BAA2B;IAC3B,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,MAAM;QACd,IAAI,IAAI,GAAG;YACT,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,CAAC;SACZ,CAAC;QACF,IAAI,IAAI,CAAC,wBAAwB,EAAE,EAAE;YACnC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjD,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;gBAC7B,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,wBAAwB;QACtB,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;YAAE,OAAO,IAAI,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,uBAAuB;IACvB,sBAAsB;QACpB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACvD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,wBAAwB;YACxB,IAAI,CAAC,KAAK,EAAE;gBACV,iBAAiB;gBACjB,yBAAyB;aAC1B;;gBACC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,EAAE,EAAE;oBACjE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;oBACvB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACvC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B;IAC/B,qBAAqB;QACnB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACvD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,0BAA0B;YAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,QAAQ,EAAE;gBACb,iBAAiB;gBACjB,yBAAyB;aAC1B;;gBACC,IAAI,CAAC,cAAc;qBAChB,cAAc,CAAC,QAAQ,CAAC;qBACxB,IAAI,CAAC,qDAAI,CAAC,CAAC,CAAC,CAAC;qBACb,SAAS,CAAC,CAAC,GAAc,EAAE,EAAE;oBAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;oBAC/B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;oBACvB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACvC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,QAAQ,CAAC,KAAK;QACZ,IACE,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAC,GAAG,CAAC;YACvE,CAAC,IAAI,CAAC,cAAc;YACpB,CAAC,IAAI,CAAC,YAAY;YAClB,IAAI,CAAC,mBAAmB,KAAK,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,EAChE;YACA,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/D,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc;aAChB,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YACvF,iBAAiB;aAChB,SAAS,CAAC,CAAC,GAAc,EAAE,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,YAAY;gBAC5C,IACE,IAAI,CAAC,WAAW;oBAChB,IAAI,CAAC,SAAS,CACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAClE,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;oBACxB,CAAC,IAAI,CAAC,eAAe;oBAErB,iDAAiD;oBACjD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;qBAC3B;oBACH,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;oBACjC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;iBACxB;YACH,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QAEvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;wFAvKU,oBAAoB;kHAApB,oBAAoB;oJAApB,2BAAuB;;QCzBpC,yEAAoB;QAClB,gHAEM;QAEN,gHAWM;QAEN,gHAaM;QAEN,gHAYM;QACN,0IAYoB;QACtB,4DAAM;;QA1DoC,0DAAkD;QAAlD,0GAAkD;QAInE,0DAAsC;QAAtC,0GAAsC;QAatC,0DAAqC;QAArC,yGAAqC;QAerC,0DAAqC;QAArC,yGAAqC;QAezC,0DAAc;QAAd,oFAAc;;;;;;;;;;;;;;;;;;;;;;;;;;ACzC5B,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;+GAAjB,iBAAiB;QCP9B,yEAA0B;QACxB,4EAAiC;QAGjC,yEAAqB;QACnB,2EAA+B;QACjC,4DAAM;QAGR,oFAAiD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACW1C,MAAM,oBAAoB;IAG/B,YACS,cAA8B,EAC7B,MAAc,EACd,QAAkB,EAClB,KAAqB,EACtB,YAA0B,EACzB,WAAwB,EACxB,gBAAkC,EAClC,iBAAoC;QAPrC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,UAAK,GAAL,KAAK,CAAgB;QACtB,iBAAY,GAAZ,YAAY,CAAc;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAC3C,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,iBAAiB;aACnB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,MAAM,CAAC;aAC5D,SAAS,CAAC,CAAC,GAAgB,EAAE,EAAE;YAC9B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;wFA3BU,oBAAoB;kHAApB,oBAAoB;QCpBjC,yEAAkB;QAChB,oEAKO;QACP,yEAAqB;QAGf,oEAKO;QACP,yEAAgC;QAEF,yIAAS,YAAQ,IAAC;QAC1C,oEAA4D;QAC5D,4EAAwB;QAAA,gEAAI;QAAA,4DAAO;QAErC,2EAA0B;QAEtB,iEAAM;QACN,yEAAwB;QACtB,wDACA;QAAA,sEAKE;QACJ,4DAAI;QACJ,yEAAmB;QACjB,mEAAM;QAAA,4EAAmB;QAAA,wDAAmB;QAAA,4DAAO;QAGrD,yEAAmB;QACjB,sEAAS;QAAA,4EAAmB;QAAA,wDAAoB;QAAA,4DAAO;QAEzD,yEAAmB;QACjB,mEAAM;QAAA,4EAAmB;QAAA,wDAAoB;QAAA,4DAAO;QAGxD,2EAA6B;QAC3B,iEAAM;QACN,yEAAmB;QAAA,mEAAO;QAAA,4DAAI;QAC9B,yEAAmB;QAAA,wDAA0B;QAAA,4DAAI;QACjD,yEAAmB;QAAA,wDAA0B;QAAA,4DAAI;QACjD,yEAAmB;QAAA,wDAA2B;QAAA,4DAAI;QAClD,yEAAmB;QACjB,wDACF;QAAA,4DAAI;;QAlDhB,0DAEE;QAFF,2IAEE;QAOI,0DAEE;QAFF,2IAEE;QAYM,2DACA;QADA,gLACA;QAEE,0DAAwC;QAAxC,8IAAwC;QAMjB,0DAAmB;QAAnB,oHAAmB;QAIhB,0DAAoB;QAApB,qHAAoB;QAGvB,0DAAoB;QAApB,qHAAoB;QAM5B,0DAA0B;QAA1B,4JAA0B;QAC1B,0DAA0B;QAA1B,4JAA0B;QAC1B,0DAA2B;QAA3B,6JAA2B;QAE5C,0DACF;QADE,gKACF;;;;;;;;;;;;;;;;;;;;;;AChCT,MAAM,eAAe;IAC1B,YAAoB,UAAuB,EAAU,MAAc;QAA/C,eAAU,GAAV,UAAU,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEvE,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAM1B,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE;YACrC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAC/B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;8EAhBU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACHb,MAAM,SAAS;IACpB,YACU,UAAuB,EACvB,MAAc,EACd,gBAAkC;QAFlC,eAAU,GAAV,UAAU,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;IACzC,CAAC;IACJ,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAM1B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE;YACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtC,8EAA8E;YAC9E,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;kEApBU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;ACQb,MAAM,SAAS;IACpB,YACU,WAAwB,EACxB,iBAA2C;QAD3C,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAA0B;IAClD,CAAC;IAEJ,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAM1B,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,cAAc,CAAC,KAA6B,EAAE,GAAQ;QACpD,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE;YACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC5C,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC/D,kCAAkC;gBAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;gBAC9B,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;kEA5BU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2B;AACY;AACA;AACM;AACR;AACF;AACW;AACT;AACF;AACuB;AACnB;AACJ;;AAgChD,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHA3B7B,yDAAY;QACZ,qEAAe;QACf,qEAAe;QACf,mEAAc;QACd,iEAAa;QACb,2EAAkB;QAClB,iEAAa;QACb,4EAAkB;QAClB,wFAAwB;QACxB,oEAAc;QACd,sEAAe;QACf,kEAAa,EAGb,qEAAe;QACf,qEAAe;QACf,mEAAc;QACd,iEAAa;QACb,2EAAkB;QAClB,iEAAa;QACb,4EAAkB;QAClB,wFAAwB;QACxB,oEAAc;QACd,sEAAe;QACf,kEAAa;mIAGJ,oBAAoB,cA3B7B,yDAAY;QACZ,qEAAe;QACf,qEAAe;QACf,mEAAc;QACd,iEAAa;QACb,2EAAkB;QAClB,iEAAa;QACb,4EAAkB;QAClB,wFAAwB;QACxB,oEAAc;QACd,sEAAe;QACf,kEAAa,aAGb,qEAAe;QACf,qEAAe;QACf,mEAAc;QACd,iEAAa;QACb,2EAAkB;QAClB,iEAAa;QACb,4EAAkB;QAClB,wFAAwB;QACxB,oEAAc;QACd,sEAAe;QACf,kEAAa;;;;;;;;;;;;;;;AChDjB;;;;;;GAMG;AACI,MAAM,OAAO;CAMnB;;;;;;;;;;;;;;;ACJM,MAAM,IAAI;CAGhB;;;;;;;;;;;;;;;ACZD;;;;;;GAMG;AACI,MAAM,QAAQ;CAKpB;;;;;;;;;;;;;;;ACZD;;;;;;GAMG;AACH,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,wCAAyB;IACzB,mDAAoC;IACpC,sCAAuB;IACvB,oCAAqB;IACrB,4CAA6B;AAC/B,CAAC,EANW,WAAW,KAAX,WAAW,QAMtB;;;;;;;;;;;;;;;ACbD;;;;;;GAMG;AACH,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,oCAAmB;IACnB,sCAAqB;AACvB,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;;;;;;;;;;;;;;;ACVD;;;;;;GAMG;AACI,MAAM,OAAO;CAWnB;;;;;;;;;;;;;;;;;;;AClBD;;;;;;GAMG;AACsD;;;;AAMlD,MAAM,kBAAkB;IAC7B,YACU,YAAqC,EACrC,cAA8B;QAD9B,iBAAY,GAAZ,YAAY,CAAyB;QACrC,mBAAc,GAAd,cAAc,CAAgB;IACrC,CAAC;IAEJ,WAAW,CAAC,KAAY;QACtB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACrC,iDAAiD;QACjD,IAAI,CAAC,CAAC,KAAK,YAAY,mEAAiB,CAAC;YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3E,CAAC;;oFAVU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB;;;;;;;;;;;;;;;;;;;;ACb/B;;;;;;GAMG;AAO2B;AAEgB;AACF;;;AAIrC,MAAM,oBAAoB;IAC/B,YAAoB,YAAqC;QAArC,iBAAY,GAAZ,YAAY,CAAyB;IAAG,CAAC;IAE7D,SAAS,CACP,OAA6B,EAC7B,IAAiB;QAEjB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,0DAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,KAAK,EAAE,KAAK,EAAE,OAAO,KAAK,gBAAgB,EAAE,8BAA8B;gBAC5E,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YAClC,OAAO,gDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,KAAwB;QAC1C,IAAI,KAAK,YAAY,mEAAiB,EAAE;YACtC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;gBACrC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aAC9B;iBAAM;gBACL,QAAQ,KAAK,CAAC,MAAM,EAAE;oBACpB,KAAK,GAAG;wBACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;wBACvD,MAAM;oBACR,KAAK,GAAG;wBACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;wBACnD,MAAM;oBACR,KAAK,GAAG;wBACN,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,uDAAuD,CACxD,CAAC;wBACF,MAAM;oBACR;wBACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,KAAK,CAAC,MAAM,kDAAkD,CAAC;iBAClG;aACF;SACF;aAAM;YACL,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC3C;IACH,CAAC;;wFAxCU,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB;;;;;;;;;;;;;;;;;;;;;ACpBwB;AACZ;AACI;AACW;AACI;AACF;AAE9D;;;;;;GAMG;AACI,MAAM,gBAAgB,GAAG;IAC9B;QACE,OAAO,EAAE,mEAAiB;QAC1B,QAAQ,EAAE,uEAAmB;QAC7B,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,2DAAW;QACpB,QAAQ,EAAE,2DAAW;KACtB;IACD;QACE,OAAO,EAAE,uDAAY;QACrB,QAAQ,EAAE,qEAAkB;KAC7B;IACD;QACE,OAAO,EAAE,mEAAiB;QAC1B,QAAQ,EAAE,yEAAoB;QAC9B,KAAK,EAAE,IAAI;KACZ;IACD,uBAAuB;IACvB,IAAI;IACJ,gCAAgC;IAChC,+BAA+B;IAC/B,iBAAiB;IACjB,KAAK;CACN,CAAC;;;;;;;;;;;;;;;;;;;AC5BK,MAAM,mBAAmB;IAE9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,SAAS,CACP,OAA6B,EAC7B,IAAiB;QAEjB,qCAAqC;QACrC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;aACxC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,IAAI,OAAO,GAAG,OAAO,CAAC;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,KAAK,CAAC;QAChE,8BAA8B;QAC9B,IAAI,KAAK,KAAK,SAAS;YACrB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,UAAU,KAAK,EAAE,CAAC;aACpE,CAAC,CAAC;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;sFAxBU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB;;;;;;;;;;;;;;;;;ACFO;;AAKhC,MAAM,wBAAwB;IACnC;QAEQ,YAAO,GAAsC,IAAI,iDAAe,CACtE,OAAO,CACR,CAAC;IAJa,CAAC;IAMhB,KAAK;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;;gGAjBU,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB,mBAFvB,MAAM;;;;;;;;;;;;;;;;;;ACH+B;;;AAK5C,MAAM,gBAAgB;IAG3B,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAEjC,YAAO,GAAsC,IAAI,iDAAe,CACtE,OAAO,CACR,CAAC;IAJ0C,CAAC;IAM7C,KAAK;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,IAAI,CAAC,GAAG;QACN,IAAI,CAAC,WAAW,GAAG,GAAG,IAAI,GAAG;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;;gFArBU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;ACDuC;AAGtB;;;;;;AAK9B,MAAM,WAAW;IAGtB,iDAAiD;IAEjD,YACU,IAAgB,EAChB,MAAc,EACd,SAA2B,EAC3B,WAAyB;QAHzB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAkB;QAC3B,gBAAW,GAAX,WAAW,CAAc;QAPnC,mBAAc,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,OAAO,CAAC;IAQ1E,CAAC;IAEJ,KAAK,CAAC,QAAQ;QACZ,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,QAAQ,EAAE,QAAQ,CAAC;aAC9C,IAAI,CAAC,mDAAG,CAAC,CAAC,IAAU,EAAE,EAAE;YACvB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,oBAAoB,CAAC,IAAU;QAC7B,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,uBAAuB;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,MAAM;QACJ,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,uBAAuB,EAAE,EAAE,KAAK;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,eAAe;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,EAAE,EAAE,KAAK,CAAC;QACpD,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,qBAAqB,CAAE,QAAQ;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,mBAAmB,QAAQ,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,oBAAoB,CAAE,QAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,iBAAiB,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,uBAAuB,EAAE,EAAE,IAAI,CAAC;IAC9C,CAAC;;sEAxDU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;ACT+B;;AAK5C,MAAM,uBAAuB;IAClC;QAEQ,YAAO,GAAsC,IAAI,iDAAe,CACtE,OAAO,CACR,CAAC;IAJa,CAAC;IAMhB,KAAK;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;;8FAjBU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;;ACFuC;;;;AAOpD,MAAM,WAAW;IAItB,YAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFtE,mBAAc,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,OAAO,CAAC;IAEH,CAAC;IAE3E,SAAS,CAAC,IAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7G,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,SAAS,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5G,CAAC;IAED,kBAAkB,CAAC,SAAS;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,cAAc,WAAW,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,CAAC;IAC7H,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,mBAAmB,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC;IAC5H,CAAC;;sEApBU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;ACLuC;;;AAMpD,MAAM,eAAe;IAG1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,uBAAkB,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,aAAa,CAAC;IAEhD,CAAC;IAExC,kBAAkB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAChD,CAAC;IAED,cAAc,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,cAAc,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,SAAS,CAAC,EAAE;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,kBAAkB,IAAI,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;;8EAnBU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;ACJuC;;;AAKpD,MAAM,sBAAsB;IAGjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,oBAAe,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,WAAW,CAAC;IAE3C,CAAC;IAExC,sBAAsB,CAAC,OAAO;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,IAAI,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;;4FAPU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;;;;;ACJmB;;AAOhC,MAAM,YAAY;IAOvB;QALO,sBAAiB,GAAG,IAAI,iDAAe,CAAM,IAAI,CAAC,CAAC;QACnD,iBAAY,GAAG,IAAI,iDAAe,CAAO,IAAI,CAAC,CAAC;QAC/C,oBAAe,GAAG,IAAI,iDAAe,CAAS,IAAI,CAAC,CAAC;QACpD,uBAAkB,GAAG,IAAI,iDAAe,CAAS,IAAI,CAAC,CAAC;IAE9C,CAAC;;wEAPN,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;ACL+B;;AAK5C,MAAM,sBAAsB;IAHnC;QAMU,YAAO,GAAsC,IAAI,iDAAe,CACtE,OAAO,CACR,CAAC;KAeH;IAbC,KAAK;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,IAAI,CAAC,OAAO,EAAE,GAAG;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;;4FAnBU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;;;;;;ACFuC;;;AAKpD,MAAM,kBAAkB;IAG7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,mBAAc,GAAG,GAAG,iFAAuB,QAAQ,oFAA0B,GAAG,CAAC;IAC1C,CAAC;IAExC,aAAa,CAAC,EAAE;QACd,gEAAgE;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,QAAQ,0EAAgB,OAAO,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,EAAC,IAAI,EAAC,MAAM,EAAC,EAAC,CAAC;IAC1G,CAAC;;oFARU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;ACJ+B;;AAK5C,MAAM,uBAAuB;IAIlC;QAEQ,YAAO,GAAsC,IAAI,iDAAe,CACtE,OAAO,CACR,CAAC;IAJa,CAAC;IAMhB,KAAK;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,IAAI,CAAC,KAAK;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;;8FAtBU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;ACCb,MAAM,cAAc;IAIzB;QAFO,YAAO,GAAG,KAAK,CAAC;IAER,CAAC;IAEhB,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;;4EAZU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;ACDuC;;;AAKpD,MAAM,iBAAiB;IAG5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,mBAAc,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,EAAE,CAAC;IAEjC,CAAC;IAExC,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,WAAW,CAAC,CAAC;IAC1D,CAAC;IAED,UAAU,CAAC,QAAQ;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,WAAW,EAAE,QAAQ,CAAC,CAAC;IACpE,CAAC;IAED,OAAO,CAAC,QAAQ;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,WAAW,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IAED,SAAS,CAAC,EAAE;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,aAAa,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,wBAAwB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB,CAAC,IAAI;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,KAAK,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;;kFA3BU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;;;;;ACX+B;;AAK5C,MAAM,uBAAuB;IAElC;QAEQ,YAAO,GAAuD,IAAI,iDAAe,CACvF,OAAO,CACR,CAAC;IAJa,CAAC;IAMhB,KAAK;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACpC,CAAC;;8FAtBU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;;ACKuC;;;;AAOpD,MAAM,YAAY;IAGvB,YAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFtE,oBAAe,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,SAAS,CAAC;IAEP,CAAC;IAE1E,iBAAiB,CAAC,IAAuB;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,SAAS,CAAC,EAAE;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,IAAI,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,aAAa,CACvB,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,EAAE,MAAM,CACnD,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,MAAM;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,SAAS,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;;wEAzBU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;ACdpB;;;;;;GAMG;AAC2D;AAEH;;;;AAMpD,MAAM,sBAAsB;IAGjC,YAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFtE,sBAAiB,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,UAAU,CAAC;IAEV,CAAC;IAE1E,eAAe,CAAC,MAAM;QACpB,IAAI,MAAM,GAAG,IAAI,4DAAU,EAAE;aAC1B,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,QAAQ,CAAC;aACnE,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,gBAAgB,EAAE;YAC9D,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,eAAe,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;;4FAhBU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;;;;;;;ACbpB;;;;;;GAMG;AAC4D;AAEhC;AAC4B;;;AAKpD,MAAM,oBAAoB;IAG/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,sBAAiB,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,UAAU,CAAC;QACnF,oBAAe,GAAG,IAAI,yCAAO,EAAE,CAAC;IACO,CAAC;IAExC,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;YACpD,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAChD,CAAC,CAAC,EAAE,GAAG,eAAe,CAAC;YACvB,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;YAC3B,CAAC,CAAC,GAAG,GAAG,yCAAyC,CAAC;YAClD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IAED,gBAAgB;IAChB,GAAG,CAAC,MAAM;QACR,IAAI,OAAO,GAAI,MAAc,CAAC,cAAc,CAAC,SAAS,CAAC;YACrD,GAAG,EAAE,qFAA2B;YAChC,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,+CAA+C;gBAC/C,qDAAqD;gBACrD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACpC,CAAC;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,IAAI,CAAC;YACX,IAAI,EAAE,WAAW;YACjB,WAAW,EACT,iEAAiE;YACnE,MAAM,EAAE,MAAM,GAAG,GAAG;YACpB,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,KAAa,EAAE,MAAc;QACtC,oCAAoC;QACpC,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,uBAAuB;QAC5E,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,0CAA0C;QAEjG,IAAI,CAAC,IAAI;aACN,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,SAAS,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC;aACzD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;;wFA9CU,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;;;;;;;;;;;;;;;;;;;ACJiB;AACsB;;;AAKpD,MAAM,cAAc;IAGzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,sBAAiB,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,WAAW,CAAC;IAE7C,CAAC;IAExC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC/C,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,SAAS,IAAI,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,cAAc,CAAC,QAAQ;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,aAAa,QAAQ,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,SAAS,CAAC,SAAS;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,IAAI,SAAS,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,OAAO,CAAC,CAAC;IAC9D,CAAC;IAED,aAAa,CAAC,SAAS;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,IAAI,SAAS,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,aAAa,CAAC,OAAO;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,iBAAiB,IAAI,WAAW,MAAM,cAAc,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAClJ,CAAC;;4EAnCU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;ACJiB;AACsB;;;;;AAQpD,MAAM,iBAAiB;IAG5B,YACU,IAAgB,EAChB,WAAyB,EACzB,WAAwB;QAFxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAc;QACzB,gBAAW,GAAX,WAAW,CAAa;QALlC,mBAAc,GAAG,GAAG,8EAAoB,GAAG,oFAA0B,SAAS,CAAC;IAM5E,CAAC;IAEJ,2BAA2B,CAAC,IAAI;QAC9B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,SAAS,EAAE,IAAI,CAAC;aAC3C,IAAI,CAAC,mDAAG,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,6BAA6B,CAAC,IAAI;QAChC,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,WAAW,EAAE,IAAI,CAAC;aAC7C,IAAI,CAAC,mDAAG,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,SAAS,EAAE,IAAI,CAAC;aAC3C,IAAI,CAAC,mDAAG,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,YAAY,CAAC,IAAU;QACrB,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;;kFA9BU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;;;;;ACR+B;;AAK5C,MAAM,wBAAwB;IAHrC;QAKU,YAAO,GAAsC,IAAI,iDAAe,CACtE,OAAO,CACR,CAAC;KAcH;IAZC,KAAK;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,IAAI,CAAC,OAAO;QACV,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;;gGAjBU,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB,mBAFvB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICXpBA,qEAAAA;IACEA,4DAAAA;IAA2CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IACzCA,4DAAAA;IAAKA,wDAAAA;MAAA,OAASC,wBAAT;IAAiC,CAAjC;IACHD,4DAAAA;IAAIA,oDAAAA;IAAaA,0DAAAA;IACjBA,4DAAAA;IAAGA,oDAAAA;IAA0CA,0DAAAA;IAC7CA,uDAAAA;IACAA,4DAAAA,cAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,EAArB,EAAqB,QAArB,EAAqB,CAArB;IAEsCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IAAkBA,oDAAAA;IAAOA,0DAAAA;IAKrEA,mEAAAA;;;;;IAZWA,uDAAAA;IAAAA,yDAAAA;;;;ACUL,MAAOE,0BAAP,CAAiC;EAGrCC,YACUC,YADV,EAEUC,QAFV,EAGUC,MAHV,EAGwB;IAFd;IACA;IACA;EACN;;EAEJC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,YAAL,CAAkBK,KAAlB,EAAhB;EACD;;EAEDC,KAAK;IACH,KAAKJ,MAAL,CAAYK,aAAZ,CAA0B,GAA1B;IACA,KAAKP,YAAL,CAAkBM,KAAlB;EACD;;EAEDE,MAAM;IACJ,KAAKP,QAAL,CAAcQ,IAAd;EACD;;AApBoC;;;mBAA1BX,4BAA0BF,+DAAAA,CAAAA,kGAAAA,GAAAA,+DAAAA,CAAAA,qDAAAA,GAAAA,+DAAAA,CAAAA,mDAAAA;AAAA;;;QAA1BE;EAA0BY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXvClB,wDAAAA;;;;;MAAeA,wDAAAA,SAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;AEQR,MAAM,qBAAqB;IAEhC,YAAoB,KAAqB,EAAU,MAAc;QAA7C,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAErE,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACvE,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;;0FAVU,qBAAqB;mHAArB,qBAAqB;QCRlC,yEAAoB;QAEZ,8DAAG;QAAA,4DAAK;QAAC,gEAAI;QACjB,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,oEAAG;QAAA,qGAA0C;QAAA,4DAAI;QACjD,iEAAM;QACN,qEAAG;QAAA,uEAAW;QAAA,wEAA4B;QAAzB,yIAAS,kBAAc,IAAC;QAAC,yEAAa;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICN/DA,qEAAAA;IACEA,4DAAAA;IAA2CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IACzCA,4DAAAA;IAAKA,wDAAAA;MAAA,OAASC,wBAAT;IAAiC,CAAjC;IACHD,4DAAAA;IAAIA,oDAAAA;IAA+BA,0DAAAA;IACnCA,4DAAAA;IAAGA,oDAAAA;IAAwFA,0DAAAA;IAC3FA,uDAAAA;IACAA,4DAAAA,cAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,EAArB,EAAqB,QAArB,EAAqB,CAArB;IAE+BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,aAAK,QAAL,EAAT;IAAuB,CAAvB;IAAyBA,oDAAAA;IAAKA,0DAAAA;IACzDA,4DAAAA;IAA2BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,aAAK,WAAL,EAAT;IAA0B,CAA1B;IAA4BA,oDAAAA;IAAQA,0DAAAA;IAEjEA,4DAAAA,eAAmB,EAAnB,EAAmB,QAAnB,EAAmB,CAAnB;IACoCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IAAkBA,oDAAAA;IAAMA,0DAAAA;IAKpEA,mEAAAA;;;;;IAhBWA,uDAAAA;IAAAA,yDAAAA;;;;ACgBL,MAAOmB,kBAAP,CAAyB;EAG7BhB,YAAoBC,YAApB,EAA4DE,MAA5D,EAA0E;IAAtD;IAAwC;EAAkB;;EAE9EC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,YAAL,CAAkBK,KAAlB,EAAhB;EACD;;EAEDC,KAAK;IACH,KAAKN,YAAL,CAAkBM,KAAlB;EACD;;EAEDU,IAAI,CAACC,IAAD,EAAK;IACP,KAAKf,MAAL,CAAYgB,QAAZ,CAAqB,CAACD,IAAD,CAArB,EAA6B;MAAEE,WAAW,EAAE;QAAEC,SAAS,EAAE,KAAKpB,YAAL,CAAkBqB;MAA/B;IAAf,CAA7B;IACA,KAAKf,KAAL;EACD;;AAhB4B;;;mBAAlBS,oBAAkBnB,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,mDAAAA;AAAA;;;QAAlBmB;EAAkBL;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDjB/BlB,wDAAAA;;;;;MAAeA,wDAAAA,SAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEAfA,qEAAAA;IACEA,4DAAAA;IAA2CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IACzCA,4DAAAA;IAAKA,wDAAAA;MAAA,OAASC,wBAAT;IAAiC,CAAjC;IACHD,4DAAAA;IAAIA,oDAAAA;IAAkBA,0DAAAA;IACtBA,4DAAAA;IAAGA,oDAAAA;IAAUA,0DAAAA;IACbA,uDAAAA;IACAA,4DAAAA,cAAqB,CAArB,EAAqB,QAArB,EAAqB,CAArB;IAC8BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,mBAAT;IAAmB,CAAnB;IAAqBA,oDAAAA;IAAUA,0DAAAA;IAC3DA,4DAAAA,eAAmB,EAAnB,EAAmB,QAAnB,EAAmB,CAAnB;IACoCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IAAkBA,oDAAAA;IAAIA,0DAAAA;IAKlEA,mEAAAA;;;;;IAbWA,uDAAAA;IAAAA,yDAAAA;;;;ACgBL,MAAO0B,yBAAP,CAAgC;EAGpCvB,YACUC,YADV,EAEUE,MAFV,EAEwB;IADd;IACA;EACN;;EAEJC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,YAAL,CAAkBK,KAAlB,EAAhB;EACD;;EAEDC,KAAK;IACH,KAAKN,YAAL,CAAkBM,KAAlB;EACD;;EAEDiB,QAAQ;IACN,KAAKrB,MAAL,CAAYK,aAAZ,CAA0B,gBAA1B;IACA,KAAKD,KAAL;EACD;;AAnBmC;;;mBAAzBgB,2BAAyB1B,+DAAAA,CAAAA,gGAAAA,GAAAA,+DAAAA,CAAAA,mDAAAA;AAAA;;;QAAzB0B;EAAyBZ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDjBtClB,wDAAAA;;;;;MAAeA,wDAAAA,SAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEOR,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;6GAAf,eAAe;QCP5B,4EAAqD;QAG/C,oEAAyC;QACzC,yEAAmC;QAE/B,oEAA2D;QAE7D,4DAAI;QACJ,oEAAG;QACD,uFAA2B;QAAA,iEAAM;QACjC,+FACF;QAAA,4DAAI;QAEN,oEAA4C;QAC5C,0EAAmC;QACO,qEAAS;QAAA,4DAAK;QACtD,0EAA0B;QAE4B,oEAAQ;QAAA,4DAAI;QAEhE,sEAAI;QAC2C,gEAAI;QAAA,4DAAI;QAI3D,0EAAmC;QACO,iEAAK;QAAA,4DAAK;QAElD,0EAAoC;QAE0B,gEAAI;QAAA,4DAAI;QAEpE,sEAAI;QAEA,uEACF;QAAA,4DAAI;QAIV,0EAAmC;QACO,qEAAS;QAAA,4DAAK;QACtD,0EAA8B;QAGxB,sEAAsD;QACxD,4DAAI;QAEN,sEAAI;QAEA,sEAA6D;QAC/D,4DAAI;QAEN,sEAAI;QAEA,sEAAwD;QAC1D,4DAAI;QAEN,sEAAI;QAEA,sEAAuD;QACzD,4DAAI;QAMd,2EAA0C;QACxC,sGACA;QAAA,yEAA6C;QAAC,sEAAS;QAAA,4DAAI;;QAhE/B,0DAAoB;QAApB,8IAAoB;QAchB,2DAAyB;QAAzB,8IAAyB;QAGzB,0DAAoB;QAApB,8IAAoB;QASpB,0DAAiC;QAAjC,8IAAiC;QAGjC,0DAAmC;QAAnC,8IAAmC;QAUxD,0DAAoB;QAApB,8IAAoB;QAKpB,0DAAoB;QAApB,8IAAoB;QAKpB,0DAAoB;QAApB,8IAAoB;QAKpB,0DAAoB;QAApB,8IAAoB;QAUP,0DAAoB;QAApB,8IAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICrEhDA,qEAAAA;IACEA,4DAAAA;IAA2CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IACzCA,4DAAAA;IAAKA,wDAAAA;MAAA,OAASC,wBAAT;IAAiC,CAAjC;IACHD,4DAAAA;IAAIA,oDAAAA;IAAOA,0DAAAA;IACXA,4DAAAA;IAAIA,oDAAAA;IAAcA,0DAAAA;IAClBA,uDAAAA;IACAA,4DAAAA,cAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,EAArB,EAAqB,QAArB,EAAqB,CAArB;IAE+BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IAAkBA,oDAAAA;IAAIA,0DAAAA;IAK3DA,mEAAAA;;;;;;IAZWA,uDAAAA;IAAAA,yDAAAA;IAGDA,uDAAAA;IAAAA,gEAAAA;;;;ACSJ,MAAO4B,wBAAP,CAA+B;EAInCzB,YACUC,YADV,EAESyB,cAFT,EAGUvB,MAHV,EAGwB;IAFd;IACD;IACC;EACN;;EAEJC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,YAAL,CAAkBK,KAAlB,EAAhB;IACA,KAAKqB,gBAAL;EACD;;EACDA,gBAAgB;IACd,KAAKtB,QAAL,CAAcuB,SAAd,CAAyBC,GAAD,IAAQ;MAC9B,KAAKC,OAAL,GAAe,KAAK7B,YAAL,CAAkB6B,OAAjC;IACD,CAFD;EAGD;;EAEDvB,KAAK;IACH,KAAKN,YAAL,CAAkBM,KAAlB;IACA,KAAKJ,MAAL,CAAYK,aAAZ,CAA0B,KAAKP,YAAL,CAAkB8B,GAA5C;EACD;;AAvBkC;;;mBAAxBN,0BAAwB5B,+DAAAA,CAAAA,8FAAAA,GAAAA,+DAAAA,CAAAA,4EAAAA,GAAAA,+DAAAA,CAAAA,mDAAAA;AAAA;;;QAAxB4B;EAAwBd;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDbrClB,wDAAAA;;;;;MAAeA,wDAAAA,SAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEAfA,qEAAAA;IACEA,4DAAAA;IAA2CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IACzCA,4DAAAA;IAAKA,wDAAAA;MAAA,OAASC,wBAAT;IAAiC,CAAjC;IACHD,4DAAAA;IAAIA,oDAAAA;IAAoBA,0DAAAA;IACxBA,4DAAAA;IAAIA,oDAAAA;IAAYA,0DAAAA;IAChBA,uDAAAA;IACAA,4DAAAA,cAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,EAArB,EAAqB,QAArB,EAAqB,CAArB;IAEsCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IAAkBA,oDAAAA;IAAIA,0DAAAA;IAKlEA,mEAAAA;;;;;;IAZWA,uDAAAA;IAAAA,yDAAAA;IAGDA,uDAAAA;IAAAA,gEAAAA;;;;ACYJ,MAAOmC,yBAAP,CAAgC;EAIpChC,YAAoBC,YAApB,EAAyD;IAArC;EAAyC;;EAE7DG,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,YAAL,CAAkBK,KAAlB,EAAhB;IACA,KAAKqB,gBAAL;EACD;;EACDA,gBAAgB;IACd,KAAKtB,QAAL,CAAcuB,SAAd,CAAyBC,GAAD,IAAU,KAAKI,KAAL,GAAa,KAAKhC,YAAL,CAAkBgC,KAAjE;EACD;;EAED1B,KAAK;IACH,KAAKN,YAAL,CAAkBM,KAAlB;EACD;;AAhBmC;;;mBAAzByB,2BAAyBnC,+DAAAA,CAAAA,gGAAAA;AAAA;;;QAAzBmC;EAAyBrB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDhBtClB,wDAAAA;;;;;MAAeA,wDAAAA,SAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IG4BP,wEAIC;IADC,0VAAS,yGAAqC,KAAC;IAE/C,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,oGACF;;;;IAmBA,wEAIC;IACC,uDACF;IAAA,4DAAI;;;IAHF,2JAA0B;IAE1B,0DACF;IADE,wFACF;;;IAlBJ,wEAA4D;IASxD,mEACF;IAAA,4DAAI;IACJ,yEAA4D;IAC1D,kHAMI;IACN,4DAAM;;;IANe,0DAAY;IAAZ,qFAAY;;;IASnC,wEAA0D;IAGtD,uDAAe;IAAA,4DAChB;;;IAF6B,0DAA0B;IAA1B,2JAA0B;IACtD,0DAAe;IAAf,uFAAe;;;IAiBf,wEAIC;IACC,uDACF;IAAA,4DAAI;;;IAHF,4JAA0B;IAE1B,0DACF;IADE,yFACF;;;;IACA,wEACG;IADyC,mSAAS,0EAAQ,KAAC;IAC3D,kEAAO;IAAA,4DACT;;;IArBL,wEAAwC;IASpC,uDACF;IAAA,4DAAI;IACJ,yEAA4D;IAC1D,kHAMI;IACJ,kHAEC;IACH,4DAAM;;;IAbJ,0DACF;IADE,uFACF;IAGqB,0DAAc;IAAd,uFAAc;IAMP,0DAAgB;IAAhB,mFAAgB;;AD5E3C,MAAM,mBAAmB;IA4B9B,YACU,WAAwB,EACxB,YAA0B,EAC1B,eAAgC,EAChC,MAAc,EACd,iBAAoC;QAJpC,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QA/B9C,eAAU,GAAG,EAAE,CAAC;QAGhB,gBAAW,GAAG;YACZ,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE;YACjD,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,uBAAuB,EAAE;YACvD,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,kBAAkB,EAAE;SAClD,CAAC;QACF,aAAQ,GAAG;YACT,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE;YACjC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE;SACzC,CAAC;QACF,iBAAY,GAAG;YACb,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE;YACjC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE;YACtC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,gBAAgB,EAAE;SAC7C,CAAC;QACF,cAAS,GAAG;YACV,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,YAAY,EAAE;YAC3C,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,aAAa,EAAE;YAC9C,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,oBAAoB,EAAE;YACpD,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,qBAAqB,EAAE;SACzD,CAAC;QACF,eAAU,GAAe,EAAE,CAAC;QAC5B,gBAAW,GAAG,EAAE,CAAC;IAQd,CAAC;IACJ,aAAa;QACX,0EAA0E;QAC1E,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE;YACtC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CACjC,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAC3C,CAAC;SACH;QACD,uCAAuC;;YAClC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,eAAe;aACjB,kBAAkB,EAAE;aACpB,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/C,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAG;gBAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,iBAAiB;aACnB,wBAAwB,EAAE;aAC1B,SAAS,CACR,CAAC,GAAoB,EAAE,EAAE,CACvB,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,SAAS,GAAG,GAAG,GAAG,GAAG,EAAE,QAAQ,CAAC,CACrD,CAAC;IACN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,cAAc,CAAC,QAAQ;QACrB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;;sFAjGU,mBAAmB;iHAAnB,mBAAmB;QCdhC,yEAA2E;QACjD,sIAAS,mBAAe,IAAI,CAAC,IAAC;QACpD,oEAA2D;QAE7D,4DAAI;QACJ,wEAA+B;QAIzB,0JAAiB,gBAAY,IAAC;QAFhC,4DAOE;QAEJ,wEAAqB;QASjB,yEACF;QAAA,4DAAI;QACJ,0EAA4D;QAC1D,8GAMI;QACJ,yEAAwD;QAA/B,uIAAS,mBAAe,IAAI,CAAC,IAAC;QACrD,0EACF;QAAA,4DAAI;QAIR,gHAoBK;QAEL,gHAKK;QACL,oEAA+B;QAE/B,gHAuBK;QACP,4DAAK;;QArFC,0DAAyB;QAAzB,oFAAyB;QAmBF,0DAAa;QAAb,mFAAa;QAYlB,0DAAoC;QAApC,wGAAoC;QAsBf,0DAAa;QAAb,mFAAa;QAQlC,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;AChEnC,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;+GAAjB,iBAAiB;QCP9B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICAvBA,qEAAAA;IACEA,4DAAAA;IAA2CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IACzCA,4DAAAA;IAAKA,wDAAAA;MAAA,OAASC,wBAAT;IAAiC,CAAjC;IACHD,4DAAAA;IAAIA,oDAAAA;IAA6BA,0DAAAA;IACjCA,4DAAAA;IAAGA,oDAAAA;IAAuBA,0DAAAA;IAC1BA,uDAAAA;IACAA,4DAAAA,cAAqB,CAArB,EAAqB,QAArB,EAAqB,CAArB;IAC8BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,6BAAT;IAA6B,CAA7B;IAA+BA,oDAAAA;IAAGA,0DAAAA;IAC9DA,4DAAAA,eAAmB,EAAnB,EAAmB,QAAnB,EAAmB,CAAnB;IACoCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IAAkBA,oDAAAA;IAAEA,0DAAAA;IAKhEA,mEAAAA;;;;;IAbWA,uDAAAA;IAAAA,yDAAAA;;;;ACSL,MAAOqC,yBAAP,CAAgC;EAIpClC,YACUC,YADV,EAEUE,MAFV,EAEwB;IADd;IACA;EACN;;EAEJC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,YAAL,CAAkBK,KAAlB,EAAhB;EACD;;EAEDC,KAAK;IACH,KAAKN,YAAL,CAAkBM,KAAlB;EACD;;EAED4B,kBAAkB;IAChB,KAAKlC,YAAL,CAAkBmC,WAAlB;EACD;;AAnBmC;;;mBAAzBF,2BAAyBrC,+DAAAA,CAAAA,gGAAAA,GAAAA,+DAAAA,CAAAA,mDAAAA;AAAA;;;QAAzBqC;EAAyBvB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVtClB,wDAAAA;;;;;MAAeA,wDAAAA,SAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AESf;AACA;;;;;;;;;;ICCUA,4DAAAA;IACEA,oDAAAA;IACFA,0DAAAA;;;;;IAFoDA,wDAAAA;IAClDA,uDAAAA;IAAAA,gEAAAA;;;;;;IAQAA,uDAAAA;;;;;;;;IApBZA,qEAAAA;IACEA,4DAAAA,eAA2C,CAA3C,EAA2C,KAA3C,EAA2C,CAA3C;IACOA,wDAAAA;MAAA,OAASC,wBAAT;IAAiC,CAAjC;IACHD,4DAAAA;IAAIA,oDAAAA;IAAYA,0DAAAA;IAChBA,4DAAAA;IAAGA,oDAAAA;IAAoCA,0DAAAA;IACvCA,4DAAAA;IAAGA,oDAAAA;IAA4CA,0DAAAA;IAC/CA,4DAAAA,cAAwB,EAAxB,EAAwB,QAAxB,EAAwB,CAAxB;IAC+BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;IAAA;IAC3BA,4DAAAA;IACEA,oDAAAA;IACFA,0DAAAA;IACAA,wDAAAA;;IAGFA,0DAAAA;IAEFA,uDAAAA;IACAA,4DAAAA,eAAqB,EAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,EAArB,EAAqB,QAArB,EAAqB,CAArB;IAEmFA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,iBAAT;IAAiB,CAAjB;IAC7EA,wDAAAA;IAIAA,oDAAAA;IACFA,0DAAAA;IACAA,4DAAAA;IAAkCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAT;IAAgB,CAAhB;IAAkBA,oDAAAA;IAAMA,0DAAAA;IAKpEA,mEAAAA;;;;;;IA9BWA,uDAAAA;IAAAA,yDAAAA;IAGFA,uDAAAA;IAAAA,gEAAAA;IACAA,uDAAAA;IAAAA,gEAAAA;IAE4BA,uDAAAA;IAAAA,wDAAAA;IACMA,uDAAAA;IAAAA,wDAAAA;IAGRA,uDAAAA;IAAAA,wDAAAA,YAAAA,yDAAAA;IAQjBA,uDAAAA;IAAAA,wDAAAA;IAEHA,uDAAAA;IAAAA,wDAAAA;;;;ADAT,MAAO0C,0BAAP,CAAiC;EAMrCvC,YACUC,YADV,EAESyB,cAFT,EAGUc,cAHV,EAGwC;IAF9B;IACD;IACC;IANV,mBAAcF,8EAAd;IACA,qBAAgB,UAAhB;EAMI;;EAEJlC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,YAAL,CAAkBK,KAAlB,EAAhB;IACA,KAAKqB,gBAAL;EACD;;EACDA,gBAAgB;IACd,KAAKtB,QAAL,CAAcuB,SAAd,CAAyBC,GAAD,IAAQ;MAC9B,KAAKY,OAAL,GAAe,KAAKxC,YAAL,CAAkBwC,OAAjC;IACD,CAFD;EAGD;;EAEDlC,KAAK;IACH,KAAKN,YAAL,CAAkBM,KAAlB;EACD;;EAEDmC,MAAM;IACJ,KAAKD,OAAL,CAAaE,aAAb,GAA6B,KAAKC,aAAlC;IACA,KAAKlB,cAAL,CAAoBmB,aAApB;IACA,KAAKL,cAAL,CACGM,aADH,CACiB,KAAKL,OADtB,EAEGM,IAFH,CAEQV,oDAAI,CAAC,CAAD,CAFZ,EAGGT,SAHH,CAGa;MACToB,IAAI,EAAE,MAAK;QACT,KAAKtB,cAAL,CAAoBuB,cAApB;QACA,KAAK1C,KAAL;MACD;IAJQ,CAHb;EASD;;AAtCoC;;;mBAA1BgC,4BAA0B1C,+DAAAA,CAAAA,kGAAAA,GAAAA,+DAAAA,CAAAA,4EAAAA,GAAAA,+DAAAA,CAAAA,4EAAAA;AAAA;;;QAA1B0C;EAA0B5B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCrBvClB,wDAAAA;;;;;MAAeA,wDAAAA,SAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;ACAf,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE,SAAS;IACnB,cAAc,EAAE,8BAA8B;IAC9C,oCAAoC;IACpC,WAAW,EAAE,EAAE;IACf,cAAc,EAAE,EAAE;IAClB,YAAY,EAAE,EAAE;IAChB,cAAc,EAAE,EAAE;IAClB,WAAW,EAAE,EAAE;IACf,cAAc,EAAE,kCAAkC;IAClD,WAAW,EAAE,gDAAgD;IAC7D,eAAe,EAAE,6GAA6G;IAC9H,iBAAiB,EAAE,yBAAyB;IAC5C,cAAc,EAAE,0EAA0E;IAC1F,gBAAgB,EAAE,iBAAiB;IACnC,IAAI,EAAE,QAAQ;CACf,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;AC9BvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin/add-category-new/add-category-new.component.ts","./src/app/components/admin/add-category-new/add-category-new.component.html","./src/app/components/admin/add-category/add-category.component.ts","./src/app/components/admin/add-category/add-category.component.html","./src/app/components/admin/add-product-new/add-product-new.component.ts","./src/app/components/admin/add-product-new/add-product-new.component.html","./src/app/components/admin/add-product/add-product.component.ts","./src/app/components/admin/add-product/add-product.component.html","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/admin/update-category/update-category.component.ts","./src/app/components/admin/update-category/update-category.component.html","./src/app/components/admin/update-product/update-product.component.ts","./src/app/components/admin/update-product/update-product.component.html","./src/app/components/admin/view-categories/view-categories.component.ts","./src/app/components/admin/view-categories/view-categories.component.html","./src/app/components/admin/view-product-new/view-product-new.component.ts","./src/app/components/admin/view-product-new/view-product-new.component.html","./src/app/components/admin/view-product/view-product.component.ts","./src/app/components/admin/view-product/view-product.component.html","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/components/auth/change-password/change-password.component.ts","./src/app/components/auth/change-password/change-password.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/auth/register/register.component.ts","./src/app/components/auth/register/register.component.html","./src/app/components/auth/request-question/request-question.component.ts","./src/app/components/auth/request-question/request-question.component.html","./src/app/components/auth/social-register/social-register.component.ts","./src/app/components/auth/social-register/social-register.component.html","./src/app/components/products/about-us/about-us.component.ts","./src/app/components/products/about-us/about-us.component.html","./src/app/components/products/cart-new/cart-item-card/cart-item-card.component.ts","./src/app/components/products/cart-new/cart-item-card/cart-item-card.component.html","./src/app/components/products/cart-new/cart-new.component.ts","./src/app/components/products/cart-new/cart-new.component.html","./src/app/components/products/cart/cart.component.ts","./src/app/components/products/cart/cart.component.html","./src/app/components/products/checkout/cart-summary/cart-summary.component.ts","./src/app/components/products/checkout/cart-summary/cart-summary.component.html","./src/app/components/products/checkout/checkout.component.ts","./src/app/components/products/checkout/checkout.component.html","./src/app/components/products/checkout/payment-success/payment-success.component.ts","./src/app/components/products/checkout/payment-success/payment-success.component.html","./src/app/components/products/checkout/payment/payment.component.ts","./src/app/components/products/checkout/payment/payment.component.html","./src/app/components/products/checkout/shipping-details/shipping-details.component.ts","./src/app/components/products/checkout/shipping-details/shipping-details.component.html","./src/app/components/products/edit-profile/edit-profile.component.ts","./src/app/components/products/edit-profile/edit-profile.component.html","./src/app/components/products/orders/delivery-history/delivery-history.component.ts","./src/app/components/products/orders/delivery-history/delivery-history.component.html","./src/app/components/products/orders/order-details-new/order-details-new.component.ts","./src/app/components/products/orders/order-details-new/order-details-new.component.html","./src/app/components/products/orders/order-details-new/product-detail-card/product-detail-card.component.ts","./src/app/components/products/orders/order-details-new/product-detail-card/product-detail-card.component.html","./src/app/components/products/orders/order-details/order-details.component.ts","./src/app/components/products/orders/order-details/order-details.component.html","./src/app/components/products/orders/order-history-new/order-history-new.component.ts","./src/app/components/products/orders/order-history-new/order-history-new.component.html","./src/app/components/products/orders/order-history/order-history.component.ts","./src/app/components/products/orders/order-history/order-history.component.html","./src/app/components/products/orders/orders.component.ts","./src/app/components/products/orders/orders.component.html","./src/app/components/products/product-details/product-details.component.ts","./src/app/components/products/product-details/product-details.component.html","./src/app/components/products/product-list/category-carausel/category-carausel.component.ts","./src/app/components/products/product-list/category-carausel/category-carausel.component.html","./src/app/components/products/product-list/product-card/product-card.component.ts","./src/app/components/products/product-list/product-card/product-card.component.html","./src/app/components/products/product-list/product-list.component.ts","./src/app/components/products/product-list/product-list.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/components/products/view-profile/view-profile.component.ts","./src/app/components/products/view-profile/view-profile.component.html","./src/app/guards/auth-access.guard.ts","./src/app/guards/auth.guard.ts","./src/app/guards/role.guard.ts","./src/app/material-custom/material-custom.module.ts","./src/app/models/address.model.ts","./src/app/models/cart.model.ts","./src/app/models/category.model.ts","./src/app/models/order-status.model.ts","./src/app/models/product-status.model.ts","./src/app/models/product.model.ts","./src/app/providers/global-error-handler.ts","./src/app/providers/http-error.interceptor.ts","./src/app/providers/index.ts","./src/app/providers/jwt-token.interceptor.ts","./src/app/services/access-denied-modal.service.ts","./src/app/services/auth-modal.service.ts","./src/app/services/auth.service.ts","./src/app/services/cart-confirm-modal.service.ts","./src/app/services/cart.service.ts","./src/app/services/category.service.ts","./src/app/services/delivery-history.service.ts","./src/app/services/event.service.ts","./src/app/services/form-submit-modal.service.ts","./src/app/services/geolocation.service.ts","./src/app/services/global-error-modal.service.ts","./src/app/services/loading.service.ts","./src/app/services/manage-user.service.ts","./src/app/services/order-cancel-modal.service.ts","./src/app/services/order.service.ts","./src/app/services/payment-razorpay.service.ts","./src/app/services/payment-stripe.service.ts","./src/app/services/product.service.ts","./src/app/services/social-auth.service.ts","./src/app/services/update-status-modal.service.ts","./src/app/shared/access-denied-modal/access-denied-modal.component.html","./src/app/shared/access-denied-modal/access-denied-modal.component.ts","./src/app/shared/access-denied/access-denied.component.ts","./src/app/shared/access-denied/access-denied.component.html","./src/app/shared/auth-modal/auth-modal.component.html","./src/app/shared/auth-modal/auth-modal.component.ts","./src/app/shared/cart-confirm-modal/cart-confirm-modal.component.html","./src/app/shared/cart-confirm-modal/cart-confirm-modal.component.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/form-submit-modal/form-submit-modal.component.html","./src/app/shared/form-submit-modal/form-submit-modal.component.ts","./src/app/shared/global-error-modal/global-error-modal.component.html","./src/app/shared/global-error-modal/global-error-modal.component.ts","./src/app/shared/navigation/navigation.component.ts","./src/app/shared/navigation/navigation.component.html","./src/app/shared/not-found/not-found.component.ts","./src/app/shared/not-found/not-found.component.html","./src/app/shared/order-cancel-modal/order-cancel-modal.component.html","./src/app/shared/order-cancel-modal/order-cancel-modal.component.ts","./src/app/shared/update-status-modal/update-status-modal.component.ts","./src/app/shared/update-status-modal/update-status-modal.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-21 12:47:19\n * @modify date 2021-01-21 12:47:19\n * @desc Routing module\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddCategoryNewComponent } from './components/admin/add-category-new/add-category-new.component';\nimport { AddCategoryComponent } from './components/admin/add-category/add-category.component';\nimport { AddProductNewComponent } from './components/admin/add-product-new/add-product-new.component';\nimport { AddProductComponent } from './components/admin/add-product/add-product.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UpdateCategoryComponent } from './components/admin/update-category/update-category.component';\nimport { UpdateProductComponent } from './components/admin/update-product/update-product.component';\nimport { ViewCategoriesComponent } from './components/admin/view-categories/view-categories.component';\nimport { ViewProductNewComponent } from './components/admin/view-product-new/view-product-new.component';\nimport { ViewProductComponent } from './components/admin/view-product/view-product.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { ChangePasswordComponent } from './components/auth/change-password/change-password.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { RequestQuestionComponent } from './components/auth/request-question/request-question.component';\nimport { SocialRegisterComponent } from './components/auth/social-register/social-register.component';\nimport { AboutUsComponent } from './components/products/about-us/about-us.component';\nimport { CartNewComponent } from './components/products/cart-new/cart-new.component';\nimport { CartComponent } from './components/products/cart/cart.component';\nimport { CartSummaryComponent } from './components/products/checkout/cart-summary/cart-summary.component';\nimport { CheckoutComponent } from './components/products/checkout/checkout.component';\nimport { PaymentSuccessComponent } from './components/products/checkout/payment-success/payment-success.component';\nimport { PaymentComponent } from './components/products/checkout/payment/payment.component';\nimport { ShippingDetailsComponent } from './components/products/checkout/shipping-details/shipping-details.component';\nimport { EditProfileComponent } from './components/products/edit-profile/edit-profile.component';\nimport { DeliveryHistoryComponent } from './components/products/orders/delivery-history/delivery-history.component';\nimport { OrderDetailsNewComponent } from './components/products/orders/order-details-new/order-details-new.component';\nimport { OrderDetailsComponent } from './components/products/orders/order-details/order-details.component';\nimport { OrderHistoryNewComponent } from './components/products/orders/order-history-new/order-history-new.component';\nimport { OrderHistoryComponent } from './components/products/orders/order-history/order-history.component';\nimport { ProductDetailsComponent } from './components/products/product-details/product-details.component';\nimport { ProductListComponent } from './components/products/product-list/product-list.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ViewProfileComponent } from './components/products/view-profile/view-profile.component';\nimport { AuthAccessGuard } from './guards/auth-access.guard';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { AccessDeniedComponent } from './shared/access-denied/access-denied.component';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent,\n    canActivate: [AuthAccessGuard],\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n      },\n      {\n        path: 'socialregister',\n        component: SocialRegisterComponent,\n      },\n      {\n        path: 'forgotpassword',\n        component: RequestQuestionComponent,\n      },\n      {\n        path: 'changepassword',\n        component: ChangePasswordComponent,\n      },\n    ],\n  },\n\n  {\n    path: 'products',\n    component: ProductsComponent,\n    children: [\n      { path: '', component: ProductListComponent },\n      { path: 'cart', component: CartNewComponent, canActivate: [AuthGuard] },\n      {\n        path: 'orders',\n        component: OrderHistoryNewComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'profile',\n        component: ViewProfileComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'editprofile',\n        component: EditProfileComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'orders/:orderId',\n        component: OrderDetailsNewComponent,\n        canActivate: [AuthGuard],\n      },\n      { path: 'about', component: AboutUsComponent },\n      {\n        path: 'delivery/:orderId',\n        component: DeliveryHistoryComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'checkout',\n        component: CheckoutComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: 'summary', component: CartSummaryComponent },\n          { path: 'shipping', component: ShippingDetailsComponent },\n          { path: 'payment', component: PaymentComponent },\n          { path: 'success/:orderId', component: PaymentSuccessComponent },\n          { path: '', redirectTo: 'shipping', pathMatch: 'full' },\n        ],\n      },\n      { path: ':productId', component: ProductDetailsComponent },\n    ],\n  },\n  {\n    path: 'admin',\n    component: AdminComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: { role: 'Admin' },\n    children: [\n      { path: 'add', component: AddProductNewComponent },\n      { path: 'view', component: ViewProductNewComponent },\n      { path: 'categoryview', component: ViewCategoriesComponent },\n      { path: 'categoryadd', component: AddCategoryNewComponent },\n      { path: 'categoryedit/:categoryId', component: UpdateCategoryComponent },\n      { path: '', redirectTo: 'view', pathMatch: 'full' },\n      { path: 'update/:productId', component: UpdateProductComponent },\n    ],\n  },\n  { path: 'about', redirectTo: 'products/about', pathMatch: 'full' },\n  { path: '404', component: NotFoundComponent },\n  { path: '403', component: AccessDeniedComponent },\n  { path: '', redirectTo: 'products', pathMatch: 'full' },\n  { path: '**', redirectTo: 'products' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'frontend';\n\n  constructor() {}\n}\n","<router-outlet> </router-outlet>\n\n<app-auth-modal></app-auth-modal>\n\n<app-access-denied-modal></app-access-denied-modal>\n\n<app-global-error-modal></app-global-error-modal>\n\n<app-form-submit-modal></app-form-submit-modal>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-21 12:46:55\n * @modify date 2021-01-21 12:46:55\n * @desc Root module\n */\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { ProductDetailsComponent } from './components/products/product-details/product-details.component';\nimport { CartComponent } from './components/products/cart/cart.component';\nimport { CartSummaryComponent } from './components/products/checkout/cart-summary/cart-summary.component';\nimport { ShippingDetailsComponent } from './components/products/checkout/shipping-details/shipping-details.component';\nimport { PaymentComponent } from './components/products/checkout/payment/payment.component';\nimport { OrderHistoryComponent } from './components/products/orders/order-history/order-history.component';\nimport { DeliveryHistoryComponent } from './components/products/orders/delivery-history/delivery-history.component';\nimport { AddProductComponent } from './components/admin/add-product/add-product.component';\nimport { ViewProductComponent } from './components/admin/view-product/view-product.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { OrdersComponent } from './components/products/orders/orders.component';\nimport { CheckoutComponent } from './components/products/checkout/checkout.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { NavigationComponent } from './shared/navigation/navigation.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { httpInterceptors } from './providers';\nimport { ChangePasswordComponent } from './components/auth/change-password/change-password.component';\nimport { RequestQuestionComponent } from './components/auth/request-question/request-question.component';\nimport { AboutUsComponent } from './components/products/about-us/about-us.component';\nimport { ProductListComponent } from './components/products/product-list/product-list.component';\nimport { ProductCardComponent } from './components/products/product-list/product-card/product-card.component';\nimport { AccessDeniedComponent } from './shared/access-denied/access-denied.component';\nimport { AuthModalComponent } from './shared/auth-modal/auth-modal.component';\nimport { CartConfirmModalComponent } from './shared/cart-confirm-modal/cart-confirm-modal.component';\nimport { OrderCancelModalComponent } from './shared/order-cancel-modal/order-cancel-modal.component';\nimport { UpdateProductComponent } from './components/admin/update-product/update-product.component';\nimport { OrderDetailsComponent } from './components/products/orders/order-details/order-details.component';\nimport { GlobalErrorModalComponent } from './shared/global-error-modal/global-error-modal.component';\nimport { SocialRegisterComponent } from './components/auth/social-register/social-register.component';\nimport { AccessDeniedModalComponent } from './shared/access-denied-modal/access-denied-modal.component';\nimport { ViewProfileComponent } from './components/products/view-profile/view-profile.component';\nimport { EditProfileComponent } from './components/products/edit-profile/edit-profile.component';\nimport { ViewCategoriesComponent } from './components/admin/view-categories/view-categories.component';\nimport { MaterialCustomModule } from './material-custom/material-custom.module';\nimport { UpdateCategoryComponent } from './components/admin/update-category/update-category.component';\nimport { AddCategoryComponent } from './components/admin/add-category/add-category.component';\nimport { CategoryCarauselComponent } from './components/products/product-list/category-carausel/category-carausel.component';\nimport { OrderDetailsNewComponent } from './components/products/orders/order-details-new/order-details-new.component';\nimport { ProductDetailCardComponent } from './components/products/orders/order-details-new/product-detail-card/product-detail-card.component';\nimport { ViewProductNewComponent } from './components/admin/view-product-new/view-product-new.component';\nimport { UpdateStatusModalComponent } from './shared/update-status-modal/update-status-modal.component';\nimport { AddProductNewComponent } from './components/admin/add-product-new/add-product-new.component';\nimport { FormSubmitModalComponent } from './shared/form-submit-modal/form-submit-modal.component';\nimport { AddCategoryNewComponent } from './components/admin/add-category-new/add-category-new.component';\nimport { PaymentSuccessComponent } from './components/products/checkout/payment-success/payment-success.component';\nimport { CartNewComponent } from './components/products/cart-new/cart-new.component';\nimport { CartItemCardComponent } from './components/products/cart-new/cart-item-card/cart-item-card.component';\nimport { OrderHistoryNewComponent } from './components/products/orders/order-history-new/order-history-new.component';\nimport { AuthComponent } from './components/auth/auth.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProductDetailsComponent,\n    CartComponent,\n    CartSummaryComponent,\n    ShippingDetailsComponent,\n    PaymentComponent,\n    OrderHistoryComponent,\n    DeliveryHistoryComponent,\n    AddProductComponent,\n    ViewProductComponent,\n    UpdateProductComponent,\n    ProductsComponent,\n    OrdersComponent,\n    CheckoutComponent,\n    AdminComponent,\n    FooterComponent,\n    NotFoundComponent,\n    NavigationComponent,\n    ChangePasswordComponent,\n    RequestQuestionComponent,\n    AboutUsComponent,\n    ProductListComponent,\n    ProductCardComponent,\n    AccessDeniedComponent,\n    AuthModalComponent,\n    CartConfirmModalComponent,\n    OrderCancelModalComponent,\n    OrderDetailsComponent,\n    GlobalErrorModalComponent,\n    SocialRegisterComponent,\n    AccessDeniedModalComponent,\n    ViewProfileComponent,\n    EditProfileComponent,\n    ViewCategoriesComponent,\n    UpdateCategoryComponent,\n    AddCategoryComponent,\n    CategoryCarauselComponent,\n    OrderDetailsNewComponent,\n    ProductDetailCardComponent,\n    ViewProductNewComponent,\n    UpdateStatusModalComponent,\n    AddProductNewComponent,\n    FormSubmitModalComponent,\n    AddCategoryNewComponent,\n    PaymentSuccessComponent,\n    CartNewComponent,\n    CartItemCardComponent,\n    OrderHistoryNewComponent,\n    AuthComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    MaterialCustomModule,\n  ],\n  providers: [\n    httpInterceptors, \n    JwtHelperService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-05 22:54:48\n * @modify date 2021-02-05 22:54:48\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { Category } from 'src/app/models/category.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-add-category-new',\n  templateUrl: './add-category-new.component.html',\n  styleUrls: ['./add-category-new.component.scss'],\n})\nexport class AddCategoryNewComponent implements OnInit {\n  submitted = false;\n  updateCategoryForm: UntypedFormGroup;\n  categories: Category[] = [];\n  category: Category;\n  categoryImageUrl = '';\n  message;\n\n  constructor(\n    public loadingService: LoadingService,\n    private categoryService: CategoryService,\n    private location: Location,\n    private formModal: FormSubmitModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n  initForm() {\n    this.updateCategoryForm = new UntypedFormGroup({\n      categoryName: new UntypedFormControl('', [Validators.required]),\n      categoryDescription: new UntypedFormControl('', [Validators.required]),\n      categoryImageUrl: new UntypedFormControl('', [Validators.required]),\n    });\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.updateCategoryForm.valid)\n      this.submitData(this.updateCategoryForm.value);\n  }\n  submitData(formData: any) {\n    \n    this.loadingService.enableLoading();\n    this.categoryService.createCategory(formData).subscribe({\n      next: (response) => {\n        this.loadingService.disableLoading();\n        this.formModal.open(\n          'Successfully updated Category with ID ' + response['categoryId'],\n          '/admin/categoryview'\n        );\n      },\n      error: (error) => {\n        this.loadingService.disableLoading();\n        if (error?.error?.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.updateCategoryForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      },\n    });\n  }\n\n  updateImage(image: string) {\n    this.categoryImageUrl = image;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"root\">\n  <div\n    class=\"background\"\n    [ngStyle]=\"{\n      'background-image':\n        'url(' + categoryImageUrl + '), url(assets/images/celebration2.jpg)'\n    }\"\n  ></div>\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div\n          class=\"col-6 front-img\"\n          [ngStyle]=\"{\n            'background-image':\n              'url(' + categoryImageUrl + '), url(assets/images/invalid_url2.png)'\n          }\"\n        ></div>\n        <div class=\"col-6 section-product\">\n          <div class=\"p-5\">\n            <h2 class=\"product-title\">\n              <img\n                class=\"back-img\"\n                (click)=\"goBack()\"\n                src=\"assets/images/back.svg\"\n                alt=\"\"\n              />\n              Add New Category\n            </h2>\n            <form\n              class=\"user\"\n              [formGroup]=\"updateCategoryForm\"\n              (ngSubmit)=\"submitForm()\"\n            >\n              <!-- Category Name -->\n              <div class=\"form-group\">\n                <label for=\"categoryName\"> Category Name</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  id=\"categoryName\"\n                  formControlName=\"categoryName\"\n                  placeholder=\"Category Name\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateCategoryForm.get('categoryName').invalid\n                  }\"\n                  name=\"categoryName\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateCategoryForm.get('categoryName').invalid\"\n                >\n                  <div *ngIf=\"updateCategoryForm.get('categoryName').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateCategoryForm.get('categoryName').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateCategoryForm.controls[\"categoryName\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Category Description -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputcategoryDescription\"> Category Description</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  formControlName=\"categoryDescription\"\n                  id=\"exampleInputcategoryDescription\"\n                  placeholder=\"Category Description\"\n                  name=\"categoryDescription\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted &&\n                      updateCategoryForm.get('categoryDescription').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateCategoryForm.get('categoryDescription').invalid\"\n                >\n                  <div *ngIf=\"updateCategoryForm.get('categoryDescription').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateCategoryForm.get('categoryDescription').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateCategoryForm.controls[\"categoryDescription\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Category Icon -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputcategoryImageUrl\"> Category Icon</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  formControlName=\"categoryImageUrl\"\n                  id=\"exampleInputcategoryImageUrl\"\n                  placeholder=\"Category Icon\"\n                  (change)=\"updateImage($event.target.value)\"\n                  name=\"categoryImageUrl\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateCategoryForm.get('categoryImageUrl').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateCategoryForm.get('categoryImageUrl').invalid\"\n                >\n                  <div *ngIf=\"updateCategoryForm.get('categoryImageUrl').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateCategoryForm.get('categoryImageUrl').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateCategoryForm.controls[\"categoryImageUrl\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                {{message}}\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span\n                  *ngIf=\"loadingService.loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Add Category\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/models/category.model';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.scss'],\n})\nexport class AddCategoryComponent implements OnInit {\n  category: Category;\n\n  constructor(private service: CategoryService) {\n    this.category = new Category();\n  }\n\n  ngOnInit() {}\n\n  saveCategory() {\n    this.service.createCategory(this.category).subscribe();\n  }\n}\n","<h1 style=\"text-align: center\">Add Category</h1>\n\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\"\n/>\n\n<div class=\"container\">\n  <div class=\"card bg-light\">\n    <article class=\"card-body mx-auto\" style=\"max-width: 400px\">\n      <form\n        (ngSubmit)=\"saveCategory()\"\n        #addCategory=\"ngForm\"\n        class=\"needs-validation\"\n      >\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                class=\"fa fa-gift\"\n                style=\"font-size: 1.5em; color: #f56774\"\n              ></i>\n            </span>\n          </div>\n          <input\n            pattern=\"[A-Z][A-Za-z]{2,}\"\n            name=\"categoryName\"\n            id=\"categoryName\"\n            [(ngModel)]=\"category.categoryName\"\n            #categoryName=\"ngModel\"\n            class=\"form-control\"\n            placeholder=\"Category Name\"\n            type=\"text\"\n          />\n          <br />\n          <div\n            *ngIf=\"\n              categoryName.invalid && categoryName.touched && categoryName.dirty\n            \"\n            class=\"alert alert-danger\"\n          >\n            First letter must be capital! Name must be atleast 3 characters\n            long!\n          </div>\n        </div>\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                class=\"fa fa-info\"\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n              ></i>\n            </span>\n          </div>\n          <textarea\n            required\n            name=\"categoryDescription\"\n            id=\"categoryDescription\"\n            [(ngModel)]=\"category.categoryDescription\"\n            #productDescription=\"ngModel\"\n            placeholder=\"Category Description\"\n            cols=\"36\"\n            rows=\"2\"\n          ></textarea>\n        </div>\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n                class=\"fa fa-file-image-o\"\n              ></i>\n            </span>\n          </div>\n          <textarea\n            required\n            name=\"categoryImageUrl\"\n            id=\"categoryImageUrl\"\n            [(ngModel)]=\"category.categoryImageUrl\"\n            #productIcon=\"ngModel\"\n            placeholder=\"Category Image URL\"\n            cols=\"36\"\n            rows=\"2\"\n          ></textarea>\n        </div>\n        <!-- form-group// -->\n\n        <div class=\"form-group\">\n          <button\n            type=\"submit\"\n            [disabled]=\"!addCategory.valid\"\n            class=\"btn btn-primary btn-block\"\n          >\n            Add Category\n          </button>\n        </div>\n        <!-- form-group// -->\n      </form>\n    </article>\n  </div>\n  <!-- card.// -->\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-05 19:47:40\n * @modify date 2021-02-05 19:47:40\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { Category } from 'src/app/models/category.model';\nimport { ProductStatus } from 'src/app/models/product-status.model';\nimport { Product } from 'src/app/models/product.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-add-product-new',\n  templateUrl: './add-product-new.component.html',\n  styleUrls: ['./add-product-new.component.scss'],\n})\nexport class AddProductNewComponent implements OnInit {\n  submitted = false;\n  updateProductForm: UntypedFormGroup;\n  categories: Category[] = [];\n  statuses = ProductStatus;\n  product: Product;\n  productIcon = '';\n  message;\n\n  constructor(\n    private route: ActivatedRoute,\n    public loadingService: LoadingService,\n    private productService: ProductService,\n    private categoryService: CategoryService,\n    private location: Location,\n    private router: Router,\n    private formModal: FormSubmitModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n    this.populateData();\n  }\n  initForm() {\n    this.updateProductForm = new UntypedFormGroup({\n      productName: new UntypedFormControl('', [Validators.required]),\n      productPrice: new UntypedFormControl('', [Validators.required]),\n      discountPercent: new UntypedFormControl('', [Validators.required, Validators.pattern('^([1-9][0-9]{0,1})$')]),\n      productStock: new UntypedFormControl('', [Validators.required]),\n      productDescription: new UntypedFormControl('', [Validators.required]),\n      productIcon: new UntypedFormControl('', [Validators.required]),\n      productStatus: new UntypedFormControl('', [Validators.required]),\n      categoryId: new UntypedFormControl('', [Validators.required]),\n    });\n  }\n\n  populateData() {\n    this.categoryService\n      .fetchAllCategories()\n      .pipe(take(1))\n      .subscribe((res: Category[]) => {\n        this.categories = res;\n      });\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.updateProductForm.valid)\n      this.submitData(this.updateProductForm.value);\n  }\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n    this.productService.addProduct(formData).subscribe(\n      (response) => {\n        this.loadingService.disableLoading();\n        this.formModal.open('Successfully updated product with ID ' + response['productId'], '/admin/view')\n      },\n      (error) => {\n        this.loadingService.disableLoading();\n        if (error?.error?.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.updateProductForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      }\n    );\n  }\n\n  updateImage(image) {\n    this.productIcon = image;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"root\">\n  <div\n    class=\"background\"\n    [ngStyle]=\"{\n      'background-image':\n        'url(' + productIcon + '), url(assets/images/celebration2.jpg)'\n    }\"\n  ></div>\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div\n          class=\"col-6 front-img\"\n          [ngStyle]=\"{\n            'background-image':\n              'url(' + productIcon + '), url(assets/images/celebration2.jpg)'\n          }\"\n        ></div>\n        <div class=\"col-6 section-product\">\n          <div class=\"p-5\">\n            <h2 class=\"product-title\">\n              <img\n                class=\"back-img\"\n                (click)=\"goBack()\"\n                src=\"assets/images/back.svg\"\n                alt=\"\"\n              />\n              Add New Product\n            </h2>\n            <form\n              class=\"user\"\n              [formGroup]=\"updateProductForm\"\n              (ngSubmit)=\"submitForm()\"\n            >\n              <!-- Product Name -->\n              <div class=\"form-group\">\n                <label for=\"productName\"> Product Name</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  id=\"productName\"\n                  formControlName=\"productName\"\n                  placeholder=\"Product Name\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateProductForm.get('productName').invalid\n                  }\"\n                  name=\"productName\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productName').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productName').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productName').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productName\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Price -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductPrice\"> Product Price</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  formControlName=\"productPrice\"\n                  type=\"number\"\n                  id=\"exampleInputproductPrice\"\n                  placeholder=\"Product Price\"\n                  name=\"productPrice\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productPrice').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productPrice').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productPrice').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productPrice').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productPrice\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Discount Percent -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputdiscountPercent\"> Discount Percent</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  formControlName=\"discountPercent\"\n                  type=\"number\"\n                  id=\"exampleInputdiscountPercent\"\n                  placeholder=\"Discount Percent\"\n                  name=\"discountPercent\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('discountPercent').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('discountPercent').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('discountPercent').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"updateProductForm.get('discountPercent').errors['pattern']\">\n                    Enter  anumber between 1-99\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('discountPercent').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"discountPercent\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Stock -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductStock\"> Product Stock</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"productStock\"\n                  formControlName=\"productStock\"\n                  type=\"number\"\n                  id=\"exampleInputproductStock\"\n                  placeholder=\"Product Stock\"\n                  name=\"productStock\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productStock').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productStock').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productStock').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productStock').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productStock\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Description -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductDescription\"> Product Description</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  formControlName=\"productDescription\"\n                  id=\"exampleInputproductDescription\"\n                  placeholder=\"Product Description\"\n                  name=\"productDescription\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted &&\n                      updateProductForm.get('productDescription').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productDescription').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productDescription').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productDescription').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productDescription\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Icon -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductIcon\"> Product Icon</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  formControlName=\"productIcon\"\n                  id=\"exampleInputproductIcon\"\n                  placeholder=\"Product Icon\"\n                  (change)=\"updateImage($event.target.value)\"\n                  name=\"productIcon\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productIcon').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productIcon').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productIcon').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productIcon').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productIcon\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Status -->\n              <div class=\"form-group\">\n                <div>\n                  <label>Product Status</label>\n                  <div *ngFor=\"let status of statuses | keyvalue\" class=\"custom-control custom-radio\">\n                    <input\n                      [ngClass]=\"{'is-invalid':submitted && updateProductForm.get('productStatus').invalid}\"\n                      [value]=\"status.key\"\n                      class=\"custom-control-input\"\n                      formControlName=\"productStatus\"\n                      [id]=\"status.key\"\n                      type=\"radio\"\n                    />\n                    <label class=\"custom-control-label\" for=\"{{ status.key }}\">{{\n                      status.value\n                    }}</label>\n                  </div>\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"\n                      submitted &&\n                      updateProductForm.get('productStatus').invalid\n                    \"\n                  >\n                    <div\n                      *ngIf=\"\n                        updateProductForm.get('productStatus').errors[\n                          'required'\n                        ]\n                      \"\n                    >\n                      * Required\n                    </div>\n                    <div\n                      *ngIf=\"\n                        updateProductForm.get('productStatus').errors[\n                          'serverValidationError'\n                        ]\n                      \"\n                    >\n                      {{\n                        updateProductForm.controls[\"productStatus\"].errors\n                          .serverValidationError\n                      }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- Product Category -->\n              <div class=\"form-group\">\n                <label for=\"supplierId\"><strong>Category</strong><br /></label\n                ><select\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateProductForm.get('categoryId').invalid\n                  }\"\n                  class=\"form-control\"\n                  formControlName=\"categoryId\"\n                >\n                  <option value=\"\" disabled=\"true\" [selected]=\"true\">\n                    Select a Category\n                  </option>\n                  <option\n                    *ngFor=\"let item of categories\"\n                    [value]=\"item.categoryId\"\n                  >\n                    {{ item.categoryName }}\n                  </option>\n                </select>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('categoryId').invalid\">\n                  <div *ngIf=\"updateProductForm.get('categoryId').errors['required']\">* Required</div>\n                  <div *ngIf=\"updateProductForm.get('categoryId').errors['serverValidationError']\"> \n                      {{updateProductForm.controls['categoryId'].errors.serverValidationError }} \n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                {{message}}\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span\n                  *ngIf=\"loadingService.loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Add\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { Product } from 'src/app/models/product.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss']\n})\nexport class AddProductComponent implements OnInit {\n\n  product : Product;\n  category : Category[] = [];\n  categoryId : number;\n\n  constructor(private service : ProductService, private categoryService : CategoryService, private route : Router) {\n    this.product = new Product();\n  }\n\n  ngOnInit(){\n    this.categoryService.fetchAllCategories().subscribe((response : Category[]) => {\n        this.category = response;\n    });\n  }\n\n  getSelectedOptionText(cId : number){\n    this.categoryId = cId;\n  }\n\n  saveProduct(){\n    this.service.addProduct(this.product).subscribe(response => {\n      this.route.navigate(['admin/view']);\n    });\n    this.product = new Product();\n  }\n\n}\n","<h1 style=\"text-align: center\">Add Product</h1>\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\"\n/>\n\n<div class=\"container\">\n  <div class=\"card bg-light\">\n    <article class=\"card-body mx-auto\" style=\"max-width: 400px\">\n      <form\n        (ngSubmit)=\"saveProduct()\"\n        #addProduct=\"ngForm\"\n        class=\"needs-validation\"\n      >\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                class=\"fa fa-gift\"\n                style=\"font-size: 1.5em; color: #f56774\"\n              ></i>\n            </span>\n          </div>\n          <input\n            pattern=\"[A-Z][A-Za-z]{2,}\"\n            name=\"productName\"\n            id=\"productName\"\n            [(ngModel)]=\"product.productName\"\n            #productName=\"ngModel\"\n            class=\"form-control\"\n            placeholder=\"Product Name\"\n            type=\"text\"\n          />\n          <br />\n          <div\n            *ngIf=\"\n              productName.invalid && productName.touched && productName.dirty\n            \"\n            class=\"alert alert-danger\"\n          >\n            First letter must be capital! Name must be atleast 3 characters\n            long!\n          </div>\n        </div>\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n                class=\"fa fa-inr\"\n              ></i>\n            </span>\n          </div>\n          <input\n            name=\"productPrice\"\n            pattern=\"[1-9][0-9]{2,3}\"\n            id=\"productPrice\"\n            [(ngModel)]=\"product.productPrice\"\n            #productPrice=\"ngModel\"\n            class=\"form-control\"\n            placeholder=\"Price\"\n          />\n          <br />\n          <div\n            *ngIf=\"\n              productPrice.invalid && productPrice.touched && productPrice.dirty\n            \"\n            class=\"alert alert-danger\"\n          >\n            Price must be between 100 to 9999\n          </div>\n        </div>\n\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n                class=\"fa fa-inr\"\n              ></i>\n            </span>\n          </div>\n          <input\n            name=\"discountPercent\"\n            pattern=\"([0-9]|[1-9][0-9]|100)\"\n            id=\"discountPercent\"\n            [(ngModel)]=\"product.discountPercent\"\n            #discountPercent=\"ngModel\"\n            class=\"form-control\"\n            placeholder=\"Discount Percent\"\n          />\n          <br />\n          <div\n            *ngIf=\"\n              discountPercent.invalid && discountPercent.touched && discountPercent.dirty\n            \"\n            class=\"alert alert-danger\"\n          >\n            Enter a valid discount\n          </div>\n        </div>\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n                class=\"fa fa-sort-numeric-desc\"\n              ></i>\n            </span>\n          </div>\n          <input\n            name=\"productStock\"\n            pattern=\"[1-9][0-9]{0,2}\"\n            id=\"productStock\"\n            [(ngModel)]=\"product.productStock\"\n            #productStock=\"ngModel\"\n            class=\"form-control\"\n            placeholder=\"Stock\"\n          />\n          <br />\n          <div\n            *ngIf=\"\n              productStock.invalid && productStock.touched && productStock.dirty\n            \"\n            class=\"alert alert-danger\"\n          >\n            Stock must be entered in digits and must be more than 1\n          </div>\n        </div>\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                class=\"fa fa-info\"\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n              ></i>\n            </span>\n          </div>\n          <textarea\n            required\n            name=\"productDescription\"\n            id=\"productDescription\"\n            [(ngModel)]=\"product.productDescription\"\n            #productDescription=\"ngModel\"\n            placeholder=\"Product Description\"\n            cols=\"36\"\n            rows=\"2\"\n          ></textarea>\n        </div>\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n                class=\"fa fa-file-image-o\"\n              ></i>\n            </span>\n          </div>\n          <textarea\n            required\n            name=\"productIcon\"\n            id=\"productIcon\"\n            [(ngModel)]=\"product.productIcon\"\n            #productIcon=\"ngModel\"\n            placeholder=\"Product Icon\"\n            cols=\"36\"\n            rows=\"2\"\n          ></textarea>\n        </div>\n        <!-- form-group// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n                class=\"fa fa-toggle-on\"\n              ></i>\n            </span>\n          </div>\n          <select\n            placeholder=\"Select\"\n            required\n            aria-placeholder=\"ENABLED\"\n            id=\"productStatus\"\n            name=\"productStatus\"\n            [(ngModel)]=\"product.productStatus\"\n            #productStatus=\"ngModel\"\n            class=\"form-control\"\n          >\n            <option value=\"\" selected>Select Product Status</option>\n            <option value=\"ENABLED\">ENABLED</option>\n            <option value=\"DISABLED\">DISABLED</option>\n          </select>\n        </div>\n        <!-- form-group end.// -->\n\n        <p>Required*</p>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i\n                style=\"width: 20px; font-size: 1.5em; color: #f56774\"\n                class=\"fa fa-filter\"\n              ></i>\n            </span>\n          </div>\n          <select\n            required\n            name=\"categoryId\"\n            (change)=\"getSelectedOptionText($event.target.value)\"\n            id=\"categoryId\"\n            [(ngModel)]=\"product.categoryId\"\n            #categoryId=\"ngModel\"\n            class=\"form-control\"\n          >\n            <option *ngFor=\"let c of category\" [value]=\"c.categoryId\">\n              {{ c.categoryName }}\n            </option>\n          </select>\n        </div>\n        <!-- form-group// -->\n\n        <div class=\"form-group\">\n          <button\n            type=\"submit\"\n            [disabled]=\"!addProduct.valid\"\n            class=\"btn btn-primary btn-block\"\n          >\n            Add Product\n          </button>\n        </div>\n        <!-- form-group// -->\n      </form>\n    </article>\n  </div>\n  <!-- card.// -->\n</div>\n<!--container end.//-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"allButFooter\">\n  <app-navigation></app-navigation>\n  <!-- <div class=\"backdrop\"></div> -->\n  <div class=\"backdrop\"></div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-footer></app-footer>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-update-category',\n  templateUrl: './update-category.component.html',\n  styleUrls: ['./update-category.component.scss'],\n})\nexport class UpdateCategoryComponent implements OnInit {\n  categoryId;\n  submitted = false;\n  updateCategoryForm: UntypedFormGroup;\n  categories: Category[] = [];\n  category: Category;\n  categoryImageUrl = '';\n  message;\n\n  constructor(\n    private route: ActivatedRoute,\n    public loadingService: LoadingService,\n    private categoryService: CategoryService,\n    private location: Location,\n    private formModal: FormSubmitModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.categoryId = this.route.snapshot.params['categoryId'] || '';\n    this.initForm();\n    this.populateData();\n  }\n  initForm() {\n    this.updateCategoryForm = new UntypedFormGroup({\n      categoryId: new UntypedFormControl(this.categoryId),\n      categoryName: new UntypedFormControl('', [Validators.required]),\n      categoryDescription: new UntypedFormControl('', [Validators.required]),\n      categoryImageUrl: new UntypedFormControl('', [Validators.required]),\n    });\n  }\n  populateData() {\n    this.categoryService\n      .fetchById(this.categoryId)\n      .subscribe((res: Category) => {\n        this.category = res;\n        this.categoryImageUrl = res.categoryImageUrl; // Apply image fetched from server\n        this.populateFormFields(this.category);\n      });\n  }\n\n  populateFormFields(category) {\n    this.updateCategoryForm.patchValue({\n      categoryId: category.categoryId,\n      categoryName: category?.categoryName,\n      categoryDescription: category?.categoryDescription,\n      categoryImageUrl: category?.categoryImageUrl,\n    });\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.updateCategoryForm.valid)\n      this.submitData(this.updateCategoryForm.value);\n  }\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n    this.categoryService.updateCategory(formData).subscribe(\n      (response) => {\n        this.loadingService.disableLoading();\n        this.formModal.open(\n          'Successfully updated Category with ID ' + response['categoryId'],\n          '/admin/categoryview'\n        );\n        // this.message =\n        //   'Successfully updated Category with ID ' + response['categoryId'];\n        // setTimeout(() => {\n        //   this.router.navigateByUrl('/admin/categoryview');\n        // }, 3000);\n      },\n      (error) => {\n        this.loadingService.disableLoading();\n        if (error?.error?.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.updateCategoryForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      }\n    );\n  }\n\n  updateImage(image) {\n    this.categoryImageUrl = image;\n  }\n\n  resetToDefault() {\n    this.populateFormFields(this.category);\n    this.categoryImageUrl = this.category.categoryImageUrl;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"root\">\n  <div\n    class=\"background\"\n    [ngStyle]=\"{\n      'background-image':\n        'url(' + categoryImageUrl + '), url(assets/images/celebration2.jpg)'\n    }\"\n  ></div>\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div\n          class=\"col-6 front-img\"\n          [ngStyle]=\"{\n            'background-image':\n              'url(' + categoryImageUrl + '), url(assets/images/invalid_url2.png)'\n          }\"\n        ></div>\n        <div class=\"col-6 section-product\">\n          <div class=\"p-5\">\n            <h2 class=\"product-title\">\n              <img\n                class=\"back-img\"\n                (click)=\"goBack()\"\n                src=\"assets/images/back.svg\"\n                alt=\"\"\n              />\n              Edit Category #<span class=\"product-id\"> {{ categoryId }} </span>\n            </h2>\n            <form\n              class=\"user\"\n              [formGroup]=\"updateCategoryForm\"\n              (ngSubmit)=\"submitForm()\"\n            >\n              <input hidden type=\"text\" formControlName=\"categoryId\" />\n              <!-- Category Name -->\n              <div class=\"form-group\">\n                <label for=\"categoryName\"> Category Name</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  id=\"categoryName\"\n                  formControlName=\"categoryName\"\n                  placeholder=\"Category Name\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateCategoryForm.get('categoryName').invalid\n                  }\"\n                  name=\"categoryName\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateCategoryForm.get('categoryName').invalid\"\n                >\n                  <div *ngIf=\"updateCategoryForm.get('categoryName').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateCategoryForm.get('categoryName').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateCategoryForm.controls[\"categoryName\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Category Description -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputcategoryDescription\"> Category Description</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  formControlName=\"categoryDescription\"\n                  id=\"exampleInputcategoryDescription\"\n                  placeholder=\"Category Description\"\n                  name=\"categoryDescription\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted &&\n                      updateCategoryForm.get('categoryDescription').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateCategoryForm.get('categoryDescription').invalid\"\n                >\n                  <div *ngIf=\"updateCategoryForm.get('categoryDescription').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateCategoryForm.get('categoryDescription').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateCategoryForm.controls[\"categoryDescription\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Category Icon -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputcategoryImageUrl\"> Category Icon</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  formControlName=\"categoryImageUrl\"\n                  id=\"exampleInputcategoryImageUrl\"\n                  placeholder=\"Category Icon\"\n                  (change)=\"updateImage($event.target.value)\"\n                  name=\"categoryImageUrl\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateCategoryForm.get('categoryImageUrl').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateCategoryForm.get('categoryImageUrl').invalid\"\n                >\n                  <div *ngIf=\"updateCategoryForm.get('categoryImageUrl').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateCategoryForm.get('categoryImageUrl').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateCategoryForm.controls[\"categoryImageUrl\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                {{message}}\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span\n                  *ngIf=\"loadingService.loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Update Category\n              </button>\n              <button\n                class=\"secondary-btn btn-block\"\n                type=\"button\"\n                (click)=\"resetToDefault()\"\n              >\n                Reset to default\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-26 16:48:58\n * @modify date 2021-01-26 16:48:58\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { Product } from 'src/app/models/product.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.scss'],\n})\nexport class UpdateProductComponent implements OnInit {\n  productId;\n  submitted = false;\n  updateProductForm: UntypedFormGroup;\n  categories: Category[] = [];\n  statuses = ['ENABLED', 'DISABLED'];\n  product: Product;\n  productIcon = '';\n  message;\n\n  constructor(\n    private route: ActivatedRoute,\n    public loadingService: LoadingService,\n    private productService: ProductService,\n    private categoryService: CategoryService,\n    private location: Location,\n    private router: Router,\n    private formModal: FormSubmitModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.productId = this.route.snapshot.params['productId'] || '';\n    this.initForm();\n    this.populateData();\n  }\n  initForm() {\n    this.updateProductForm = new UntypedFormGroup({\n      productId: new UntypedFormControl(this.productId),\n      productName: new UntypedFormControl('', [Validators.required]),\n      productPrice: new UntypedFormControl('', [Validators.required]),\n      discountPercent: new UntypedFormControl('', [Validators.required]),\n      productStock: new UntypedFormControl('', [Validators.required]),\n      productDescription: new UntypedFormControl('', [Validators.required]),\n      productIcon: new UntypedFormControl('', [Validators.required]),\n      productStatus: new UntypedFormControl('', [Validators.required]),\n      categoryId: new UntypedFormControl('', [Validators.required]),\n    });\n  }\n  populateData() {\n    this.categoryService.fetchAllCategories().subscribe((res: Category[]) => {\n      this.categories = res;\n    }).closed;\n    this.productService.fetchById(this.productId).subscribe((res: Product) => {\n      this.product = res;\n      this.productIcon = res.productIcon; // Apply image fetched from server\n      this.populateFormFields(this.product);\n    }).closed;\n  }\n\n  populateFormFields(product) {\n    this.updateProductForm.patchValue({\n      productId: product.productId,\n      productName: product?.productName,\n      productPrice: product?.productPrice,\n      discountPercent: product?.discountPercent,\n      productStock: product?.productStock,\n      productDescription: product?.productDescription,\n      productIcon: product?.productIcon,\n      productStatus: product?.productStatus,\n      categoryId: product?.categoryId,\n    });\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.updateProductForm.valid)\n      this.submitData(this.updateProductForm.value);\n  }\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n    this.productService.updateProduct(formData).subscribe(\n      (response) => {\n        this.loadingService.disableLoading();\n        this.formModal.open('Successfully updated product with ID ' + response['productId'], '/admin/view')\n        // this.message =\n        // 'Successfully updated product with ID ' + response['productId'];\n        // setTimeout(() => {\n        //   this.router.navigateByUrl('/admin/view');\n        // }, 3000);\n      },\n      (error) => {\n        this.loadingService.disableLoading();\n        if (error?.error?.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.updateProductForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      }\n    );\n  }\n\n  updateImage(image) {\n    this.productIcon = image;\n  }\n\n  resetToDefault() {\n    this.populateFormFields(this.product);\n    this.productIcon = this.product.productIcon;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"root\">\n  <div\n    class=\"background\"\n    [ngStyle]=\"{\n      'background-image':\n        'url(' + productIcon + '), url(assets/images/celebration2.jpg)'\n    }\"\n  ></div>\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div\n          class=\"col-6 front-img\"\n          [ngStyle]=\"{\n            'background-image':\n              'url(' + productIcon + '), url(assets/images/celebration2.jpg)'\n          }\"\n        ></div>\n        <div class=\"col-6 section-product\">\n          <div class=\"p-5\">\n            <h2 class=\"product-title\">\n              <img\n                class=\"back-img\"\n                (click)=\"goBack()\"\n                src=\"assets/images/back.svg\"\n                alt=\"\"\n              />\n              Edit Product #<span class=\"product-id\"> {{ productId }} </span>\n            </h2>\n            <form\n              class=\"user\"\n              [formGroup]=\"updateProductForm\"\n              (ngSubmit)=\"submitForm()\"\n            >\n              <input hidden type=\"text\" formControlName=\"productId\" />\n              <!-- Product Name -->\n              <div class=\"form-group\">\n                <label for=\"productName\"> Product Name</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  id=\"productName\"\n                  formControlName=\"productName\"\n                  placeholder=\"Product Name\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateProductForm.get('productName').invalid\n                  }\"\n                  name=\"productName\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productName').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productName').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productName').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productName\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Price -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductPrice\"> Product Price</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  formControlName=\"productPrice\"\n                  type=\"number\"\n                  id=\"exampleInputproductPrice\"\n                  placeholder=\"Product Price\"\n                  name=\"productPrice\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productPrice').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productPrice').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productPrice').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productPrice').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productPrice\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Discount Percent -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputdiscountPercent\"> Discount Percent</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  formControlName=\"discountPercent\"\n                  type=\"number\"\n                  id=\"exampleInputdiscountPercent\"\n                  placeholder=\"Discount Percent\"\n                  name=\"discountPercent\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('discountPercent').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('discountPercent').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('discountPercent').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('discountPercent').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"discountPercent\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Stock -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductStock\"> Product Description</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"productStock\"\n                  formControlName=\"productStock\"\n                  type=\"number\"\n                  id=\"exampleInputproductStock\"\n                  placeholder=\"Product Stock\"\n                  name=\"productStock\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productStock').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productStock').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productStock').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productStock').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productStock\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Description -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductDescription\"> Product Description</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  formControlName=\"productDescription\"\n                  id=\"exampleInputproductDescription\"\n                  placeholder=\"Product Description\"\n                  name=\"productDescription\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted &&\n                      updateProductForm.get('productDescription').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productDescription').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productDescription').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productDescription').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productDescription\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Icon -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductIcon\"> Product Icon</label>\n                <textarea\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  formControlName=\"productIcon\"\n                  id=\"exampleInputproductIcon\"\n                  placeholder=\"Product Icon\"\n                  (change)=\"updateImage($event.target.value)\"\n                  name=\"productIcon\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productIcon').invalid\n                  }\"\n                ></textarea>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateProductForm.get('productIcon').invalid\"\n                >\n                  <div *ngIf=\"updateProductForm.get('productIcon').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateProductForm.get('productIcon').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      updateProductForm.controls[\"productIcon\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Status -->\n              <div class=\"form-group\">\n                <div>\n                  <label>Product Status</label>\n                  <div *ngFor=\"let status of statuses\" class=\"custom-control custom-radio\">\n                    <input\n                      [ngClass]=\"{'is-invalid':submitted && updateProductForm.get('productStatus').invalid}\"\n                      [value]=\"status\"\n                      class=\"custom-control-input\"\n                      formControlName=\"productStatus\"\n                      [id]=\"status\"\n                      type=\"radio\"\n                    />\n                    <label class=\"custom-control-label\" for=\"{{ status }}\">{{\n                      status\n                    }}</label>\n                  </div>\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"\n                      submitted &&\n                      updateProductForm.get('productStatus').invalid\n                    \"\n                  >\n                    <div\n                      *ngIf=\"\n                        updateProductForm.get('productStatus').errors[\n                          'required'\n                        ]\n                      \"\n                    >\n                      * Required\n                    </div>\n                    <div\n                      *ngIf=\"\n                        updateProductForm.get('productStatus').errors[\n                          'serverValidationError'\n                        ]\n                      \"\n                    >\n                      {{\n                        updateProductForm.controls[\"productStatus\"].errors\n                          .serverValidationError\n                      }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- Product Category -->\n              <div class=\"form-group\">\n                <label for=\"supplierId\"><strong>Category</strong><br /></label\n                ><select\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateProductForm.get('categoryId').invalid\n                  }\"\n                  class=\"form-control\"\n                  formControlName=\"categoryId\"\n                >\n                  <option value=\"\" disabled=\"true\" [selected]=\"true\">\n                    Select a Category\n                  </option>\n                  <option\n                    *ngFor=\"let item of categories\"\n                    [value]=\"item.categoryId\"\n                  >\n                    {{ item.categoryName }}\n                  </option>\n                </select>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('categoryId').invalid\">\n                  <div *ngIf=\"updateProductForm.get('categoryId').errors['required']\">* Required</div>\n                  <div *ngIf=\"updateProductForm.get('categoryId').errors['serverValidationError']\"> \n                      {{updateProductForm.controls['categoryId'].errors.serverValidationError }} \n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                {{message}}\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span\n                  *ngIf=\"loadingService.loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Update Product\n              </button>\n              <button\n                class=\"secondary-btn btn-block\"\n                type=\"button\"\n                (click)=\"resetToDefault()\"\n              >\n                Reset to default\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Category } from 'src/app/models/category.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-view-categories',\n  templateUrl: './view-categories.component.html',\n  styleUrls: ['./view-categories.component.scss'],\n})\nexport class ViewCategoriesComponent implements OnInit {\n  dataSource = new MatTableDataSource<Category>();\n  categorySubscription;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // Specify columns tht should be rendered, must match names of matColumnDef\n  // ID is not beign displayed as its not present here\n  displayedColumns: string[] = [\n    'categoryId',\n    'categoryName',\n    'categoryDescription',\n    'edit',\n  ];\n\n  constructor(\n    private categoryService: CategoryService,\n    public loadingService: LoadingService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchAllCategories();\n  }\n  fetchAllCategories() {\n    this.loadingService.enableLoading();\n    this.categorySubscription = this.categoryService\n      .fetchAllCategories()\n      .subscribe((response: Category[]) => {\n        this.dataSource.data = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnDestroy(): void {\n    if (this.categorySubscription) this.categorySubscription.unsubscribe();\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-4 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <h1 class=\"title-main\">Categories</h1>\n        <hr />\n      </div>\n      <div class=\"section-search\">\n        <input\n          type=\"text\"\n          class=\"search-hover\"\n          name=\"\"\n          (input)=\"doFilter($event.target.value)\"\n          placeholder=\"Search...\"\n        />\n        <img class=\"category-add\" src=\"assets/images/add_circle_filled.svg\" alt=\"Category Add\" [routerLink]=\"['/admin/categoryadd']\" >\n      </div>\n      <div class=\"section-table\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"categoryId\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              Category ID\n            </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"category-id\">\n              {{ element.categoryId }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"categoryName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"category-name\">\n              {{ element.categoryName }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"categoryDescription\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              Description\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.categoryDescription }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Edit</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"category-edit\">\n              <img [routerLink]=\"['/admin/categoryedit', element.categoryId]\" src=\"assets/images/edit.svg\" alt=\"\" />\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 20]\"\n          showFirstLastButtons\n          [pageSize]=\"10\"\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { take } from 'rxjs/operators';\nimport { Product } from 'src/app/models/product.model';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { UpdateStatusModalService } from 'src/app/services/update-status-modal.service';\n\n@Component({\n  selector: 'app-view-product-new',\n  templateUrl: './view-product-new.component.html',\n  styleUrls: ['./view-product-new.component.scss'],\n})\nexport class ViewProductNewComponent implements OnInit {\n  dataSource = new MatTableDataSource<Product>();\n  productSubscription;\n  activeTypes = ['ENABLED', 'DISABLED'];\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // Specify columns tht should be rendered, must match names of matColumnDef\n  // ID is not beign displayed as its not present here\n  displayedColumns: string[] = [\n    'productId',\n    'productName',\n    'productDescription',\n    'productStatus',\n    'productPrice',\n    'discountPercent',\n    'updatedPrice',\n    'edit',\n  ];\n\n  constructor(\n    private productService: ProductService,\n    public loadingService: LoadingService,\n    private updateStatusModalService: UpdateStatusModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchAllProducts();\n  }\n  fetchAllProducts() {\n    this.loadingService.enableLoading();\n    this.productSubscription = this.productService\n      .fetchAllProducts()\n      .subscribe((response: Product[]) => {\n        this.dataSource.data = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnDestroy(): void {\n    if (this.productSubscription) this.productSubscription.unsubscribe();\n  }\n\n  updateStatus(product) {\n    this.updateStatusModalService.open(product);\n    this.updateStatusModalService\n      .watch()\n      .pipe(take(1))\n      .subscribe({\n        next: (res) => {\n          if (res === 'close') {\n            this.dataSource.data = null;\n            this.fetchAllProducts();\n          }\n        },\n      });\n  }\n\n  calculateUpdatedPrice(element) {\n    return (\n      element.productPrice -\n      element.productPrice * 0.01 * element.discountPercent\n    );\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-4 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <h1 class=\"title-main\">Products</h1>\n        <hr />\n      </div>\n      <div class=\"section-search\">\n        <input\n          type=\"text\"\n          class=\"search-hover\"\n          name=\"\"\n          (input)=\"doFilter($event.target.value)\"\n          placeholder=\"Search...\"\n        />\n        <img\n          class=\"product-add\"\n          src=\"assets/images/add_circle_filled.svg\"\n          alt=\"Category Add\"\n          [routerLink]=\"['/admin/add']\"\n        />\n      </div>\n      <div class=\"section-table\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"productId\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              Product ID\n            </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"product-id\">\n              {{ element.productId }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"productName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"product-name\">\n              {{ element.productName }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"productDescription\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              Description\n            </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"product-description\">\n              {{ element.productDescription }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"productStatus\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.productStatus }}\n              <button\n                mat-icon-button\n                color=\"primary\"\n                (click)=\"updateStatus(element)\"\n                aria-label=\"Example icon button with a menu icon\"\n              >\n                <img src=\"assets/images/edit_square.svg\" alt=\"\" />\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"productPrice\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\n            <td mat-cell *matCellDef=\"let element\">\n              ₹ {{ element.productPrice }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"discountPercent\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Discount</th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.discountPercent }} %\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"updatedPrice\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>New Price</th>\n            <td mat-cell *matCellDef=\"let element\">\n              ₹ {{ calculateUpdatedPrice(element) }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Edit</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"product-edit\">\n              <img\n                [routerLink]=\"['/admin/update', element.productId]\"\n                src=\"assets/images/edit.svg\"\n                alt=\"\"\n              />\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 20]\"\n          showFirstLastButtons\n          [pageSize]=\"10\"\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n<app-update-status-modal></app-update-status-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Product } from 'src/app/models/product.model';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-view-product',\n  templateUrl: './view-product.component.html',\n  styleUrls: ['./view-product.component.scss'],\n})\nexport class ViewProductComponent implements OnInit {\n  products: Product[] = [];\n\n  constructor(private service: ProductService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.fetchAllProducts();\n  }\n  fetchAllProducts() {\n    this.service.fetchAllProducts().subscribe((data: Product[]) => {\n      this.products = data;\n    });\n  }\n\n  deleteProduct(productID: number) {\n    this.service.deleteProduct(productID).subscribe((response) => this.fetchAllProducts());\n  }\n\n  updateProduct(product: Product) {}\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\">\n\n<h1 style=\"text-align: center;\">List of Products/Gift Items</h1>\n\n<div style=\"margin-left: 280px;\" class=\"container mb-4\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped table-hover\">\n                    <thead style=\"background-image: linear-gradient(to right, #24b7d8, #fb5a69);\">\n                        <tr class=\"text-center\">\n                            <!-- <th scope=\"col\"></th> -->\n                            <th scope=\"col\">Product Id</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Stock</th>\n                            <th scope=\"col\">Description</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Category Id</th>\n                            <th scope=\"col\">Category Name</th>\n                            <th colspan=\"2\"> <button class=\"btn\" style=\"background-color: #f56774;\" [routerLink]=\"[ '/admin/add']\">Add Product</button></th>\n                        </tr>\n                    </thead>\n                    <br>\n                    <tbody>\n                        <tr class=\"text-center\" *ngFor=\"let product of products\">\n                            <td>{{ product.productId }}</td>\n                            <td>{{ product.productName }}</td>\n                            <td>{{\"Rs. \" + product.productPrice }}</td>\n                            <td>{{ product.productStock }}</td>\n                            <td>{{ product.productDescription }}</td>\n                            <td>{{ product.productStatus }}</td>\n                            <td>{{ product.categoryId }}</td>\n                            <td>{{ product.categoryName }}</td>\n                            <td class=\"border-0 align-middle\"><button class=\"btn\" (click)=\"deleteProduct(product.productId)\"><i class=\"fa fa-trash-o fa-border\" style=\"color:#ff4d4d;\" ></i></button></td>\n                            <td class=\"border-0 align-middle\"><button class=\"btn\" [routerLink]=\"['/admin/update', product.productId]\" ><i class=\"fa fa-pencil fa-border\" style=\"color:#ff4d4d;\" ></i></button></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"backdrop\"></div>\n<router-outlet></router-outlet>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-22 01:46:15\n * @modify date 2021-01-22 01:46:15\n * @desc [description]\n */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n})\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  resetPasswordForm: UntypedFormGroup;\n  submitted = false;\n  success = false;\n  question = 'Not Found';\n  resetPasswordSubscription: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    public loadingService: LoadingService,\n    private router: Router,\n    private eventService: EventService\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.resetPasswordSubscription)\n      this.resetPasswordSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.initPasswordResetForm();\n  }\n\n  resetPassword() {\n    this.submitted = true;\n    if (this.resetPasswordForm.valid)\n      this.submitResetForm(this.resetPasswordForm.getRawValue());\n  }\n\n  submitResetForm(formData) {\n    formData.username;\n    this.loadingService.enableLoading();\n    this.resetPasswordSubscription = this.authService\n      .requestPasswordReset(formData)\n      .subscribe(\n        (response) => {\n          this.success = true;\n          setTimeout(() => {\n            this.router.navigateByUrl('/auth/login');\n          }, 3000);\n          this.loadingService.disableLoading();\n        },\n        (error) => {\n          this.loadingService.disableLoading();\n          \n          if (error.error.message === 'FieldException')\n            error.error.errors.forEach((element) =>\n              this.resetPasswordForm.controls[element.field]?.setErrors({\n                serverValidationError: element.message,\n              })\n            );\n          else throw new Error(error);\n        }\n      );\n  }\n\n  initPasswordResetForm() {\n    const res = this.eventService.resetPasswordData.value;\n    if (res === null) this.router.navigateByUrl('/auth/forgotpassword');\n    this.question = res?.securityQuestion;\n    this.resetPasswordForm = new UntypedFormGroup({\n      username: new UntypedFormControl({ value: res?.username, disabled: true }, [\n        Validators.required,\n      ]),\n      newPassword: new UntypedFormControl('', [Validators.required]),\n      securityAnswer: new UntypedFormControl('', [Validators.required]),\n    });\n  }\n}\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <div class=\"col-6 front-img\">\n        </div>\n        <div class=\"col-6 user-form\">\n          <div class=\"p-5\">\n            <div class=\"text-center logo-container\">\n              <img class=\"logo\" [routerLink]=\"['/']\" src=\"assets/images/gift-box.svg\" />\n              <img class=\"title\" [routerLink]=\"['/']\" src=\"assets/images/logo-text.png\" />\n              <hr>\n            </div>\n            <form\n            class=\"user\"\n            [formGroup]=\"resetPasswordForm\"\n            (ngSubmit)=\"resetPassword()\"\n          >\n            <div class=\"form-group\">\n              <input\n                class=\"form-control form-control-user\"\n                type=\"username\"\n                formControlName=\"username\"\n                placeholder=\"Username\"\n                name=\"username\"\n              />\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"securityAnswer\">\n                {{ question }}\n              </label>\n              <input\n                class=\"form-control form-control-user\"\n                type=\"text\"\n                formControlName=\"securityAnswer\"\n                type=\"text\"\n                placeholder=\"Enter Answer\"\n                name=\"securityAnswer\"\n                [ngClass]=\"{'is-invalid':submitted && resetPasswordForm.get('securityAnswer').invalid}\"\n              />\n              <div class=\"invalid-feedback\" *ngIf=\"submitted && resetPasswordForm.get('securityAnswer').invalid\">\n                <div *ngIf=\"resetPasswordForm.get('securityAnswer').errors['required']\">\n                  * Required\n                </div>\n                <div *ngIf=\"resetPasswordForm.get('securityAnswer').errors['serverValidationError']\">\n                  {{resetPasswordForm.controls[\"securityAnswer\"].errors.serverValidationError}}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <input\n                class=\"form-control form-control-user\"\n                type=\"password\"\n                formControlName=\"newPassword\"\n                id=\"newPassword\"\n                placeholder=\"Enter New Password\"\n                name=\"newPassword\"\n                [ngClass]=\"{'is-invalid':submitted && resetPasswordForm.get('newPassword').invalid}\"\n              />\n              <div class=\"invalid-feedback\" *ngIf=\"submitted && resetPasswordForm.get('newPassword').invalid\">\n                <div *ngIf=\"resetPasswordForm.get('newPassword').errors['required']\">\n                  * Required\n                </div>\n                <div *ngIf=\"resetPasswordForm.get('newPassword').errors['serverValidationError']\">\n                  {{resetPasswordForm.controls[\"newPassword\"].errors.serverValidationError}}\n                </div>\n              </div>\n            </div>\n            <button\n              class=\"primary-btn btn-block\"\n              type=\"submit\"\n            >\n              <span\n                *ngIf=\"loadingService.loading\"\n                class=\"spinner-border spinner-border-sm\"\n              ></span>\n              Reset Password\n            </button>\n          </form>\n          <br>\n          <!-- <hr /> -->\n          <div *ngIf=\"success\" class=\"alert alert-success\" role=\"alert\">\n            Sucessfully Updated Password\n          </div>\n          <div class=\"text-center\">\n            <a class=\"mr-1 actions\" [routerLink]=\"['/auth/forgotpassword']\">Back</a>\n            |\n            <a class=\"ml-1 actions\" [routerLink]=\"['/auth/login']\"> Login</a>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-22 01:46:26\n * @modify date 2021-01-22 01:46:26\n * @desc [description]\n */\nimport { Component, NgZone, OnInit } from '@angular/core';\nimport {\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { SocialAuthService } from 'src/app/services/social-auth.service';\nimport { environment } from 'src/environments/environment';\n\ndeclare const gapi: any;\ndeclare const FB: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: UntypedFormGroup;\n  submitted = false;\n  loginSubscription: Subscription;\n  returnUrl;\n  googleLogin;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public loadingService: LoadingService,\n    private route: ActivatedRoute,\n    private socialAuthService: SocialAuthService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.loginSubscription) this.loginSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.authService.redirectIfLoggedIn();\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    this.initForm();\n    (window as any).googleLogin = this.googleLogin;\n  }\n\n  login() {\n    this.submitted = true;\n    if (this.loginForm.valid) this.submitData(this.loginForm.value);\n  }\n\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n    this.loginSubscription = this.authService.login(formData).subscribe(\n      (response) => {\n        this.router.navigateByUrl(this.returnUrl);\n        this.loadingService.disableLoading();\n      },\n      (error) => {\n        this.loadingService.disableLoading();\n        if (error.error.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.loginForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      }\n    );\n  }\n\n  initForm() {\n    this.loginForm = new UntypedFormGroup({\n      username: new UntypedFormControl('', [Validators.required]),\n      password: new UntypedFormControl('', [Validators.required]),\n    });\n  }\n\n  // Google sign in\n  auth2;\n  logo = '^assets/images/btn_google_light_normal.svg';\n\n  public googleInit() {\n    gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: environment.googleClientId,\n      });\n      this.attachSignin(document.getElementById('googleBtn'));\n    });\n  }\n  public attachSignin(element) {\n    this.auth2.attachClickHandler(element, {}, (googleUser) =>\n      this.ngZone.run(\n        () => {\n          this.loadingService.enableLoading();\n          this.socialAuthService\n            .validateGoogleTokenAndLogin({\n              token: googleUser.getAuthResponse().id_token,\n              email: googleUser.getBasicProfile().getEmail(),\n            })\n            .subscribe((res) => {\n              this.loadingService.disableLoading();\n              if (res['status'] !== 202)\n                this.router.navigateByUrl(this.returnUrl);\n              else {\n                this.router.navigate(['/auth/socialregister'], {\n                  state: {\n                    data: { emailId: googleUser.getBasicProfile().getEmail() },\n                  },\n                });\n              }\n            }).closed;\n        },\n        (error) => console.error(error)\n      )\n    );\n  }\n\n  ngAfterViewInit() {\n    this.googleInit();\n    this.facebookInit();\n  }\n\n  facebookInit() {\n    (window as any).fbAsyncInit = function () {\n      FB.init({\n        appId: environment.facebookClientId,\n        cookie: true,\n        xfbml: true,\n        version: 'v3.1',\n      });\n      FB.AppEvents.logPageView();\n    };\n\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n  }\n\n  submitLogin() {\n    FB.login((response) =>\n      this.ngZone.run(() => {\n        if (response.authResponse) {\n          FB.api('/me', { fields: 'name, email' }, (res) => {\n\n            this.loadingService.enableLoading();\n            this.socialAuthService\n              .validateFacebookTokenAndLogin({\n                token: response.authResponse.accessToken,\n                email: res.email,\n              })\n              .subscribe((res) => {\n                this.loadingService.disableLoading();\n                if (res['status'] !== 202)\n                  this.router.navigateByUrl(this.returnUrl);\n                else {\n                  this.router.navigate(['/auth/socialregister'], {\n                    state: {\n                      data: { emailId: response.email },\n                    },\n                  });\n                }\n              }).closed;\n          });\n        } else throw Error('Error Signing from facebook');\n      })\n    );\n  }\n}\n\n/**\n * Fetch Other google sign in info\n * \n  let profile = googleUser.getBasicProfile();\n  console.log('Token || ' + googleUser.getAuthResponse().id_token);\n  console.log('ID: ' + profile.getId());\n  console.log('Name: ' + profile.getName());\n  console.log('Image URL: ' + profile.getImageUrl());\n  console.log('Email: ' + profile.getEmail());\n */\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <div class=\"col-6 front-img\"></div>\n        <div class=\"col-6 user-form\">\n          <div class=\"p-5\">\n            <div class=\"text-center logo-container\">\n              <img\n                class=\"logo\"\n                [routerLink]=\"['/']\"\n                src=\"assets/images/gift-box.svg\"\n              />\n              <img\n                class=\"title\"\n                [routerLink]=\"['/']\"\n                src=\"assets/images/logo-text.png\"\n              />\n              <hr />\n            </div>\n            <form class=\"user\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n              <div class=\"form-group\">\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"username\"\n                  formControlName=\"username\"\n                  placeholder=\"Username or Email\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && loginForm.get('username').invalid\n                  }\"\n                  name=\"username\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && loginForm.get('username').invalid\"\n                >\n                  <div *ngIf=\"loginForm.get('username').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      loginForm.get('username').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      loginForm.controls[\"username\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"password\"\n                  formControlName=\"password\"\n                  type=\"password\"\n                  id=\"exampleInputPassword\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  [ngClass]=\"{\n                    'is-invalid': submitted && loginForm.get('password').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && loginForm.get('password').invalid\"\n                >\n                  <div *ngIf=\"loginForm.get('password').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      loginForm.get('password').errors['serverValidationError']\n                    \"\n                  >\n                    {{\n                      loginForm.controls[\"password\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              \n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span\n                  *ngIf=\"loadingService.loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Login\n              </button>\n              <a class=\"secondary-btn btn-block\" [routerLink]=\"['/auth/register']\"\n                >Register\n              </a>\n              <br>\n              <br>\n              <div class=\"social\">\n                <img\n                  class=\"social-icon\"\n                  src=\"assets/images/btn_google_normal.svg\"\n                  alt=\"\"\n                  id=\"googleBtn\"\n                />\n                <img\n                  class=\"social-icon icon-bar facebook\"\n                  src=\"assets/images/facebook.svg\"\n                  alt=\"\"\n                  (click)=\"submitLogin()\"\n                />\n              </div>\n              <br />\n            </form>\n            <div class=\"text-center\">\n              <a class=\"actions\" [routerLink]=\"['/auth/forgotpassword']\"\n                >Forgot Password?\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-22 10:44:27\n * @modify date 2021-01-22 10:44:27\n * @desc [description]\n */\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Gender } from 'src/app/models/gender.model';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  submitted = false;\n  userForm: UntypedFormGroup;\n  addUserSubscription: Subscription;\n  message = null;\n  maxDate = new Date(new Date().setFullYear(new Date().getFullYear() - 14)).toISOString().slice(0, 10)\n  // new Date().toISOString().slice(0,10) - ;\n\n  constructor(\n    private manageUserService: ManageUserService,\n    public loadingService: LoadingService,\n    private router: Router\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {}\n\n  submitForm() {\n    this.submitted = true;\n    if (this.userForm.valid) this.addUser(this.userForm.value);\n  }\n\n  addUser(formData) {\n    this.loadingService.enableLoading();\n    this.addUserSubscription = this.manageUserService\n      .addUser(formData)\n      .subscribe(\n        (response) => {\n          this.loadingService.disableLoading();\n          this.message =\n            'Successfully Created user with ID ' + response['userId'];\n          setTimeout(() => {\n            this.router.navigateByUrl('/login');\n          }, 3000);\n        },\n        (error) => {\n          this.loadingService.disableLoading();\n          if (error.error.message === 'FieldException')\n            error.error.errors.forEach((element) =>\n              this.userForm.controls[element.field]?.setErrors({\n                serverValidationError: element.message,\n              })\n            );\n          else throw new Error(error);\n        }\n      );\n  }\n\n  initForm() {\n    this.userForm = new UntypedFormGroup(\n      {\n        firstName: new UntypedFormControl('', [Validators.required]),\n        lastName: new UntypedFormControl('', [Validators.required]),\n        phoneNo: new UntypedFormControl('', [Validators.required]),\n        emailId: new UntypedFormControl('', [Validators.required]),\n        username: new UntypedFormControl('', [Validators.required]),\n        password: new UntypedFormControl('', [Validators.required]),\n        password2: new UntypedFormControl('', [Validators.required]),\n        address: new UntypedFormGroup({\n          state: new UntypedFormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(30),\n          ]),\n          area: new UntypedFormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(30),\n          ]),\n          city: new UntypedFormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(30),\n          ]),\n          pincode: new UntypedFormControl('', [\n            Validators.required,\n            Validators.pattern('[0-9]{6}'),\n          ]),\n        }),\n      },\n      { validators: this.matchPassword }\n    );\n  }\n\n  matchPassword(control: UntypedFormControl) {\n    const password = control.get('password').value;\n    const password2 = control.get('password2').value;\n    if (password != password2) {\n      control.get('password2').setErrors({ passwordMatchError: true });\n    } else {\n      return null;\n    }\n  }\n\n}\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <!-- <div class=\"col-6 front-img\"></div> -->\n        <div class=\"col-12 user-form\">\n          <div class=\"p-3\">\n            <div class=\"logo-container\">\n              <img [routerLink]=\"['/']\" class=\"title\" src=\"assets/images/logo-text.png\" />\n              <hr>\n            </div>\n            <!-- <div class=\"text-center\">\n              <img class=\"logo\" src=\"assets/images/gift-box.svg\" />\n              <img class=\"title\" src=\"assets/images/logo-text.png\" />\n            </div> -->\n            <form (ngSubmit)=\"submitForm()\" [formGroup]=\"userForm\">\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"firstName\"\n                          ><strong>First Name</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          formControlName=\"firstName\"\n                          type=\"text\"\n                          placeholder=\"First Name\"\n                          name=\"firstName\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('firstName').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('firstName').invalid\">\n                          <div *ngIf=\"userForm.get('firstName').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('firstName').errors['serverValidationError']\"> \n                              {{userForm.controls['firstName'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"lastName\"><strong>Last Name</strong></label\n                        ><input\n                          class=\"form-control\"\n                          formControlName=\"lastName\"\n                          type=\"text\"\n                          placeholder=\"Last Name\"\n                          name=\"lastName\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('lastName').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('lastName').invalid\">\n                          <div *ngIf=\"userForm.get('lastName').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('lastName').errors['serverValidationError']\"> \n                              {{userForm.controls['lastName'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"phoneNo\"><strong>Phone No</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          type=\"text\"\n                          placeholder=\"Enter Phone No.\"\n                          name=\"phoneNo\"\n                          formControlName=\"phoneNo\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('phoneNo').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('phoneNo').invalid\">\n                          <div *ngIf=\"userForm.get('phoneNo').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('phoneNo').errors['serverValidationError']\"> \n                              {{userForm.controls['phoneNo'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"emailId\"><strong>Email</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          type=\"text\"\n                          placeholder=\"Email\"\n                          name=\"emailId\"\n                          formControlName=\"emailId\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('emailId').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('emailId').invalid\">\n                          <div *ngIf=\"userForm.get('emailId').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('emailId').errors['serverValidationError']\"> \n                              {{userForm.controls['emailId'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                  <div  formGroupName=\"address\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"city\"><strong>City</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"City\"\n                            name=\"city\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.city').invalid}\"\n                            formControlName=\"city\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.city').invalid\">\n                            <div *ngIf=\"userForm.get('address.city').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.city').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.city').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"country\"><strong>State</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"State\"\n                            name=\"State\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.state').invalid}\"\n                            formControlName=\"state\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.state').invalid\">\n                            <div *ngIf=\"userForm.get('address.state').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.state').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.state').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"area\"><strong>Area</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"Area\"\n                            name=\"area\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.area').invalid}\"\n                            formControlName=\"area\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.area').invalid\">\n                            <div *ngIf=\"userForm.get('address.area').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.area').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.area').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"pinode\"><strong>pincode</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"pincode\"\n                            name=\"pincode\"\n                            formControlName=\"pincode\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.pincode').invalid}\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.pincode').invalid\">\n                            <div *ngIf=\"userForm.get('address.pincode').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.pincode').errors['pattern']\">Must be of length 6</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"password\"><strong>Password</strong></label\n                        ><input\n                          type=\"password\"\n                          class=\"form-control\"\n                          placeholder=\"Enter Password\"\n                          name=\"password\"\n                          formControlName=\"password\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('password').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('password').invalid\">\n                          <div *ngIf=\"userForm.get('password').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('password').errors['serverValidationError']\"> \n                              {{userForm.controls['password'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"password2\"\n                          ><strong>Re-enter Password</strong></label\n                        ><input\n                          type=\"password\"\n                          class=\"form-control\"\n                          placeholder=\"Re-enter Password\"\n                          name=\"password2\"\n                          formControlName=\"password2\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('password2').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('password2').invalid\">\n                          <div *ngIf=\"userForm.get('password2').errors['required']\">* Required</div><div *ngIf=\"userForm.get('password2').errors['passwordMatchError']\">Password not same</div>\n                          <div *ngIf=\"userForm.get('password2').errors['serverValidationError']\"> \n                              {{userForm.controls['password2'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"username\"><strong>Username</strong></label\n                        ><input\n                          type=\"text\"\n                          class=\"form-control\"\n                          placeholder=\"Enter Username\"\n                          name=\"username\"\n                          formControlName=\"username\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('username').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('username').invalid\">\n                          <div *ngIf=\"userForm.get('username').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('username').errors['serverValidationError']\"> \n                              {{userForm.controls['username'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <button class=\"primary-btn btn-block\" type=\"submit\">\n                          <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                          Register\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                    {{message}}\n                  </div>\n            </form>\n            <div class=\"text-center\">\n              <hr>\n              <a class=\"actions\" [routerLink]=\"['/auth/login']\"\n                >Back to Login\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-22 01:46:20\n * @modify date 2021-01-22 01:46:20\n * @desc [description]\n */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-request-question',\n  templateUrl: './request-question.component.html',\n  styleUrls: ['./request-question.component.scss'],\n})\nexport class RequestQuestionComponent implements OnInit, OnDestroy {\n  requestQuestionForm: UntypedFormGroup;\n  formSubscription: Subscription;\n  submitted = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public loadingService: LoadingService,\n    private eventService: EventService\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.formSubscription) this.formSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.initQuestionForm();\n  }\n\n  requestSecretQuestion() {\n    this.submitted = true;\n    if (this.requestQuestionForm.valid)\n      this.submitData(this.requestQuestionForm.value.username);\n  }\n\n  submitData(formData) {\n    this.loadingService.enableLoading();\n    this.formSubscription = this.authService\n      .requestSecretQuestion(formData)\n      .subscribe(\n        (response) => {\n          this.loadingService.disableLoading();\n          this.eventService.resetPasswordData.next(response);\n          this.router.navigateByUrl('/auth/changepassword');\n        },\n        (error) => {\n          this.loadingService.disableLoading();\n          if (error.error.message === 'FieldException')\n            error.error.errors.forEach((element) =>\n              this.requestQuestionForm.controls[element.field]?.setErrors({\n                serverValidationError: element.message,\n              })\n            );\n          else throw new Error(error);\n        }\n      );\n  }\n\n  initQuestionForm() {\n    this.requestQuestionForm = new UntypedFormGroup({\n      username: new UntypedFormControl('', [Validators.required]),\n    });\n  }\n}\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <div class=\"col-6 front-img\">\n        </div>\n        <div class=\"col-6 user-form\">\n          <div class=\"p-5\">\n            <div class=\"text-center logo-container\">\n              <img class=\"logo\" [routerLink]=\"['/']\" src=\"assets/images/gift-box.svg\" />\n              <img class=\"title\" [routerLink]=\"['/']\" src=\"assets/images/logo-text.png\" />\n              <hr>\n            </div>\n            <form class=\"user\"  [formGroup]=\"requestQuestionForm\" (ngSubmit)=\"requestSecretQuestion()\">\n              <div class=\"form-group\">\n                <input\n                  formControlName=\"username\"\n                  class=\"form-control form-control-user\"\n                  type=\"text\"\n                  placeholder=\"Enter Username\"\n                  name=\"username\"\n                  [ngClass]=\"{'is-invalid': submitted && requestQuestionForm.get('username').invalid}\"\n                />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && requestQuestionForm.get('username').invalid\">\n                  <div *ngIf=\"requestQuestionForm.get('username').errors['required']\">* Required</div>\n                  <div *ngIf=\"requestQuestionForm.get('username').errors['serverValidationError']\"> \n                      {{requestQuestionForm.controls['username'].errors.serverValidationError }} \n                  </div>\n                </div>\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                Request Secret Question\n              </button>\n            </form>\n            <!-- <hr /> -->\n            <br>\n            <div class=\"text-center\">\n              <a class=\"actions\" [routerLink]=\"['/auth/login']\">Back To Login</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { SocialAuthService } from 'src/app/services/social-auth.service';\n\n@Component({\n  selector: 'app-social-register',\n  templateUrl: './social-register.component.html',\n  styleUrls: ['./social-register.component.scss'],\n})\nexport class SocialRegisterComponent implements OnInit {\n  email;\n\n  submitted = false;\n  userForm: UntypedFormGroup;\n  addUserSubscription: Subscription;\n  message = null;\n  maxDate = new Date(new Date().setFullYear(new Date().getFullYear() - 14))\n    .toISOString()\n    .slice(0, 10);\n  // new Date().toISOString().slice(0,10) - ;\n\n  constructor(\n    private socialAuthService: SocialAuthService,\n    public loadingService: LoadingService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.email = window.history.state?.data?.emailId\n    if (!this.email) this.router.navigateByUrl('/auth/login')\n    this.initForm();\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.userForm.valid) this.addUser(this.userForm.value);\n  }\n\n  addUser(formData) {\n    \n    this.loadingService.enableLoading();\n    this.addUserSubscription = this.socialAuthService\n      .socialSignUp(formData)\n      .subscribe(\n        (response) => {\n          this.loadingService.disableLoading();\n          this.message =\n            'Successfully Added user with ID ' + response['userId'];\n          setTimeout(() => {\n            this.router.navigateByUrl('/');\n          }, 3000);\n        },\n        (error) => {\n          this.loadingService.disableLoading();\n          if (error.error.message === 'FieldException')\n            error.error.errors.forEach((element) =>\n              this.userForm.controls[element.field]?.setErrors({\n                serverValidationError: element.message,\n              })\n            );\n          else throw new Error(error);\n        }\n      );\n  }\n\n  initForm() {\n    this.userForm = new UntypedFormGroup({\n      firstName: new UntypedFormControl('', [Validators.required]),\n      lastName: new UntypedFormControl('', [Validators.required]),\n      phoneNo: new UntypedFormControl('', [Validators.required]),\n      emailId: new UntypedFormControl(this.email, [Validators.required]),\n      address: new UntypedFormGroup({\n        state: new UntypedFormControl('', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ]),\n        area: new UntypedFormControl('', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ]),\n        city: new UntypedFormControl('', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ]),\n        pincode: new UntypedFormControl('', [\n          Validators.required,\n          Validators.pattern('[0-9]{6}'),\n        ]),\n      }),\n    });\n  }\n}\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <!-- <div class=\"col-6 front-img\"></div> -->\n        <div class=\"col-12 user-form\">\n          <div class=\"p-3\">\n            <div class=\"logo-container\">\n              <img [routerLink]=\"['/']\" class=\"title\" src=\"assets/images/logo-text.png\" />\n              <hr>\n              <h1 class=\"title-main\">\n                You have to do this only Once.\n              </h1>\n            </div>\n            <!-- <div class=\"text-center\">\n              <img class=\"logo\" src=\"assets/images/gift-box.svg\" />\n              <img class=\"title\" src=\"assets/images/logo-text.png\" />\n            </div> -->\n            <form (ngSubmit)=\"submitForm()\" [formGroup]=\"userForm\">\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"firstName\"\n                          ><strong>First Name</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          formControlName=\"firstName\"\n                          type=\"text\"\n                          placeholder=\"First Name\"\n                          name=\"firstName\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('firstName').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('firstName').invalid\">\n                          <div *ngIf=\"userForm.get('firstName').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('firstName').errors['serverValidationError']\"> \n                              {{userForm.controls['firstName'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"lastName\"><strong>Last Name</strong></label\n                        ><input\n                          class=\"form-control\"\n                          formControlName=\"lastName\"\n                          type=\"text\"\n                          placeholder=\"Last Name\"\n                          name=\"lastName\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('lastName').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('lastName').invalid\">\n                          <div *ngIf=\"userForm.get('lastName').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('lastName').errors['serverValidationError']\"> \n                              {{userForm.controls['lastName'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"phoneNo\"><strong>Phone No</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          type=\"text\"\n                          placeholder=\"Enter Phone No.\"\n                          name=\"phoneNo\"\n                          formControlName=\"phoneNo\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('phoneNo').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('phoneNo').invalid\">\n                          <div *ngIf=\"userForm.get('phoneNo').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('phoneNo').errors['serverValidationError']\"> \n                              {{userForm.controls['phoneNo'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"emailId\"><strong>Email</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          type=\"email\"\n                          readonly\n                          name=\"emailId\"\n                          formControlName=\"emailId\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('emailId').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('emailId').invalid\">\n                          <div *ngIf=\"userForm.get('emailId').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('emailId').errors['serverValidationError']\"> \n                              {{userForm.controls['emailId'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                  <div  formGroupName=\"address\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"city\"><strong>City</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"City\"\n                            name=\"city\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.city').invalid}\"\n                            formControlName=\"city\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.city').invalid\">\n                            <div *ngIf=\"userForm.get('address.city').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.city').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.city').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"country\"><strong>State</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"State\"\n                            name=\"State\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.state').invalid}\"\n                            formControlName=\"state\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.state').invalid\">\n                            <div *ngIf=\"userForm.get('address.state').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.state').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.state').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"area\"><strong>Area</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"Area\"\n                            name=\"area\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.area').invalid}\"\n                            formControlName=\"area\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.area').invalid\">\n                            <div *ngIf=\"userForm.get('address.area').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.area').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.area').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"pinode\"><strong>pincode</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"pincode\"\n                            name=\"pincode\"\n                            formControlName=\"pincode\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.pincode').invalid}\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.pincode').invalid\">\n                            <div *ngIf=\"userForm.get('address.pincode').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.pincode').errors['pattern']\">Must be of length 6</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <button class=\"primary-btn btn-block\" type=\"submit\">\n                          <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                          Register\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                    {{message}}\n                  </div>\n            </form>\n            <div class=\"text-center\">\n              <hr>\n              <a class=\"actions\" [routerLink]=\"['/auth/login']\"\n                >Back to Login\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about-us works!</p>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-06 22:41:33\n * @modify date 2021-02-06 22:41:33\n * @desc [description]\n */\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-cart-item-card',\n  templateUrl: './cart-item-card.component.html',\n  styleUrls: ['./cart-item-card.component.scss'],\n})\nexport class CartItemCardComponent implements OnInit {\n  @Input()\n  productId;\n  @Input()\n  productName;\n  @Input()\n  productDescription;\n  @Input()\n  productIcon;\n  @Input()\n  productPrice;\n  @Input()\n  productQuantity;\n  @Input()\n  discountPercent;\n  @Output()\n  removeItemEvent = new EventEmitter<number>();\n  @Input()\n  loadingState;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  discountPrice(): number {\n    return this.discountPercent <= 0\n      ? this.productPrice\n      : this.productPrice - this.productPrice * 0.01 * this.discountPercent;\n  }\n\n  deleteProduct() {\n    this.removeItemEvent.emit(this.productId);\n  }\n\n}\n","<div class=\"product-item\">\n  <img\n    [src]=\"productIcon\"\n    [alt]=\"productName\"\n    (error)=\"$event.target.src = '^assets/images/celebration2.jpg'\"\n    class=\"product-img\"\n  />\n  <div class=\"product-details\">\n    <div class=\"product-data\">\n      <p class=\"product-name\">\n        {{ productName }}\n        <img\n          class=\"detail\"\n          [routerLink]=\"['/products', productId]\"\n          src=\"assets/images/info.svg\"\n          alt=\"\"\n        />\n      </p>\n      <p class=\"product-description\">{{ productDescription }}</p>\n    </div>\n    <div class=\"product-quantity\">\n      <img src=\"assets/images/basket.svg\" alt=\"\" />\n      <span> {{ productQuantity }} </span>\n    </div>\n    <div class=\"product-price\">\n      ₹ {{ discountPrice() }}\n      <span class=\"strike\" *ngIf=\"discountPercent > 0\"\n        >₹ {{ productPrice }}\n      </span>\n    </div>\n    <img\n      (click)=\"deleteProduct()\"\n      class=\"product-delete\"\n      src=\"assets/images/delete.svg\"\n      alt=\"\"\n      *ngIf=\"loadingState?.productId !== productId\"\n    />\n    <span\n      *ngIf=\"loadingState.loading && loadingState.productId === productId\"\n      class=\"spinner-border\"\n    ></span>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-06 22:36:09\n * @modify date 2021-02-06 22:36:09\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { Cart } from 'src/app/models/cart.model';\nimport { ProductInOrder } from 'src/app/models/product-in-order.model';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-cart-new',\n  templateUrl: './cart-new.component.html',\n  styleUrls: ['./cart-new.component.scss'],\n})\nexport class CartNewComponent implements OnInit {\n  cart: Cart;\n  totalBeforeDiscount: number;\n  totalAfterDiscount: number;\n  loadingState = {\n    loading: false,\n    productId: null\n  };\n\n  constructor(\n    private location: Location,\n    public loadingService: LoadingService,\n    private cartService: CartService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchCart();\n  }\n\n  fetchCart() {\n    this.cartService\n      .fetchCartByUserId()\n      .pipe(take(1))\n      .subscribe({\n        next: (res: Cart) => {\n          this.cart = res;\n          this.calculateOrderSummary(res.products);\n        },\n        complete: () => this.loadingService.disableLoading(),\n      });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  calculateOrderSummary(productsInOrder: ProductInOrder[]) {\n    let discountPrice = 0;\n    let totalBeforeDiscount = 0;\n    for (const key in productsInOrder) {\n      totalBeforeDiscount += productsInOrder[key].productPrice;\n      if (productsInOrder[key].discountPercent === 0)\n        discountPrice = productsInOrder[key].productPrice;\n      else discountPrice += this.calculatePrice(productsInOrder[key]);\n    }\n    this.totalBeforeDiscount = totalBeforeDiscount;\n\n    this.totalAfterDiscount = discountPrice;\n  }\n\n  calculatePrice(currentProduct: ProductInOrder) {\n    return (\n      currentProduct.productPrice -\n      currentProduct.productPrice * 0.01 * currentProduct.discountPercent\n    );\n  }\n\n  removeItem(productId: number) {\n    this.loadingState = {\n      productId: productId,\n      loading: true,\n    };\n    this.cartService\n      .removeItemFromCart(productId)\n      .pipe(take(1))\n      .subscribe({\n        next: () => {\n          this.fetchCart();\n        },\n        complete: () => this.loadingState = {\n          loading: false,\n          productId: null,\n        },\n      });\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-5 mx-auto\">\n  <div class=\"card\">\n    <div class=\"logo-container\">\n      <h1 class=\"title-main\">Cart Items</h1>\n      <hr />\n    </div>\n    <div class=\"section-empty\"  *ngIf=\"cart?.products.length === 0\">\n      Its Seems Empty Around Here,\n      Lets start by adding few items in the cart.\n      <button class=\"primary-btn\" [routerLink]=\"['/']\">\n        Show Catalog\n      </button>\n    </div>\n    <div class=\"product-list\" *ngIf=\"cart?.products.length > 0\">\n      <app-cart-item-card\n        [productId]=\"item.productId\"\n        [productName]=\"item.productName\"\n        [productDescription]=\"item.productDescription\"\n        [productIcon]=\"item.productIcon\"\n        [productQuantity]=\"item.productStock\"\n        [productPrice]=\"item.productPrice\"\n        [discountPercent]=\"item.discountPercent\"\n        [loadingState]=\"loadingState\"\n        (removeItemEvent)=\"removeItem($event)\"\n        *ngFor=\"let item of cart?.products\"\n      ></app-cart-item-card>\n    </div>\n    <div class=\"logo-container\">\n      <br />\n      <br />\n      <h1 class=\"title-main\">Estimated Price</h1>\n      <hr />\n    </div>\n    <div>\n      <p class=\"summary\">\n        TOTAL &nbsp;<span class=\"item\">₹ {{ totalBeforeDiscount }} </span>\n      </p>\n      <p class=\"summary\">\n        TOTAL AFTER DISCOUNT &nbsp;<span class=\"item\"\n          >₹ {{ totalAfterDiscount }}\n        </span>\n      </p>\n    <div style=\"margin-left: 10%;\">\n      <button class=\"primary-btn\" [routerLink]=\"['/']\">\n        Continue Shopping\n      </button>\n      <button [disabled]=\"cart?.products.length === 0\" class=\"secondary-btn\" [routerLink]=\"['/products/checkout']\">\n        Checkout\n      </button>\n    </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-27 02:57:00\n * @modify date 2021-01-27 02:57:00\n * @desc [description]\n */\nimport { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Address } from 'src/app/models/address.model';\nimport { Cart } from 'src/app/models/cart.model';\nimport { ProductInOrder } from 'src/app/models/product-in-order.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { GeolocationService } from 'src/app/services/geolocation.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\nimport { PaymentRazorpayService } from 'src/app/services/payment-razorpay.service';\nimport { PaymentStripeService } from 'src/app/services/payment-stripe.service';\nimport { environment } from 'src/environments/environment';\n\ndeclare var Razorpay: any;\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n})\nexport class CartComponent implements OnInit {\n  orderTotal = 0;\n  tax: number = 0;\n  total: number = 0;\n  shipping: number = 0;\n  address: Address = new Address();\n  totalAmount: number;\n  cart: Cart = new Cart();\n  products = this.cart.products;\n  userDetails;\n  totalBeforeDiscount = 0;\n  error;\n  deliveryCharge;\n  user;\n\n  constructor(\n    public cartService: CartService,\n    private authService: AuthService,\n    private manageUserService: ManageUserService,\n    private geolocationService: GeolocationService,\n    private router: Router,\n    private paymentStripeService: PaymentStripeService,\n    private razorpayService: PaymentRazorpayService,\n    private ngZone: NgZone,\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentStripeService.loadStripe();\n    this.fetchCart();\n  }\n\n  fetchCart() {\n    this.cartService.fetchCartByUserId().subscribe((data: Cart) => {\n      this.manageUserService\n        .fetchById(this.authService.fetchFromSessionStorage()?.userId)\n        .subscribe((user) => {\n          this.user = user;\n          this.address = user['address'];\n          this.cart.cartId = data.cartId;\n          this.cart.products = data.products;\n          this.products = this.cart.products;\n          this.calculateDistance();\n          this.calculateOrderSummary(this.products);\n        });\n    });\n  }\n\n  removeItem(productId: number) {\n    this.cartService.removeItemFromCart(productId).subscribe((data) => {\n      this.fetchCart();\n    });\n  }\n\n  calculateOrderSummary(productsInOrder: ProductInOrder[]) {\n    let discountPrice = 0;\n    let totalBeforeDiscount = 0;\n    let total;\n    for (const key in productsInOrder) {\n      totalBeforeDiscount += productsInOrder[key].productPrice;\n      if (productsInOrder[key].discountPercent === 0)\n        discountPrice = productsInOrder[key].productPrice;\n      else discountPrice += this.calculatePrice(productsInOrder[key]);\n    }\n    this.totalBeforeDiscount = totalBeforeDiscount;\n\n    this.orderTotal = discountPrice;\n\n    if (this.orderTotal < 2000 && this.orderTotal > 0) {\n      this.shipping = 40;\n    } else {\n      this.shipping = 0;\n    }\n    total = this.orderTotal + this.deliveryCharge;\n\n    this.total = total;\n  }\n\n  checkout() {\n    sessionStorage.setItem('shippingAddress', this.address.area);\n    sessionStorage.setItem('City', this.address.city);\n    sessionStorage.setItem('State', this.address.state);\n    sessionStorage.setItem('Pincode', this.address.pincode);\n    this.paymentStripeService.pay(this.total);\n    this.paymentStripeService.paymentComplete.subscribe((res) => {\n      this.checkOutInServer(res);\n    });\n  }\n  checkOutInServer(res) {\n    const data = {\n      ...this.address,\n      deliveryCharge: this.deliveryCharge,\n      paymentId: res.paymentId,\n    };\n    this.cartService.checkout(data).subscribe((res) => {\n      this.router.navigateByUrl('/products/delivery/' + res['orderId'])\n    });\n  }\n\n  calculateDistance() {\n    this.geolocationService.fetchDistance(this.address.pincode).subscribe(\n      (res) => {\n        if (res['info'].statuscode !== 0) this.error = 'error';\n        else {\n          this.error = null;\n          this.calculateDeliveryCharge(res['route'].distance);\n        }\n      },\n      (error) => {\n      }\n    );\n  }\n\n  calculateDeliveryCharge(distance) {\n    if (distance <= 5) this.deliveryCharge = 50;\n    else if (distance <= 25) this.deliveryCharge = 100;\n    else if (distance <= 50) this.deliveryCharge = 200;\n    else if (distance <= 100) this.deliveryCharge = 300;\n    else if (distance <= 200) this.deliveryCharge = 400;\n    else this.deliveryCharge = 500;\n    this.total = this.orderTotal + this.deliveryCharge;\n  }\n  calculatePrice(currentProduct: ProductInOrder) {\n    return (\n      currentProduct.productPrice -\n      currentProduct.productPrice * 0.01 * currentProduct.discountPercent\n    );\n  }\n\n  // RAZOR PAY Methods\n\n  rzp1;\n  options;\n  order;\n\n  payFromRazorPay() {\n    this.razorpayService.generateOrderId(this.total*100).subscribe((res) => {\n      this.setOption(res);\n    }, error => console.error(error)\n    );\n  }\n  initRazorPay() {\n    const rzp1 = new Razorpay(this.options);\n    rzp1.open();\n  }\n\n  setOption(data: Object) {\n    this.options = {\n      key: environment.publicRazorpayKey, // Enter the Key ID generated from the Dashboard\n      // amount: 12100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      currency: 'INR',\n      name: 'Gift Shop',\n      description: 'Test Transaction',\n      image: 'https://i.imgur.com/OEzo9pz.png',\n      order_id: data['order_id'], //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      // callback_url: this.router.url,\n      handler: (response) => this.ngZone.run(() => this.updatePaymentInServer(response.razorpay_payment_id))\n        ,\n      prefill: {\n        name: 'Gift Shop',\n        email: 'gift.shop@gmail.com',\n        contact: '9999999999',\n      },\n      notes: {\n        address: 'Gift Shop office',\n      },\n      theme: {\n        color: '#21a0bd',\n      },\n    };\n    this.initRazorPay();\n  }\n  updatePaymentInServer(razorId) {\n    const name = this.user['firstName'] + this.user['lastName'];\n    const amount = this.total;\n    this.razorpayService.updatePaymentInDb({ razorId, amount, name }).subscribe(res => {\n      this.checkOutInServer(res)\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-12 p-5 bg-white rounded shadow-sm mb-5\">\n      <!-- Shopping cart table -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">\n                <div class=\"py-2 text-uppercase\">\n                  <i class=\"fa fa-gift fa-lg\"></i>&nbsp;Product\n                </div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"py-2 text-uppercase\">\n                  <i class=\"fa fa-money fa-lg\" aria-hidden=\"true\"></i\n                  >&nbsp;&nbsp;Price\n                </div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"py-2 text-uppercase\">\n                  <i class=\"fa fa-percent fa-lg\" aria-hidden=\"true\"></i\n                  >&nbsp;&nbsp;Discount\n                </div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"py-2 text-uppercase\">\n                  <i class=\"fa fa-sort-numeric-asc fa-lg\" aria-hidden=\"true\"></i\n                  >&nbsp;&nbsp;Quantity\n                </div>\n              </th>\n\n              <th scope=\"col\">\n                <div class=\"py-2 text-uppercase\">\n                  <i class=\"fa fa-money fa-lg\" aria-hidden=\"true\"></i\n                  >&nbsp;&nbsp;Total\n                </div>\n              </th>\n\n              <th scope=\"col\">\n                <div class=\"py-2 text-uppercase\">\n                  <i class=\"fa fa-trash-o fa-lg\" aria-hidden=\"true\"></i\n                  >&nbsp;&nbsp;Remove\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let product of products\">\n              <th scope=\"row\" class=\"border-0\">\n                <div class=\"p-2\">\n                  <img\n                    src=\"{{ product.productIcon }}\"\n                    alt=\"\"\n                    width=\"100\"\n                    class=\"img-fluid rounded shadow-sm\"\n                  />\n                  <div class=\"ml-3 d-inline-block align-middle\">\n                    <h5 class=\"mb-0\">\n                      <a\n                        href=\"#\"\n                        class=\"text-dark d-inline-block align-middle\"\n                        >{{ product.productName }}</a\n                      >\n                    </h5>\n                    <span\n                      class=\"text-muted font-weight-normal font-italic d-block\"\n                      >{{ product.productCategory }}</span\n                    >\n                  </div>\n                </div>\n              </th>\n              <td class=\"border-0 align-middle\">\n                <strong>{{ product.productPrice | currency: \"INR\" }}</strong>\n              </td>\n              <td class=\"border-0 align-middle\">\n                <strong>{{ product.discountPercent }}</strong>\n              </td>\n              <td class=\"border-0 align-middle\">\n                <strong>{{ product.productStock }}</strong>\n              </td>\n              <td class=\"border-0 align-middle\">\n                <strong>{{ calculatePrice(product) | currency: \"INR\" }}</strong>\n              </td>\n\n              <td class=\"border-0 align-middle\">\n                <button class=\"btn\" (click)=\"removeItem(product.productId)\">\n                  <img src=\"assets/images/trash.svg\" alt=\"\" />\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <!-- End  -->\n    </div>\n  </div>\n\n  <div class=\"row py-5 p-4 bg-white rounded shadow-sm\" *ngIf=\"products?.length > 0\">\n    <div class=\"col-lg-6\">\n      <div\n        class=\"bg-info text-white rounded-pill px-4 py-3 text-uppercase font-weight-bold\"\n        style=\"color: aliceblue\"\n      >\n        <i class=\"fa fa-truck fa-lg\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Shipping\n        Details\n      </div>\n      <div class=\"p-4\">\n        <form>\n          <div class=\"input-group mb-3 input-group-lg\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"\n                ><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i\n              ></span>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your Address\"\n              class=\"form-control\"\n              [(ngModel)]=\"address.area\"\n              name=\"area\"\n              #area=\"ngModel\"\n              required\n              pattern=\"[A-Za-z]{3,}\"\n            />\n            <div\n              *ngIf=\"area.invalid && area.touched && area.dirty\"\n              class=\"alert alert-danger\"\n            >\n              Area must be atleast 3 characters long!\n            </div>\n          </div>\n          <div class=\"input-group mb-3 input-group-lg\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"\n                ><i class=\"fa fa-location-arrow\" aria-hidden=\"true\"></i\n              ></span>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your City\"\n              class=\"form-control\"\n              [(ngModel)]=\"address.city\"\n              name=\"city\"\n              #city=\"ngModel\"\n              required\n              pattern=\"[A-Za-z]{3,}\"\n            />\n            <div\n              *ngIf=\"city.invalid && city.touched && city.dirty\"\n              class=\"alert alert-danger\"\n            >\n              City must be atleast 3 characters long!\n            </div>\n          </div>\n          <div class=\"input-group mb-3 input-group-lg\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"\n                ><i class=\"fa fa-map-o\" aria-hidden=\"true\"></i\n              ></span>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your State\"\n              class=\"form-control\"\n              [(ngModel)]=\"address.state\"\n              name=\"state\"\n              #state=\"ngModel\"\n              required\n              pattern=\"[A-Za-z]{3,}\"\n            />\n            <div\n              *ngIf=\"state.invalid && state.touched && state.dirty\"\n              class=\"alert alert-danger\"\n            >\n              State must be atleast 3 characters long!\n            </div>\n          </div>\n          <div class=\"input-group mb-3 input-group-lg\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"\n                ><i class=\"fa fa-map-pin\" aria-hidden=\"true\"></i\n              ></span>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your Pincode\"\n              class=\"form-control\"\n              [(ngModel)]=\"address.pincode\"\n              name=\"pincode\"\n              #pincode=\"ngModel\"\n              required\n              pattern=\"[0-9]{6}\"\n              (change)=\"calculateDistance()\"\n            />\n            <div\n              *ngIf=\"(pincode.invalid && pincode.touched && pincode.dirty) || error\"\n              class=\"alert alert-danger\"\n            >\n              Invalid Pincode or delivery unavailable\n            </div>\n          </div>\n\n          \n        </form>\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div\n        class=\"bg-info text-white rounded-pill px-4 py-3 text-uppercase font-weight-bold\"\n      >\n        <i class=\"fa fa-info-circle fa-lg\" aria-hidden=\"true\"></i\n        >&nbsp;&nbsp;Order summary\n      </div>\n      <div class=\"p-4\">\n        <ul class=\"list-unstyled mb-4\">\n          <li class=\"d-flex justify-content-between py-3 border-bottom\">\n            <strong class=\"text-muted\">TOTAL </strong\n            ><strong>{{ totalBeforeDiscount | currency: \"INR\" }}</strong>\n          </li>\n          <li class=\"d-flex justify-content-between py-3 border-bottom\">\n            <strong class=\"text-muted\">TOTAL AFTER DISCOUNT </strong\n            ><strong>{{ orderTotal | currency: \"INR\" }}</strong>\n          </li>\n          <li class=\"d-flex justify-content-between py-3 border-bottom\">\n            <strong class=\"text-muted\">DELIVERY CHARGE </strong\n            ><strong>{{ deliveryCharge | currency: \"INR\" }}</strong>\n          </li>\n          <!-- <li class=\"d-flex justify-content-between py-3 border-bottom\">\n            <strong class=\"text-muted\"\n              >SHIPPING\n              AND HANDLING</strong\n            > (Free for Order greater than ₹ 2000) <strong>{{ shipping | currency: \"INR\" }}</strong>\n          </li> -->\n          <!-- Removed for time being -->\n          <!-- <li class=\"d-flex justify-content-between py-3 border-bottom\">\n                <strong class=\"text-muted\">GST (18%)</strong\n                ><strong>{{ tax | currency: \"INR\" }}</strong>\n              </li> -->\n          <li class=\"d-flex justify-content-between py-3 border-bottom\">\n            <strong class=\"text-muted\" style=\"font-size: 120%\">TOTAL</strong>\n            <h4 class=\"font-weight-bold\">{{ total | currency: \"INR\" }}</h4>\n          </li>\n        </ul>\n        <button\n            class=\"btn btn-outline-success font-weight-bold\"\n            (click)=\"checkout()\"\n            [disabled]=\"!total\"\n          >\n            <i class=\"fa fa-credit-card-alt\" aria-hidden=\"true\"></i> &nbsp;\n            Pay with Stripe\n          </button>\n          &nbsp;\n          <button [disabled]=\"!total\" class=\"btn btn-outline-success font-weight-bold\" id=\"rzp-button1\" (click)=\"payFromRazorPay()\">Pay with Razor Pay</button>\n      </div>\n      \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart-summary',\n  templateUrl: './cart-summary.component.html',\n  styleUrls: ['./cart-summary.component.scss']\n})\nexport class CartSummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cart-summary works!</p>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-06 11:32:54\n * @modify date 2021-02-06 11:32:54\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { OnDestroy } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss'],\n})\nexport class CheckoutComponent implements OnInit, OnDestroy {\n  stages = [\n    { title: 'Shipping Details', color: '#24b7d8', path: 'shipping' },\n    { title: 'Payment', color: '#20a5c2', path: 'payment' },\n    { title: 'Success', color: '#1d92ad', path: 'success' },\n  ];\n\n  activeStages = [];\n  routeSubscription: Subscription;\n  title = 'Shipping Details';\n\n  constructor(\n    private location: Location,\n    public loadingService: LoadingService,\n    private router: Router\n  ) {\n    this.routeChangeSubscription();\n  }\n  ngOnDestroy(): void {\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {}\n\n  goBack() {\n    this.location.back();\n  }\n\n  cancelOrder() {}\n\n  routeChangeSubscription() {\n    this.routeSubscription = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((val) => this.updateFlow(val['urlAfterRedirects']));\n  }\n  updateFlow(url) {\n    if (url.includes('/shipping')) {\n      this.activeStages = this.stages.slice(0, 1);\n      this.title = this.stages[0].title;\n    }\n    else if (url.includes('/payment')){\n      this.activeStages = this.stages.slice(0, 2);\n      this.title = this.stages[1].title;\n    }\n    else if (url.includes('/success')){\n      this.activeStages = this.stages.slice(0, 3);\n      this.title = this.stages[2].title;\n    }\n  }\n\n  getActiveStages() {\n    return this.activeStages;\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-5 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <img\n          [routerLink]=\"['/']\"\n          class=\"title\"\n          src=\"assets/images/logo-text.png\"\n        />\n        <!-- <hr /> -->\n      </div>\n    </div>\n\n    <div class=\"row d-flex justify-content-center\">\n      <div class=\"col-12\">\n        <ul id=\"progressbar\" class=\"text-center\">\n          <li\n            *ngFor=\"let item of activeStages\"\n            class=\"active step0\"\n            data-toggle=\"tooltip\"\n            [title]=\"item.title\"\n            data-placement=\"top\"\n            onmouseenter=\"$(this).tooltip('show')\"\n            onmouseout=\"$(this).tooltip('hide')\"\n          ></li>\n          <li\n            class=\"step0\"\n            *ngFor=\"let i of [].constructor(3 - activeStages.length)\"\n          ></li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"logs-container\">\n      <div class=\"logs-heading\">\n        <h1 class=\"title-main\"> {{ title }} </h1>\n        <hr />\n        <div class=\"router\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-order-cancel-modal></app-order-cancel-modal>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { take, tap } from 'rxjs/operators';\nimport { DeliveryHistory } from 'src/app/models/delivery-history.model';\nimport { DeliveryHistoryService } from 'src/app/services/delivery-history.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { OrderCancelModalService } from 'src/app/services/order-cancel-modal.service';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.scss'],\n})\nexport class PaymentSuccessComponent implements OnInit {\n  orderId;\n  orderDetails;\n  deliveryHistory: DeliveryHistory[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private orderService: OrderService,\n    private location: Location,\n    public loadingService: LoadingService,\n    private deliveryHistoryService: DeliveryHistoryService,\n    private orderCancelModal: OrderCancelModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.orderId = this.route.snapshot.params['orderId'];\n    this.fetchOrderDetails(this.orderId);\n    this.fetchDeliveryDetails(this.orderId);\n  }\n\n  fetchDeliveryDetails(id) {\n    this.deliveryHistoryService\n      .fetchDeliveryByOrderId(id)\n      .pipe(take(1))\n      .subscribe((res: DeliveryHistory[]) => (this.deliveryHistory = res));\n  }\n\n  fetchOrderDetails(id) {\n    this.orderService\n      .fetchById(id)\n      .pipe(take(1))\n      .pipe(\n        tap((res) => {\n          return res;\n        })\n      )\n      .subscribe((res) => (this.orderDetails = res));\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  formattedDate(date) {\n    return new Date(date).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    });\n  }\n\n  cancelOrder() {\n    this.orderCancelModal.open();\n    this.orderCancelModal.watch().subscribe((res) => {\n      this.loadingService.enableLoading();\n      if (res !== 'cancel-order') this.loadingService.disableLoading();\n      else\n        this.orderService\n          .updateOrderStatus({\n            orderId: this.orderDetails?.orderId,\n            status: 'CANCELLED',\n          })\n          .subscribe((res) => {\n            this.fetchDeliveryDetails(this.orderDetails?.orderId);\n          });\n    });\n  }\n\n  checkIfCancellable() {\n    return (\n      this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'DELIVERED' &&\n      this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'CANCELLED'\n    );\n  }\n}\n","<section>\n  <p class=\"summary\">\n    Order #<span class=\"item\"> {{ orderDetails?.orderId }} </span>\n  </p>\n  <p class=\"summary\">\n    Current Status\n    <span class=\"item\">\n      Delivered\n      <img\n        src=\"assets/images/info.svg\"\n        alt=\"\"\n        [routerLink]=\"['/products/delivery', orderDetails?.orderId]\"\n      />\n    </span>\n  </p>\n  <p class=\"summary\">\n    Updated On\n    <span class=\"item\">\n      {{ formattedDate(deliveryHistory?.slice(-1)[0]?.updatedOn) }}\n    </span>\n  </p>\n</section>\n<section>\n  <!-- Name -->\n  <p class=\"summary\">\n    Name\n    <span class=\"item\"> {{ orderDetails?.buyerName }} </span>\n  </p>\n  <!-- Phone -->\n  <p class=\"summary\">\n    Phone No.\n    <span class=\"item\"> {{ orderDetails?.buyerPhone }} </span>\n  </p>\n  <!-- Email -->\n  <p class=\"summary\">\n    Email\n    <span class=\"item\"> {{ orderDetails?.buyerEmail }} </span>\n  </p>\n</section>\n<!-- Address -->\n<section>\n  <!-- Street -->\n  <p class=\"summary\">\n    Street\n    <span class=\"item\"> {{ orderDetails?.buyerAddress }} </span>\n  </p>\n  <!-- City -->\n  <p class=\"summary\">\n    City\n    <span class=\"item\"> {{ orderDetails?.buyerCity }} </span>\n  </p>\n  <!-- Phone -->\n  <p class=\"summary\">\n    State\n    <span class=\"item\"> {{ orderDetails?.buyerState }} </span>\n  </p>\n  <!-- Email -->\n  <p class=\"summary\">\n    Pincode\n    <span class=\"item\"> {{ orderDetails?.buyerPincode }} </span>\n  </p>\n</section>\n<!-- <div class=\"logs-container\"> -->\n<div class=\"logs-heading\">\n  <h1 class=\"title-main\">Payment Details</h1>\n</div>\n<section>\n  <p class=\"summary\">\n    Order Amount\n    <span class=\"item\">₹ {{ orderDetails?.orderAmount }} </span>\n  </p>\n  <p class=\"summary\">\n    Discounted Amount\n    <span class=\"item\">₹ {{ orderDetails?.discountedAmount }} </span>\n  </p>\n  <p class=\"summary\">\n    Delivery Charge\n    <span class=\"item\">₹ {{ orderDetails?.deliveryCharge }} </span>\n  </p>\n  <p class=\"summary\">\n    Final Price\n    <span class=\"item\">₹ {{ orderDetails?.finalPrice }} </span>\n  </p>\n  <p class=\"summary\">\n    Payment Type\n    <span class=\"item\"> {{ orderDetails?.paymentType }} </span>\n  </p>\n</section>\n<button class=\"primary-btn\" [routerLink]=\"['/']\">Continue Shopping</button>\n<button class=\"secondary-btn\" [routerLink]=\"['/products/delivery', orderId]\" >Delivery Status</button>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-06 17:25:05\n * @modify date 2021-02-06 17:25:05\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, NgZone, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, take, tap } from 'rxjs/operators';\nimport { Address } from 'src/app/models/address.model';\nimport { Cart } from 'src/app/models/cart.model';\nimport { ProductInOrder } from 'src/app/models/product-in-order.model';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\nimport { PaymentRazorpayService } from 'src/app/services/payment-razorpay.service';\nimport { PaymentStripeService } from 'src/app/services/payment-stripe.service';\nimport { environment } from 'src/environments/environment';\ndeclare var Razorpay: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss'],\n})\nexport class PaymentComponent implements OnInit {\n  address: Address;\n  deliveryCharge: number;\n  totalAfterDiscount: number;\n  totalBeforeDiscount: number;\n  finalTotal: number;\n  user;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    private cartService: CartService,\n    private manageUserService: ManageUserService,\n    private ngZone: NgZone,\n    private razorpayService: PaymentRazorpayService,\n    public loadingService: LoadingService,\n    private paymentStripeService: PaymentStripeService\n  ) {}\n\n  ngOnInit(): void {\n    this.initDeliveryData();\n    this.fetchCartData();\n    this.fetchUserData();\n  }\n  fetchUserData() {\n    this.manageUserService\n      .fetchLoggedInUserForEdit()\n      .pipe(take(1))\n      .subscribe({\n        next: (res) => {\n          this.user = res;\n        },\n      });\n  }\n  fetchCartData() {\n    this.cartService\n      .fetchCartByUserId()\n      .pipe(take(1))\n      .subscribe({\n        next: (res: Cart) => this.calculateOrderSummary(res.products),\n      });\n  }\n\n  initDeliveryData() {\n    this.route.paramMap\n      .pipe(\n        map(() => window.history.state),\n        take(1),\n        tap((res) =>\n          res?.address ? res : this.router.navigateByUrl('/products/checkout')\n        )\n      )\n      .subscribe((res) => {\n        this.deliveryCharge = res?.deliveryCharge;\n        this.address = res?.address;\n      });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  calculateOrderSummary(productsInOrder: ProductInOrder[]) {\n    let discountPrice = 0;\n    let totalBeforeDiscount = 0;\n    let finalTotal;\n    for (const key in productsInOrder) {\n      totalBeforeDiscount += productsInOrder[key].productPrice;\n      if (productsInOrder[key].discountPercent === 0)\n        discountPrice = productsInOrder[key].productPrice;\n      else discountPrice += this.calculatePrice(productsInOrder[key]);\n    }\n    this.totalBeforeDiscount = totalBeforeDiscount;\n\n    this.totalAfterDiscount = discountPrice;\n    finalTotal = this.totalAfterDiscount + this.deliveryCharge;\n\n    this.finalTotal = finalTotal;\n  }\n\n  calculatePrice(currentProduct: ProductInOrder) {\n    return (\n      currentProduct.productPrice -\n      currentProduct.productPrice * 0.01 * currentProduct.discountPercent\n    );\n  }\n\n  checkOutInServer(res) {\n    this.loadingService.enableLoading();\n    const data = {\n      ...this.address,\n      deliveryCharge: this.deliveryCharge,\n      paymentId: res.paymentId,\n    };\n    this.cartService.checkout(data).subscribe({\n      next: (res) => {\n        this.router.navigate(['/products/checkout/success', res['orderId']]);\n      },\n      complete: () => this.loadingService.disableLoading(),\n    });\n  }\n\n  // Stripe Pay\n\n  payWithStripe() {\n    this.loadingService.enableLoading();\n    this.paymentStripeService.pay(this.finalTotal);\n    this.paymentStripeService.paymentComplete.subscribe({\n      next: (res) => {\n        this.loadingService.disableLoading()\n        this.checkOutInServer(res);\n      }\n    });\n  }\n\n  // RAZOR PAY Methods\n\n  rzp1;\n  options;\n  order;\n\n  payWithRazorpay() {\n    this.loadingService.enableLoading();\n    this.razorpayService\n      .generateOrderId(this.finalTotal * 100)\n      .pipe(take(1))\n      .subscribe({\n        next: (res) => this.setOption(res),\n        error: (error) => console.error(error),\n        complete: () => this.loadingService.disableLoading(),\n      });\n  }\n  initRazorPay() {\n    const rzp1 = new Razorpay(this.options);\n    rzp1.open();\n  }\n\n  setOption(data: Object) {\n    this.options = {\n      key: environment.publicRazorpayKey, // Enter the Key ID generated from the Dashboard\n      // amount: 12100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      currency: 'INR',\n      name: 'Gift Shop',\n      description: 'Test Transaction',\n      image: 'https://i.imgur.com/OEzo9pz.png',\n      order_id: data['order_id'],\n      handler: (response) =>\n        this.ngZone.run(() =>\n          this.updatePaymentInServer(response.razorpay_payment_id)\n        ),\n      prefill: {\n        name: this.user?.firstName + this.user?.lastName,\n        email: this.user?.emailId,\n        contact: this.user?.phoneNo,\n      },\n      notes: {\n        address: 'Gift Shop office',\n      },\n      theme: {\n        color: '#1f9db9',\n      },\n    };\n    this.initRazorPay();\n  }\n  updatePaymentInServer(razorId) {\n    this.loadingService.enableLoading();\n    const name = this.user['firstName'] + this.user['lastName'];\n    const amount = this.finalTotal;\n    this.razorpayService\n      .updatePaymentInDb({ razorId, amount, name })\n      .subscribe({\n        next: (res) => this.checkOutInServer(res),\n        complete: () => this.loadingService.disableLoading(),\n      });\n  }\n}\n","<!-- Address -->\n<div class=\"payment-page\">\n  <section>\n    <!-- Street -->\n    <p class=\"summary\">\n      Street\n      <span class=\"item\"> {{ address?.area }} </span>\n    </p>\n    <!-- City -->\n    <p class=\"summary\">\n      City\n      <span class=\"item\"> {{ address?.city }} </span>\n    </p>\n    <!-- Phone -->\n    <p class=\"summary\">\n      State\n      <span class=\"item\"> {{ address?.state }} </span>\n    </p>\n    <!-- Email -->\n    <p class=\"summary\">\n      Pincode\n      <span class=\"item\"> {{ address?.pincode }} </span>\n    </p>\n  </section>\n  <section>\n    <p class=\"summary\">TOTAL <span class=\"item\">₹  {{ totalBeforeDiscount }} </span></p>\n    <p class=\"summary\">TOTAL AFTER DISCOUNT<span class=\"item\">₹ {{ totalAfterDiscount }} </span></p>\n    <p class=\"summary\">\n      DELIVERY CHARGE <span class=\"item\">₹ {{ deliveryCharge }} </span>\n    </p>\n    <p class=\"summary\">\n      Final Price <span class=\"item\">₹ {{ finalTotal }} </span>\n    </p>\n  </section>\n</div>\n\n<div class=\"payment-section\">\n  <button class=\"primary-btn\" (click)=\"goBack()\">Back</button>\n  <span class=\"pay-with\">Pay with </span>\n  <button class=\"primary-btn stripe\" (click)=\"payWithStripe()\">\n    <img src=\"assets/images/stripe_logo.svg\" alt=\"\" /> \n  </button>\n  <button class=\"secondary-btn\" (click)=\"payWithRazorpay()\">\n    <img class=\"razor-pay\" src=\"assets/images/razorpay_logo.svg\" alt=\"\" /> \n  </button>\n  <span\n    *ngIf=\"loadingService.loading\"\n    class=\"spinner-border text-primary\"\n  ></span>\n</div>\n<br />\n<br />\n<br />\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-06 14:41:20\n * @modify date 2021-02-06 14:41:20\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { GeolocationService } from 'src/app/services/geolocation.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\n\n@Component({\n  selector: 'app-shipping-details',\n  templateUrl: './shipping-details.component.html',\n  styleUrls: ['./shipping-details.component.scss'],\n})\nexport class ShippingDetailsComponent implements OnInit {\n  submitted;\n  addressForm: UntypedFormGroup;\n  deliveryCharge: number;\n  address;\n  error;\n\n  constructor(\n    private manageUserService: ManageUserService,\n    private geolocationService: GeolocationService,\n    private authService: AuthService,\n    public loadingService: LoadingService,\n    private router: Router,\n    private location: Location,\n  ) {}\n\n  ngOnInit(): void {\n    this.initAddressForm();\n    this.populateAddress();\n  }\n\n  populateAddress() {\n    this.manageUserService\n      .fetchById(this.authService.fetchFromSessionStorage()?.userId)\n      .subscribe((user) => {\n        this.address = user['address'];\n        this.populateFormFields(this.address);\n        this.calculateDistance();\n      });\n  }\n\n  calculateDistance() {\n    this.loadingService.enableLoading();\n    this.geolocationService\n      .fetchDistance(this.addressForm.value.pincode)\n      .subscribe({\n        next: (res) => this.handleApiResponse(res),\n        error: (error) => console.error(error),\n        complete: () => this.loadingService.disableLoading(),\n      });\n  }\n\n  handleApiResponse(res: Object): void {\n    if (res['info'].statuscode !== 0) {\n      this.error = 'error';\n      this.addressForm.controls.pincode.setErrors({\n        serverValidationError: 'Delivery not available at given location',\n      });\n    } else {\n      this.error = null;\n      this.calculateDeliveryCharge(res['route'].distance);\n      this.redirectIfFormValidAndSubmitted();\n    }\n  }\n\n  redirectIfFormValidAndSubmitted() {\n    if (this.addressForm.valid && this.error === null && this.submitted)\n      this.navigateToPayment(this.addressForm);\n  }\n\n  populateFormFields(address) {\n    this.addressForm.patchValue({\n      city: address.city,\n      state: address?.state,\n      pincode: address?.pincode,\n      area: address?.area,\n    });\n  }\n\n  calculateDeliveryCharge(distance) {\n    if (distance <= 5) this.deliveryCharge = 50;\n    else if (distance <= 25) this.deliveryCharge = 100;\n    else if (distance <= 50) this.deliveryCharge = 200;\n    else if (distance <= 100) this.deliveryCharge = 300;\n    else if (distance <= 200) this.deliveryCharge = 400;\n    else this.deliveryCharge = 500;\n  }\n\n  initAddressForm() {\n    this.addressForm = new UntypedFormGroup({\n      state: new UntypedFormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(30),\n      ]),\n      area: new UntypedFormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(30),\n      ]),\n      city: new UntypedFormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(30),\n      ]),\n      pincode: new UntypedFormControl('', [\n        Validators.required,\n        Validators.pattern('[0-9]{6}'),\n      ]),\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    // Form submitted after handling server response\n    this.calculateDistance();\n  }\n  navigateToPayment(addressForm: UntypedFormGroup) {\n    this.router.navigate(['/products/checkout/payment'], {\n      state: {\n        address: {\n          city: addressForm.value?.city,\n          state: addressForm.value?.state,\n          area: addressForm.value?.area,\n          pincode: addressForm.value?.pincode,\n        },\n        deliveryCharge: this.deliveryCharge,\n      },\n    });\n  }\n\n  resetToDefault() {\n    this.populateFormFields(this.address);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<form  [formGroup]=\"addressForm\" (submit)=\"onSubmit()\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"city\"><strong>City</strong></label\n        ><input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"City\"\n          name=\"city\"\n          [ngClass]=\"{'is-invalid': submitted && addressForm.get('city').invalid}\"\n          formControlName=\"city\"\n        />\n        <div class=\"invalid-feedback\" *ngIf=\"submitted && addressForm.get('city').invalid\">\n          <div *ngIf=\"addressForm.get('city').errors['required']\">* Required</div>\n          <div *ngIf=\"addressForm.get('city').errors['minlength']\">Min length ust be 4</div>\n          <div *ngIf=\"addressForm.get('city').errors['maxlength']\">Max length must be 30</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"country\"><strong>State</strong></label\n        ><input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"State\"\n          name=\"State\"\n          [ngClass]=\"{'is-invalid': submitted && addressForm.get('state').invalid}\"\n          formControlName=\"state\"\n        />\n        <div class=\"invalid-feedback\" *ngIf=\"submitted && addressForm.get('state').invalid\">\n          <div *ngIf=\"addressForm.get('state').errors['required']\">* Required</div>\n          <div *ngIf=\"addressForm.get('state').errors['minlength']\">Min length ust be 4</div>\n          <div *ngIf=\"addressForm.get('state').errors['maxlength']\">Max length must be 30</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"area\"><strong>Area</strong></label\n        ><input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Area\"\n          name=\"area\"\n          [ngClass]=\"{'is-invalid': submitted && addressForm.get('area').invalid}\"\n          formControlName=\"area\"\n        />\n        <div class=\"invalid-feedback\" *ngIf=\"submitted && addressForm.get('area').invalid\">\n          <div *ngIf=\"addressForm.get('area').errors['required']\">* Required</div>\n          <div *ngIf=\"addressForm.get('area').errors['minlength']\">Min length ust be 4</div>\n          <div *ngIf=\"addressForm.get('area').errors['maxlength']\">Max length must be 30</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"pinode\"><strong>pincode</strong></label\n        ><input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"pincode\"\n          name=\"pincode\"\n          (change)=\"calculateDistance()\"\n          formControlName=\"pincode\"\n          [ngClass]=\"{'is-invalid': submitted && addressForm.get('pincode').invalid}\"\n        />\n        <div class=\"invalid-feedback\" *ngIf=\"submitted && addressForm.get('pincode').invalid\">\n          <div *ngIf=\"addressForm.get('pincode').errors['required']\">* Required</div>\n          <div *ngIf=\"addressForm.get('pincode').errors['pattern']\">Must be of length 6</div>\n          <div *ngIf=\"addressForm.get('pincode').errors['serverValidationError']\"> \n            {{addressForm.controls['pincode'].errors.serverValidationError }} \n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"delivery-charge\">\n    <span class=\"delivery-caption\">Delivery Cost </span> &nbsp; &nbsp; <span class=\"delivery-price\">₹ {{ deliveryCharge }}  </span>  <span\n    *ngIf=\"loadingService.loading\"\n    class=\"spinner-border spinner-border-sm\"\n  ></span>\n    <br> <span class=\"warning\">Calculated Based on Pincode location*</span>\n  </div>\n  <button class=\"primary-btn\" (click)=\"goBack()\">Back</button>\n  <div style=\"float: right;\">\n    <button class=\"primary-btn\" (click)=\"resetToDefault()\">Reset Values</button>\n    <button type=\"submit\" class=\"secondary-btn\" >Next</button>\n  </div>\n  <br>\n  <br>\n</form>","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-30 10:39:53\n * @modify date 2021-01-30 10:39:53\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserDetailsEdit } from 'src/app/models/user-details-edit';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss'],\n})\nexport class EditProfileComponent implements OnInit {\n  submitted = false;\n  updateUserForm: UntypedFormGroup;\n  message;\n  userDetailsEdit: UserDetailsEdit;\n\n  constructor(\n    public loadingService: LoadingService,\n    private location: Location,\n    private router: Router,\n    private manageUserService: ManageUserService\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n    this.fetchData();\n  }\n  fetchData() {\n    this.manageUserService\n      .fetchLoggedInUserForEdit()\n      .subscribe((res: UserDetailsEdit) => {\n        this.userDetailsEdit = res;\n        this.populateFormFields(res);\n      });\n  }\n  initForm() {\n    this.updateUserForm = new UntypedFormGroup({\n      userId: new UntypedFormControl('', [Validators.required]),\n      firstName: new UntypedFormControl('', [Validators.required]),\n      lastName: new UntypedFormControl('', [Validators.required]),\n      emailId: new UntypedFormControl('', [Validators.required]),\n      phoneNo: new UntypedFormControl('', [Validators.required]),\n      securityQuestion: new UntypedFormControl('', [Validators.required]),\n      securityAnswer: new UntypedFormControl('', [Validators.required]),\n      address: new UntypedFormGroup({\n        state: new UntypedFormControl('', [Validators.required]),\n        area: new UntypedFormControl('', [Validators.required]),\n        city: new UntypedFormControl('', [Validators.required]),\n        pincode: new UntypedFormControl('', [\n          Validators.required,\n          Validators.pattern('[0-9]{6}'),\n        ]),\n      }),\n    });\n  }\n\n  populateFormFields(userDetails: UserDetailsEdit) {\n    this.updateUserForm.patchValue({\n      userId: userDetails?.userId,\n      firstName: userDetails?.firstName,\n      lastName: userDetails?.lastName,\n      emailId: userDetails?.emailId,\n      phoneNo: userDetails?.phoneNo,\n      securityQuestion: userDetails?.securityQuestion,\n      securityAnswer: userDetails?.securityAnswer,\n      address: {\n        state: userDetails?.address?.state,\n        area: userDetails?.address?.area,\n        city: userDetails?.address?.city,\n        pincode: userDetails?.address?.pincode,\n      },\n    });\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.updateUserForm.valid) this.submitData(this.updateUserForm.value);\n  }\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n    this.manageUserService.updateLoggedInUser(formData).subscribe(\n      (response) => {\n        this.loadingService.disableLoading();\n        this.message = 'Successfully updated Your profile';\n        setTimeout(() => {\n          this.router.navigateByUrl('/');\n        }, 3000);\n      },\n      (error) => {\n        this.loadingService.disableLoading();\n        if (error?.error?.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.updateUserForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      }\n    );\n  }\n\n  resetToDefault() {\n    this.populateFormFields(this.userDetailsEdit);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"root\">\n  <div\n    class=\"background\"\n    [ngStyle]=\"{\n      'background-image': 'url(assets/images/celebration2.jpg)'\n    }\"\n  ></div>\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div class=\"p-5\">\n          <h2 class=\"product-title\">\n            <img\n              class=\"back-img\"\n              (click)=\"goBack()\"\n              src=\"assets/images/back.svg\"\n              alt=\"\"\n            />\n            Edit Profile #<span class=\"product-id\">\n              {{ userDetailsEdit?.userId }}\n            </span>\n          </h2>\n          <form\n            class=\"user\"\n            [formGroup]=\"updateUserForm\"\n            (ngSubmit)=\"submitForm()\"\n          >\n            <input hidden type=\"text\" formControlName=\"userId\" />\n            <!-- User ID -->\n            <div class=\"form-group userId\">\n              <label for=\"userId\"> User ID</label>\n              <input\n                class=\"form-control form-control-user\"\n                type=\"text\"\n                id=\"userId\"\n                formControlName=\"userId\"\n                placeholder=\"User ID\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    submitted && updateUserForm.get('userId').invalid\n                }\"\n                name=\"userId\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"submitted && updateUserForm.get('userId').invalid\"\n              >\n                <div *ngIf=\"updateUserForm.get('userId').errors['required']\">\n                  * Required\n                </div>\n                <div\n                  *ngIf=\"\n                    updateUserForm.get('userId').errors['serverValidationError']\n                  \"\n                >\n                  {{\n                    updateUserForm.controls[\"userId\"].errors\n                      .serverValidationError\n                  }}\n                </div>\n              </div>\n            </div>\n            <!-- First Name -->\n            <div class=\"row\">\n              <div class=\"form-group col\">\n                <label for=\"exampleInputfirstName\"> First Name</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  formControlName=\"firstName\"\n                  id=\"exampleInputfirstName\"\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateUserForm.get('firstName').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateUserForm.get('firstName').invalid\"\n                >\n                  <div\n                    *ngIf=\"updateUserForm.get('firstName').errors['required']\"\n                  >\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateUserForm.get('firstName').errors[\n                        'serverValidationError'\n                      ]\n                    \"\n                  >\n                    {{\n                      updateUserForm.controls[\"firstName\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Last Name -->\n              <div class=\"form-group col\">\n                <label for=\"exampleInputlastName\"> Last Name</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  formControlName=\"lastName\"\n                  id=\"exampleInputlastName\"\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateUserForm.get('lastName').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateUserForm.get('lastName').invalid\"\n                >\n                  <div\n                    *ngIf=\"updateUserForm.get('lastName').errors['required']\"\n                  >\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateUserForm.get('lastName').errors[\n                        'serverValidationError'\n                      ]\n                    \"\n                  >\n                    {{\n                      updateUserForm.controls[\"lastName\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <!-- Email ID -->\n              <div class=\"form-group col\">\n                <label for=\"exampleInputemailId\"> Email ID</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  type=\"emailId\"\n                  formControlName=\"emailId\"\n                  id=\"exampleInputemailId\"\n                  placeholder=\"Email ID\"\n                  name=\"emailId\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateUserForm.get('emailId').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateUserForm.get('emailId').invalid\"\n                >\n                  <div *ngIf=\"updateUserForm.get('emailId').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateUserForm.get('emailId').errors[\n                        'serverValidationError'\n                      ]\n                    \"\n                  >\n                    {{\n                      updateUserForm.controls[\"emailId\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Phone No -->\n              <div class=\"form-group col\">\n                <label for=\"exampleInputphoneNo\"> Phone No</label>\n                <input\n                  class=\"form-control form-control-user\"\n                  formControlName=\"phoneNo\"\n                  id=\"exampleInputphoneNo\"\n                  placeholder=\"Phone No\"\n                  name=\"phoneNo\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateUserForm.get('phoneNo').invalid\n                  }\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateUserForm.get('phoneNo').invalid\"\n                >\n                  <div *ngIf=\"updateUserForm.get('phoneNo').errors['required']\">\n                    * Required\n                  </div>\n                  <div\n                    *ngIf=\"\n                      updateUserForm.get('phoneNo').errors[\n                        'serverValidationError'\n                      ]\n                    \"\n                  >\n                    {{\n                      updateUserForm.controls[\"phoneNo\"].errors\n                        .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div formGroupName=\"address\">\n              <div class=\"row\">\n                <div class=\"col address\">\n                  <div class=\"form-group\">\n                    <label for=\"city\">City</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"City\"\n                      name=\"city\"\n                      [ngClass]=\"{\n                        'is-invalid':\n                          submitted &&\n                          updateUserForm.get('address.city').invalid\n                      }\"\n                      formControlName=\"city\"\n                    />\n                    <div\n                      class=\"invalid-feedback\"\n                      *ngIf=\"\n                        submitted && updateUserForm.get('address.city').invalid\n                      \"\n                    >\n                      <div\n                        *ngIf=\"\n                          updateUserForm.get('address.city').errors['required']\n                        \"\n                      >\n                        * Required\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <label for=\"country\">State</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"State\"\n                      name=\"State\"\n                      [ngClass]=\"{\n                        'is-invalid':\n                          submitted &&\n                          updateUserForm.get('address.state').invalid\n                      }\"\n                      formControlName=\"state\"\n                    />\n                    <div\n                      class=\"invalid-feedback\"\n                      *ngIf=\"\n                        submitted && updateUserForm.get('address.state').invalid\n                      \"\n                    >\n                      <div\n                        *ngIf=\"\n                          updateUserForm.get('address.state').errors['required']\n                        \"\n                      >\n                        * Required\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col address\">\n                  <div class=\"form-group\">\n                    <label for=\"area\">Area</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"Area\"\n                      name=\"area\"\n                      [ngClass]=\"{\n                        'is-invalid':\n                          submitted &&\n                          updateUserForm.get('address.area').invalid\n                      }\"\n                      formControlName=\"area\"\n                    />\n                    <div\n                      class=\"invalid-feedback\"\n                      *ngIf=\"\n                        submitted && updateUserForm.get('address.area').invalid\n                      \"\n                    >\n                      <div\n                        *ngIf=\"\n                          updateUserForm.get('address.area').errors['required']\n                        \"\n                      >\n                        * Required\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <label for=\"pinode\">pincode</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"pincode\"\n                      name=\"pincode\"\n                      formControlName=\"pincode\"\n                      [ngClass]=\"{\n                        'is-invalid':\n                          submitted &&\n                          updateUserForm.get('address.pincode').invalid\n                      }\"\n                    />\n                    <div\n                      class=\"invalid-feedback\"\n                      *ngIf=\"\n                        submitted &&\n                        updateUserForm.get('address.pincode').invalid\n                      \"\n                    >\n                      <div\n                        *ngIf=\"\n                          updateUserForm.get('address.pincode').errors[\n                            'required'\n                          ]\n                        \"\n                      >\n                        * Required\n                      </div>\n                      <div\n                        *ngIf=\"\n                          updateUserForm.get('address.pincode').errors[\n                            'pattern'\n                          ]\n                        \"\n                      >\n                        Must be of length 6\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- Security Question -->\n            <div class=\"form-group\">\n              <label for=\"exampleInputsecurityQuestion\">\n                Security Question (To reset password from Login Page)\n              </label>\n              <textarea\n                class=\"form-control form-control-user\"\n                type=\"text\"\n                formControlName=\"securityQuestion\"\n                id=\"exampleInputsecurityQuestion\"\n                placeholder=\"Security Question\"\n                name=\"securityQuestion\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    submitted && updateUserForm.get('securityQuestion').invalid\n                }\"\n              ></textarea>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  submitted && updateUserForm.get('securityQuestion').invalid\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    updateUserForm.get('securityQuestion').errors['required']\n                  \"\n                >\n                  * Required\n                </div>\n                <div\n                  *ngIf=\"\n                    updateUserForm.get('securityQuestion').errors[\n                      'serverValidationError'\n                    ]\n                  \"\n                >\n                  {{\n                    updateUserForm.controls[\"securityQuestion\"].errors\n                      .serverValidationError\n                  }}\n                </div>\n              </div>\n            </div>\n            <!-- Security Answer -->\n            <div class=\"form-group\">\n              <label for=\"exampleInputsecurityAnswer\"> Security Answer</label>\n              <input\n                class=\"form-control form-control-user\"\n                type=\"text\"\n                formControlName=\"securityAnswer\"\n                id=\"exampleInputsecurityAnswer\"\n                placeholder=\"Security Answer\"\n                name=\"securityAnswer\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    submitted && updateUserForm.get('securityAnswer').invalid\n                }\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  submitted && updateUserForm.get('securityAnswer').invalid\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    updateUserForm.get('securityAnswer').errors['required']\n                  \"\n                >\n                  * Required\n                </div>\n                <div\n                  *ngIf=\"\n                    updateUserForm.get('securityAnswer').errors[\n                      'serverValidationError'\n                    ]\n                  \"\n                >\n                  {{\n                    updateUserForm.controls[\"securityAnswer\"].errors\n                      .serverValidationError\n                  }}\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n              {{ message }}\n            </div>\n            <div class=\"actions\">\n              <hr />\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span\n                  *ngIf=\"loadingService.loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Update\n              </button>\n              <button\n                class=\"secondary-btn btn-block\"\n                type=\"button\"\n                (click)=\"resetToDefault()\"\n              >\n                Reset to default\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 22:36:58\n * @modify date 2021-01-25 22:36:58\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeliveryHistory } from 'src/app/models/delivery-history.model';\nimport { OrderStatus } from 'src/app/models/order-status.model';\nimport { DeliveryHistoryService } from 'src/app/services/delivery-history.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { OrderCancelModalService } from 'src/app/services/order-cancel-modal.service';\nimport { OrderService } from 'src/app/services/order.service';\n@Component({\n  selector: 'app-delivery-history',\n  templateUrl: './delivery-history.component.html',\n  styleUrls: ['./delivery-history.component.scss'],\n})\nexport class DeliveryHistoryComponent implements OnInit {\n  OrderStaus = OrderStatus;\n  orderId;\n  deliveryHistory: DeliveryHistory[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private location: Location,\n    public loadingService: LoadingService,\n    private orderCancelModal: OrderCancelModalService,\n    private deliveryService: DeliveryHistoryService,\n    private orderService: OrderService\n  ) {}\n\n  ngOnInit(): void {\n    this.orderId = this.route.snapshot.params['orderId'];\n    this.fetchDeliveryHistory();\n  }\n  fetchDeliveryHistory() {\n    this.loadingService.enableLoading();\n    this.deliveryService\n      .fetchDeliveryByOrderId(this.orderId)\n      .subscribe((res: DeliveryHistory[]) => {\n        this.loadingService.disableLoading();\n        this.deliveryHistory = res;\n      });\n  }\n\n  formattedDate(date) {\n    return new Date(date).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  cancelOrder() {\n    this.orderCancelModal.open();\n    this.orderCancelModal.watch().subscribe((res) => {\n      this.loadingService.enableLoading();\n      if (res !== 'cancel-order') this.loadingService.disableLoading();\n      else\n        this.orderService\n          .updateOrderStatus({\n            orderId: this.orderId,\n            status: 'CANCELLED',\n          })\n          .subscribe((res) => {\n            this.fetchDeliveryHistory();\n          });\n    }).closed;\n  }\n\n  checkIfCancellable() {\n    return (\n      this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'DELIVERED' && this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'CANCELLED'\n    );\n  }\n\n  fetchDeliveryColor(orderStatus) {\n    switch (orderStatus) {\n      case 'NEW':\n      case 'DELIVERED':\n        return 'green';\n      case 'CANCELLED':\n        return 'red';\n      default:\n        return '#1f9db9';\n    }\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-5 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <img\n          [routerLink]=\"['/']\"\n          class=\"title\"\n          src=\"assets/images/logo-text.png\"\n        />\n        <hr />\n        <h1 class=\"title-main\">Delivery History</h1>\n      </div>\n      <p class=\"summary\">\n        Order #<span class=\"item\">{{ orderId }} </span>\n      </p>\n      <p class=\"summary\">\n        Current Status\n        <span class=\"item\">\n          {{ OrderStaus[deliveryHistory.slice(-1)[0]?.orderStatus] }}\n        </span>\n      </p>\n      <p class=\"summary\">\n        Updated On\n        <span class=\"item\">\n          {{ formattedDate(deliveryHistory.slice(-1)[0]?.updatedOn) }}\n        </span>\n      </p>\n    </div>\n    <!-- Add class 'active' to progress -->\n    <div class=\"row d-flex justify-content-center\">\n      <div class=\"col-12\">\n        <ul id=\"progressbar\" class=\"text-center\">\n          <li\n            *ngFor=\"let item of deliveryHistory\"\n            class=\"active step0\"\n            ata-toggle=\"popover\"\n            [title]=\"OrderStaus[item.orderStatus]\"\n            [attr.data-content]=\"'Updated On ' + formattedDate(item.updatedOn)\"\n            data-placement=\"top\"\n            onmouseenter=\"$(this).popover('show')\"\n            onmouseout=\"$(this).popover('hide')\"\n            [ngClass]=\"{ delete: item.orderStatus === 'CANCELLED' }\"\n          ></li>\n          <!-- Display in active for remaining lements -->\n          <!-- <span *ngIf=\"deliveryHistory.slice(-1)[0]?.orderStatus!=='CANCELLED'\"> -->\n          <li\n            class=\"step0\"\n            *ngFor=\"let i of [].constructor(4 - deliveryHistory.length)\"\n          ></li>\n          <!-- </span> -->\n        </ul>\n      </div>\n    </div>\n    <div class=\"row justify-content-between delivery-icon-container\">\n      <div class=\"delivery-container row d-flex icon-content\">\n        <img class=\"icon\" src=\"assets/images/created.svg\" />\n        <p class=\"font-weight-bold\">Order<br />Created</p>\n      </div>\n      <div class=\"delivery-container row icon-content\">\n        <img class=\"icon\" src=\"assets/images/dispatched.svg\" />\n        <p class=\"font-weight-bold\">Order<br />Dispatched</p>\n      </div>\n      <div class=\"delivery-container row icon-content\">\n        <img class=\"icon\" src=\"assets/images/out_for_delivery.svg\" />\n        <p class=\"font-weight-bold\">Out for<br />Delivery</p>\n      </div>\n      <div class=\"delivery-container row icon-content\">\n        <img class=\"icon\" src=\"assets/images/delivered.svg\" />\n        <p class=\"font-weight-bold\">Delivered</p>\n      </div>\n    </div>\n    <div class=\"logs-container\">\n      <div class=\"logs-heading\">\n        <hr />\n        <h1 class=\"title-main\">Delivery Logs</h1>\n      </div>\n      <div\n        class=\"log-entry\"\n        *ngFor=\"let item of deliveryHistory?.slice().reverse()\"\n      >\n        <img\n          class=\"log-img\"\n          [ngStyle]=\"{\n            'background-color': fetchDeliveryColor(item.orderStatus)\n          }\"\n          src=\"assets/images/check.svg\"\n          alt=\"\"\n        />\n        <span class=\"log-item\">\n          Order<span\n            class=\"log-status\"\n            [ngStyle]=\"{ color: fetchDeliveryColor(item.orderStatus) }\"\n          >\n            {{ OrderStaus[item.orderStatus] }}\n          </span>\n          on\n          <span class=\"log-date\">{{\n            formattedDate(item.updatedOn)\n          }}</span></span\n        >\n      </div>\n    </div>\n    <br />\n    <div class=\"actions\">\n      <button class=\"back-btn\" (click)=\"goBack()\">Back</button>\n      <button\n        class=\"cancel-btn\"\n        (click)=\"cancelOrder()\"\n        *ngIf=\"checkIfCancellable()\"\n      >\n        <span\n          *ngIf=\"loadingService.loading\"\n          class=\"spinner-border spinner-border-sm\"\n        ></span>\n        Cancel Order\n      </button>\n    </div>\n  </div>\n</div>\n\n<app-order-cancel-modal></app-order-cancel-modal>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-04 18:40:35\n * @modify date 2021-02-04 18:40:35\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { take, tap } from 'rxjs/operators';\nimport { DeliveryHistory } from 'src/app/models/delivery-history.model';\nimport { Order } from 'src/app/models/order.model';\nimport { DeliveryHistoryService } from 'src/app/services/delivery-history.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { OrderCancelModalService } from 'src/app/services/order-cancel-modal.service';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-details-new',\n  templateUrl: './order-details-new.component.html',\n  styleUrls: ['./order-details-new.component.scss'],\n})\nexport class OrderDetailsNewComponent implements OnInit {\n  orderDetails: Order;\n  deliveryHistory: DeliveryHistory[];\n  orderId;\n\n  constructor(\n    private route: ActivatedRoute,\n    private orderService: OrderService,\n    private location: Location,\n    public loadingService: LoadingService,\n    private deliveryHistoryService: DeliveryHistoryService,\n    private orderCancelModal: OrderCancelModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.orderId = this.route.snapshot.params['orderId'];\n    this.fetchOrderDetails(this.orderId);\n    this.fetchDeliveryDetails(this.orderId);\n  }\n\n  fetchDeliveryDetails(id) {\n    this.deliveryHistoryService\n      .fetchDeliveryByOrderId(id)\n      .pipe(take(1))\n      .subscribe((res: DeliveryHistory[]) => (this.deliveryHistory = res));\n  }\n\n  fetchOrderDetails(id) {\n    this.orderService\n      .fetchById(id)\n      .pipe(take(1))\n      .pipe(\n        tap((res) => {\n          return res;\n        })\n      )\n      .subscribe((res: Order) => (this.orderDetails = res));\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  formattedDate(date) {\n    return new Date(date).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    });\n  }\n\n  cancelOrder() {\n    this.orderCancelModal.open();\n    this.orderCancelModal.watch().subscribe((res) => {\n      this.loadingService.enableLoading();\n      if (res !== 'cancel-order') this.loadingService.disableLoading();\n      else\n        this.orderService\n          .updateOrderStatus({\n            orderId: +this.orderDetails?.orderId,\n            status: 'CANCELLED',\n          })\n          .subscribe((res) => {\n            this.fetchOrderDetails(this.orderDetails?.orderId);\n            this.fetchDeliveryDetails(this.orderDetails?.orderId);\n          });\n    });\n  }\n\n  checkIfCancellable() {\n    return (\n      this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'DELIVERED' &&\n      this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'CANCELLED'\n    );\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-5 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <img\n          [routerLink]=\"['/']\"\n          class=\"title\"\n          src=\"assets/images/logo-text.png\"\n        />\n        <hr />\n        <h1 class=\"title-main\">Purchase History</h1>\n      </div>\n      <div class=\"row\">\n        <section class=\"col\">\n          <p class=\"summary\">\n            Order #<span class=\"item\"> {{ orderDetails?.orderId }} </span>\n          </p>\n          <p class=\"summary\">\n            Current Status\n            <span class=\"item\">\n              {{ orderDetails?.orderStatus }}\n              <img\n                src=\"assets/images/info.svg\"\n                alt=\"\"\n                [routerLink]=\"['/products/delivery', orderDetails?.orderId]\"\n              />\n            </span>\n          </p>\n          <p class=\"summary\">\n            Updated On\n            <span class=\"item\">\n              {{ formattedDate(deliveryHistory?.slice(-1)[0]?.updatedOn) }}\n            </span>\n          </p>\n        </section>\n        <section class=\"col\">\n          <!-- Name -->\n          <p class=\"summary\">\n            Name\n            <span class=\"item\"> {{ orderDetails?.buyerName }} </span>\n          </p>\n          <!-- Phone -->\n          <p class=\"summary\">\n            Phone No.\n            <span class=\"item\"> {{ orderDetails?.buyerPhone }} </span>\n          </p>\n          <!-- Email -->\n          <p class=\"summary\">\n            Email\n            <span class=\"item\"> {{ orderDetails?.buyerEmail }} </span>\n          </p>\n        </section>\n      </div>\n      <!-- Address -->\n      <section>\n        <!-- Street -->\n        <p class=\"summary\">\n          Street\n          <span class=\"item\"> {{ orderDetails?.buyerAddress }} </span>\n        </p>\n        <!-- City -->\n        <p class=\"summary\">\n          City\n          <span class=\"item\"> {{ orderDetails?.buyerCity }} </span>\n        </p>\n        <!-- Phone -->\n        <p class=\"summary\">\n          State\n          <span class=\"item\"> {{ orderDetails?.buyerState }} </span>\n        </p>\n        <!-- Email -->\n        <p class=\"summary\">\n          Pincode\n          <span class=\"item\"> {{ orderDetails?.buyerPincode }} </span>\n        </p>\n      </section>\n    </div>\n    <!-- <div class=\"logs-container\"> -->\n    <div class=\"logs-heading\">\n      <hr />\n      <h1 class=\"title-main\">Payment Details</h1>\n    </div>\n    <section>\n      <p class=\"summary\">\n        Order Amount\n        <span class=\"item\">₹ {{ orderDetails?.orderAmount }} </span>\n      </p>\n      <p class=\"summary\">\n        Discounted Amount\n        <span class=\"item\">₹ {{ orderDetails?.discountedAmount }} </span>\n      </p>\n      <p class=\"summary\">\n        Delivery Charge\n        <span class=\"item\">₹ {{ orderDetails?.deliveryCharge }} </span>\n      </p>\n      <p class=\"summary\">\n        Final Price\n        <span class=\"item\">₹ {{ orderDetails?.finalPrice }} </span>\n      </p>\n      <p class=\"summary\">\n        Payment Type\n        <span class=\"item\"> {{ orderDetails?.paymentType }} </span>\n      </p>\n    </section>\n    <div class=\"logs-heading\">\n      <hr />\n      <h1 class=\"title-main\">Product Details</h1>\n      <div class=\"product-list\">\n        <app-product-detail-card\n          [productId]=\"item.productId\"\n          [productName]=\"item.productName\"\n          [productDescription]=\"item.productDescription\"\n          [productIcon]=\"item.productIcon\"\n          [productQuantity]=\"item.productStock\"\n          [productPrice]=\"item.productPrice\"\n          [discountPercent]=\"item.discountPercent\"\n          *ngFor=\"let item of orderDetails?.products\"\n        ></app-product-detail-card>\n      </div>\n    </div>\n\n    <!-- </div> -->\n    <br />\n    <div class=\"actions\">\n      <button class=\"back-btn\" (click)=\"goBack()\">Back</button>\n      <button\n        class=\"secondary-btn\"\n        [routerLink]=\"['/products/delivery', orderId]\"\n      >\n        Delivery History\n      </button>\n      <button\n        class=\"cancel-btn\"\n        (click)=\"cancelOrder()\"\n        *ngIf=\"checkIfCancellable()\"\n      >\n        <span\n          *ngIf=\"loadingService.loading\"\n          class=\"spinner-border spinner-border-sm\"\n        ></span>\n        Cancel Order\n      </button>\n    </div>\n  </div>\n</div>\n<app-order-cancel-modal></app-order-cancel-modal>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-05 01:34:28\n * @modify date 2021-02-05 01:34:28\n * @desc [description]\n */\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-detail-card',\n  templateUrl: './product-detail-card.component.html',\n  styleUrls: ['./product-detail-card.component.scss'],\n})\nexport class ProductDetailCardComponent implements OnInit {\n  @Input()\n  productId;\n  @Input()\n  productName;\n  @Input()\n  productDescription;\n  @Input()\n  productIcon;\n  @Input()\n  productPrice;\n  @Input()\n  productQuantity;\n  @Input()\n  discountPercent;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  discountPrice(): number {\n    return this.discountPercent <= 0\n      ? this.productPrice\n      : this.productPrice - this.productPrice * 0.01 * this.discountPercent;\n  }\n}\n","<div class=\"product-item\">\n  <img\n    [src]=\"productIcon\"\n    [alt]=\"productName\"\n    (error)=\"$event.target.src = '^assets/images/celebration2.jpg'\"\n    class=\"product-img\"\n  />\n  <div class=\"product-details\">\n    <div class=\"product-data\">\n      <p class=\"product-name\">\n        {{ productName }}\n        <img\n          class=\"detail\"\n          [routerLink]=\"['/products', productId]\"\n          src=\"assets/images/info.svg\"\n          alt=\"\"\n        />\n      </p>\n      <p class=\"product-description\">{{ productDescription }}</p>\n    </div>\n    <div class=\"product-quantity\">\n      <img src=\"assets/images/basket.svg\" alt=\"\" />\n      <span> {{ productQuantity }} </span>\n    </div>\n    <div class=\"product-price\">\n      ₹ {{ discountPrice() }}\n      <span class=\"strike\" *ngIf=\"discountPercent > 0\"\n        >₹ {{ productPrice }}\n      </span>\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.scss'],\n})\nexport class OrderDetailsComponent implements OnInit {\n  id: number;\n  products;\n  constructor(private orderservice: OrderService, private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.getOrderByOrderId();\n  }\n\n  getOrderByOrderId() {\n    this.id = parseInt(sessionStorage.getItem('id'));\n    this.orderservice.fetchById(this.id).subscribe((data) => {\n      this.products = data;\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"container-xl\">\n  <div class=\"table-responsive\">\n      <div class=\"table-wrapper\">\n          <div class=\"table-title\">\n              <div class=\"row\">\n                  <div class=\"col-sm-4\">\n                      <h2>Order <b>Details</b></h2>\n                  </div>\n              </div>\n          </div>\n          <table class=\"table table-striped text-center\">\n              <thead>\n                  <tr>\n                      <th scope=\"col\" style=\"color: #566787;\">#</th>\n                      <th scope=\"col\" style=\"color: #566787;\">productId</th>\n                      <th scope=\"col\" style=\"color: #566787;\">productName</th>\n                      <th scope=\"col\" style=\"color: #566787;\">productDescription</th>\n                      <th scope=\"col\" style=\"color: #566787;\">productIcon</th>\n                      <th scope=\"col\" style=\"color: #566787;\">productCategory</th>\n                      <th scope=\"col\" style=\"color: #566787;\">productStock</th>\t\n                  </tr>\n              </thead>\n              <tbody>\n                  \n                  <tr *ngFor=\"let product of products?.products\">\n                      <td>{{product.productInOrderId}}</td>\n                      <td>{{product.productId}}</td>\n                      <td>{{product.productName}}</td>  \n                      <td>{{product.productDescription}}</td> \n                      <img src={{product.productIcon}} alt=\"\" width=\"100\" class=\"img-fluid rounded shadow-sm\">\n                      <td>{{product.productCategory}}</td>\n                      <td>{{product.productStock}}</td>\n                      <!-- <td><button routerLink=\"/orderdetail\" style=\"background-color:  #fb5a69; border-radius: 5%;\">Order Details</button></td> -->\n                      <td><a (click)=\"goBack()\"><i class=\"fa fa-table\"></i>Back To Order Page</a></td>\n                  </tr> \n              </tbody>\n          </table>\n      </div>\n  </div>        \n</div>  ","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-07 11:07:12\n * @modify date 2021-02-07 11:07:12\n * @desc [description]\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { take } from 'rxjs/operators';\nimport { Order } from 'src/app/models/order.model';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-history-new',\n  templateUrl: './order-history-new.component.html',\n  styleUrls: ['./order-history-new.component.scss'],\n})\nexport class OrderHistoryNewComponent implements OnInit {\n  orderHistory: Order[] = [];\n  dataSource = new MatTableDataSource<Order>();\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // Specify columns tht should be rendered, must match names of matColumnDef\n  // ID is not beign displayed as its not present here\n  displayedColumns: string[] = [\n    'orderId',\n    'buyerName',\n    'finalPrice',\n    'orderStatus',\n    'details',\n    'history',\n  ];\n\n  constructor(\n    private location: Location,\n    public loadingService: LoadingService,\n    private orderService: OrderService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchAllOrders();\n  }\n\n  fetchAllOrders(): void {\n    this.orderService\n      .fetchByLoggedInUserId()\n      .pipe(take(1))\n      .subscribe({\n        next: (res: Order[]) => {\n          this.dataSource.data = res.reverse();\n          this.orderHistory = res;\n        }\n      });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  fetchColor(status: string): string {\n    switch (status) {\n      case 'DELIVERED':\n        return 'green';\n      case 'CANCELLED':\n        return 'red';\n      default:\n        return '#1f9db9';\n    }\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-4 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <h1 class=\"title-main\">My Order History</h1>\n        <hr />\n      </div>\n      <div class=\"section-empty\" *ngIf=\"orderHistory.length === 0\">\n        Its Seems Empty Around Here, Lets start by adding few items in the cart.\n        <button class=\"primary-btn\" [routerLink]=\"['/']\">Show Catalog</button>\n      </div>\n      <div class=\"section-table\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"orderId\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Order ID</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"product-id\">\n              #<span> {{ element.orderId }} </span> \n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"buyerName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Contact</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"contact\">\n              <p class=\"name\">{{ element.buyerName }}</p>\n              <p class=\"phone\">{{ element.buyerPhone }}</p>\n              <p class=\"email\">{{ element.buyerEmail }}</p>\n              <p class=\"address\">{{ element.buyerAddress }}</p>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"finalPrice\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"price\">\n              ₹ <span>{{ element.finalPrice }}</span>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"orderStatus\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"delivery\">\n              <span [ngStyle]=\"{color: fetchColor(element.orderStatus)}\">{{ element.orderStatus }}</span>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"details\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Details</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-icon\">\n              <img\n                [routerLink]=\"['/products/orders', element.orderId]\"\n                src=\"assets/images/info.svg\"\n                alt=\"\"\n              />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"history\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              Track Delivery\n            </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-icon\">\n              <img\n                [routerLink]=\"['/products/delivery', element.orderId]\"\n                src=\"assets/images/package_track.svg\"\n                alt=\"\"\n              />\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 20]\"\n          showFirstLastButtons\n          [pageSize]=\"5\"\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { OrderService } from 'src/app/services/order.service';\n\ndeclare global {\n  interface Window {\n    StripeCheckout: any;\n  }\n}\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.scss'],\n})\nexport class OrderHistoryComponent implements OnInit {\n  orderId1: number;\n  order;\n\n  constructor(\n    private orderservice: OrderService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  onSave(orderId: number) {\n    this.orderId1 = orderId;\n    sessionStorage.setItem('id', orderId.toString());\n    this.router.navigate(['/products/orders', this.orderId1]);\n  }\n\n  getOrders() {\n    this.orderservice.fetchOrder().subscribe((data: Object[]) => {\n      this.order = data.filter((o) => o['userId'] === this.authService.fetchFromSessionStorage()?.userId);\n    });\n  }\n}\n","<p></p>\n\n<!-- <button (click)=\"pay(22)\">Pay 2r</button> -->\n<!-- <form>\n  <input type=\"text\" placeholder=\"Credit Card #\" name=\"cardNumber\">\n  <input type=\"text\" placeholder=\"Expiration Month\" name=\"expMonth\">\n  <input type=\"text\" placeholder=\"Expiration Year\" name=\"expYear\">\n  <input type=\"text\" placeholder=\"CVC\" name=\"cvc\">\n  <button (click)=\"chargeCreditCard()\">Submit</button>\n</form> -->\n\n<body>\n  <div class=\"container-xl,bg\">\n    <div class=\"table-responsive\">\n      <div class=\"table-wrapper\">\n        <div class=\"table-title\">\n          <div class=\"row\">\n            <div class=\"col-sm-4\">\n              <h2>Order's <b>Page</b></h2>\n            </div>\n          </div>\n        </div>\n        <table class=\"table table-striped text-center\">\n          <thead>\n            <tr>\n              <th scope=\"col\" style=\"color: #566787\">#</th>\n              <!-- <th scope=\"col\" style=\"color: #566787\">Customer Email</th> -->\n              <th scope=\"col\" style=\"color: #566787\">Customer Name</th>\n              <th scope=\"col\" style=\"color: #566787\">Customer Phone</th>\n              <th scope=\"col\" style=\"color: #566787\">Customer Address</th>\n              <!-- <th scope=\"col\" style=\"color: #566787\">Location</th>\n              <th scope=\"col\" style=\"color: #566787\">City</th>\n              <th scope=\"col\" style=\"color: #566787\">Pincode</th> -->\n              <th scope=\"col\" style=\"color: #566787\">Net Amount</th>\n              <th scope=\"col\" style=\"color: #566787\">Order Status</th>\n              <th scope=\"col\" style=\"color: #566787\">Payment TYpe</th>\n              <!-- <th scope=\"col\" style=\"color: #566787\">Payment Id</th>\n              <th scope=\"col\" style=\"color: #566787\">User Id</th> -->\n              <th scope=\"col\" style=\"color: #566787\">Action</th>\n              <th scope=\"col\" style=\"color: #566787\">Delivery</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let orders of order\">\n              <td>{{ orders.orderId }}</td>\n              <!-- <td>{{ orders.buyerEmail }}</td> -->\n              <td>{{ orders.buyerName }}</td>\n              <td>{{ orders.buyerPhone }}</td>\n              <td>{{ orders.buyerAddress }}</td>\n              <!-- <td>{{ orders.buyerState }}</td>\n              <td>{{ orders.buyerCity }}</td>\n              <td>{{ orders.buyerPincode }}</td> -->\n              <td>{{ orders.orderAmount }}</td>\n              <td>{{ orders.orderStatus }}</td>\n              <td>{{ orders.paymentType }}</td>\n              <!-- <td>{{ orders.paymentId }}</td>\n              <td>{{ orders.userId }}</td> -->\n              <td><button [routerLink]=\"['/products/orders', orders.orderId]\" >Details</button></td>\n              <td><button [routerLink]=\"['/products/delivery', orders.orderId]\" >Delivery</button></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>orders works!</p>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 13:56:07\n * @modify date 2021-01-25 13:56:07\n * @desc Product Details\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Item } from 'src/app/models/item.model';\nimport { Product } from 'src/app/models/product.model';\nimport { AuthModalService } from 'src/app/services/auth-modal.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartConfirmModalService } from 'src/app/services/cart-confirm-modal.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss'],\n})\nexport class ProductDetailsComponent implements OnInit {\n  count = 1;\n  productId;\n  product: Product = null;\n\n  constructor(\n    public loadingService: LoadingService,\n    private router: Router,\n    private location: Location,\n    private productService: ProductService,\n    private route: ActivatedRoute,\n    public eventService: EventService,\n    private authService: AuthService,\n    private authModalService: AuthModalService,\n    private cartService: CartService,\n    private cartModal: CartConfirmModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.productId = this.route.snapshot.paramMap.get('productId');\n    this.initializeProductDetails();\n  }\n\n  initializeProductDetails() {\n    this.productService.fetchById(this.productId).subscribe((res: Product) => {\n      this.product = res;\n    }).closed;\n  }\n\n  increment() {\n    if (this.count >= this.product.productStock)\n      this.count = this.product.productStock;\n    else this.count++;\n  }\n  decrement() {\n    if (this.count <= 1) this.count = 1;\n    else this.count--;\n  }\n\n  addNewItem(productId) {\n    const item: Item = {\n      productId,\n      quantity: this.count,\n    };\n\n    if (this.checkForAuthAndShowPopUp()) {\n      this.loadingService.enableLoading();\n      this.cartService.addToCart(item).subscribe((res) => {\n        this.loadingService.disableLoading();\n        this.cartModal.open();\n        this.router.navigateByUrl('/');\n      });\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  redirectToCategory() {\n    this.eventService.categoryChanged.next(this.product.categoryName);\n    this.router.navigateByUrl('/');\n  }\n\n  checkForAuthAndShowPopUp() {\n    if (this.authService.isAuthenticated()) return true;\n    this.authModalService.open(this.router.url);\n    return false;\n  }\n\n  \n  badgeColor() {\n    if (this.product?.discountPercent <= 10) return '#FFCE03';\n    else if (this.product?.discountPercent <= 20) return '#FD9A01';\n    else if (this.product?.discountPercent <= 30) return '#FD6104';\n    else if (this.product?.discountPercent <= 40) return '#FF2C05';\n    else return '#F00505';\n  }\n\n  reducedPrice() {\n    if (this.product?.discountPercent === 0) return this.product?.productPrice;\n    return this.product?.productPrice - this.product?.productPrice * 0.01 * this.product?.discountPercent;\n  }\n}\n","<div class=\"root\">\n  <div\n    class=\"background\"\n    [ngStyle]=\"{\n      'background-image':\n        'url(' +\n        product?.productIcon +\n        '), url(assets/images/celebration2.jpg)'\n    }\"\n  ></div>\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div\n          class=\"col-6 front-img\"\n          [ngStyle]=\"{\n            'background-image':\n              'url(' +\n              product?.productIcon +\n              '), url(assets/images/celebration2.jpg)'\n          }\"\n        ></div>\n        <div class=\"col-6 section-product\">\n          <div class=\"p-5\">\n            <div class=\"section-back\" (click)=\"goBack()\">\n              <img class=\"back-img\" src=\"assets/images/back.svg\" alt=\"\" />\n              <span class=\"back-text\">Back to Products</span>\n            </div>\n            <nav aria-label=\"breadcrumb\">\n              <ol class=\"breadcrumb\">\n                <li class=\"breadcrumb-item\">\n                  <a [routerLink]=\"['/']\">Home</a>\n                </li>\n                <li class=\"breadcrumb-item\" (click)=\"redirectToCategory()\">\n                  <a> {{ product?.categoryName }} </a>\n                </li>\n                <li class=\"breadcrumb-item active\" aria-current=\"page\">\n                  {{ product?.productName }}\n                </li>\n              </ol>\n            </nav>\n            <h1 class=\"product-title\">\n              {{ product?.productName }}\n              <span\n                class=\"badge\"\n                *ngIf=\"product?.discountPercent > 0\"\n                [ngStyle]=\"{ backgroundColor: badgeColor() }\"\n              >\n                -{{ product?.discountPercent }}%\n              </span>\n            </h1>\n            <h2 class=\"product-price\">\n              ₹ {{ reducedPrice() }}\n              <span class=\"reduced\">₹ {{ product?.productPrice }}</span> \n            </h2>\n            <p class=\"product-description\">\n              {{ product?.productDescription }}\n            </p>\n            <div class=\"quantity\">\n              <button class=\"quantity-btn-left\" (click)=\"decrement()\">-</button>\n              <input\n                class=\"quantity-input\"\n                type=\"number\"\n                placeholder=\"1\"\n                [(ngModel)]=\"count\"\n                onkeydown=\"return false\"\n              />\n              <button class=\"quantity-btn-right\" (click)=\"increment()\">\n                +\n              </button>\n              <p class=\"quantity-stock\">\n                Available Stock: {{ product?.productStock }}\n              </p>\n            </div>\n            <div class=\"cart-buttons\">\n              <button class=\"primary-btn\" (click)=\"addNewItem(product.productId)\">\n                <span\n                  *ngIf=\"loadingService.loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Add to Cart\n              </button>\n              <button class=\"secondary-btn\" [routerLink]=\"['/products/cart']\">\n                View Cart\n              </button>\n            </div>\n            <br><br><br>\n            <!-- <button class=\"checkout-btn\" [routerLink]=\"['/products/cart']\">Checkout</button> <br /> -->\n            <div class=\"section-info\" (click)=\"redirectToCategory()\">\n              <img class=\"info-img\" src=\"assets/images/search.svg\" alt=\"\" />\n              <span class=\"info-text\">Search for similar products</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-31 19:55:12\n * @modify date 2021-01-31 19:55:12\n * @desc [description]\n */\nimport { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { Category } from 'src/app/models/category.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { EventService } from 'src/app/services/event.service';\n\n@Component({\n  selector: 'app-category-carausel',\n  templateUrl: './category-carausel.component.html',\n  styleUrls: ['./category-carausel.component.scss'],\n})\nexport class CategoryCarauselComponent implements OnInit {\n  categories: Category[] = [];\n  constructor(\n    private categoryService: CategoryService,\n    private eventService: EventService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchCategories();\n  }\n\n  fetchCategories() {\n    this.categoryService\n      .fetchAllCategories()\n      .pipe(take(1))\n      .subscribe((res: Category[]) => (this.categories = res));\n  }\n\n  triggerCategoryChange(categoryName) {\n    this.eventService.categoryChanged.next(categoryName);\n  }\n}\n","<div\n  id=\"carouselExampleInterval\"\n  class=\"carousel slide carousel-fade\"\n  data-ride=\"carousel\"\n>\n  <div class=\"carousel-inner\">\n    <div\n      [ngClass]=\"i == 0 ? 'active' : ''\"\n      class=\"carousel-item\"\n      data-interval=\"2000\"\n      [attr.data-slide-to]=\"i + 1\"\n      *ngFor=\"let category of categories; let i = index\"\n      (click)=\"triggerCategoryChange(category.categoryName)\"\n    >\n      <img [src]=\"category.categoryImageUrl\" class=\"d-block\" alt=\"...\" />\n      <div class=\"carousel-caption d-none d-md-block\">\n        <h5>{{ category.categoryName }}</h5>\n        <p>{{ category.categoryDescription }}</p>\n      </div>\n    </div>\n  </div>\n  <a\n    class=\"carousel-control-prev\"\n    href=\"#carouselExampleInterval\"\n    role=\"button\"\n    data-slide=\"prev\"\n  >\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Previous</span>\n  </a>\n  <a\n    class=\"carousel-control-next\"\n    href=\"#carouselExampleInterval\"\n    role=\"button\"\n    data-slide=\"next\"\n  >\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Next</span>\n  </a>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-24 01:56:50\n * @modify date 2021-01-24 01:56:50\n * @desc [description]\n */\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.scss'],\n})\nexport class ProductCardComponent implements OnInit {\n  @Input()\n  productName;\n  @Input()\n  productDescription;\n  @Input()\n  productImageUrl;\n  @Input()\n  productPrice;\n  @Input()\n  productId;\n  @Input()\n  productStatus;\n  @Input()\n  productQuantity;\n  @Input()\n  discountPercent = 50;\n  @Output()\n  addToCartEvent = new EventEmitter<string>();\n\n  constructor(public loadingService: LoadingService) {}\n\n  ngOnInit(): void {}\n\n  addNewItem(productId) {\n    this.addToCartEvent.emit(productId);\n  }\n\n  isProductAvailable(): boolean {\n    return this.productStatus !== 'ENABLED' || this.productQuantity <= 0;\n  }\n\n  badgeColor() {\n    if (this.discountPercent <= 10) return '#FFCE03';\n    else if (this.discountPercent <= 20) return '#FD9A01';\n    else if (this.discountPercent <= 30) return '#FD6104';\n    else if (this.discountPercent <= 40) return '#FF2C05';\n    else return '#F00505';\n  }\n\n  reducedPrice() {\n    if (this.discountPercent === 0) return this.productPrice;\n    return this.productPrice - this.productPrice * 0.01 * this.discountPercent;\n  }\n}\n","<div class=\"img-container\">\n  <div\n    class=\"overlay\"\n    [ngStyle]=\"{ visibility: isProductAvailable() ? 'hidden' : 'visible' }\"\n  >\n    <button class=\"details\" [routerLink]=\"['/products/', productId]\">\n      Details\n    </button>\n    <button class=\"add\" (click)=\"addNewItem(productId)\">\n      <span\n        *ngIf=\"loadingService.loading\"\n        class=\"spinner-border spinner-border-sm\"\n      ></span>\n\n      Add to Cart\n    </button>\n  </div>\n  <img\n    class=\"product-img\"\n    [src]=\"productImageUrl\"\n    [alt]=\"productName\"\n    (error)=\"$event.target.src = 'assets/images/celebration2.jpg'\"\n    [ngStyle]=\"{ filter: isProductAvailable() ? 'blur(4px)' : '0' }\"\n  />\n  <!-- Display if Product disabled / quantity 0 -->\n  <div *ngIf=\"isProductAvailable()\" class=\"product-img-sold\"></div>\n</div>\n<div class=\"product-body\">\n  <h1 class=\"product-name\">\n    {{ productName }}\n    <span\n      class=\"badge\"\n      *ngIf=\"discountPercent > 0\"\n      [ngStyle]=\"{ backgroundColor: badgeColor() }\"\n    >\n      - {{ discountPercent }}%\n    </span>\n  </h1>\n  <p class=\"product-description\">{{ productDescription }}</p>\n  <hr />\n  <p class=\"product-price\">\n    ₹ {{ reducedPrice() }} <span class=\"reduced\">₹ {{ productPrice }}</span> \n  </p>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-24 01:57:04\n * @modify date 2021-01-24 01:57:04\n * @desc [description]\n */\nimport { HostListener } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { Product } from 'src/app/models/product.model';\nimport { AuthModalService } from 'src/app/services/auth-modal.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartConfirmModalService } from 'src/app/services/cart-confirm-modal.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss'],\n})\nexport class ProductListComponent implements OnInit {\n  productList: Product[] = [];\n  activeCategory = null;\n  productQuery = null;\n  page = 0;\n  sortByTypes = [\n    { name: 'Name - ASC', sortBy: 'productName', direction: 'ASC' },\n    { name: 'Name - DESC', sortBy: 'productName', direction: 'DESC' },\n    { name: 'Category - ASC', sortBy: 'productCategory_categoryName', direction: 'ASC' },\n    { name: 'Category - DESC', sortBy: 'productCategory_categoryName', direction: 'DESC' },\n    { name: 'Price High - Low', sortBy: 'productPrice', direction: 'DESC' },\n    { name: 'Price Low - High', sortBy: 'productPrice', direction: 'ASC' },\n    { name: 'Discount High - Low', sortBy: 'discountPercent', direction: 'DESC' },\n    { name: 'Discount Low - High', sortBy: 'discountPercent', direction: 'ASC' },\n  ];\n  activeSortType = this.sortByTypes[0];\n  sortTypeChanged;\n\n  constructor(\n    public loadingService: LoadingService,\n    private eventService: EventService,\n    private productService: ProductService,\n    private modalService: AuthModalService,\n    private authService: AuthService,\n    private router: Router,\n    private cartService: CartService,\n    private cartConfirmModal: CartConfirmModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.page = 0;\n    this.initProducts();\n    this.subscribeToCategories();\n    this.subscribeToSearchQuery();\n  }\n\n  initProducts() {\n    this.fetchAllByPage();\n  }\n\n  // Fetch from server\n  fetchAll() {\n    this.loadingService.enableLoading();\n    this.productService.fetchAllProducts().subscribe((res: Product[]) => {\n      this.productList = res;\n      this.loadingService.disableLoading();\n    }).closed;\n  }\n\n  // Reset all search queries\n  resetAll() {\n    this.activeSortType = this.sortByTypes[0];\n    this.eventService.categoryChanged.next(null);\n    this.eventService.searchQueryChanged.next(null);\n    this.productQuery = null;\n    this.productList = null;\n    this.activeCategory = null;\n    this.page = 0;\n    this.fetchAllByPage();\n  }\n\n  addToCart(itemId) {\n    let item = {\n      productId: itemId,\n      quantity: 1,\n    };\n    if (this.checkForAuthAndShowPopUp()) {\n      this.loadingService.enableLoading();\n      this.cartService.addToCart(item).subscribe((res) => {\n        this.cartConfirmModal.open();\n        this.loadingService.disableLoading();\n      });\n    }\n  }\n  checkForAuthAndShowPopUp() {\n    if (this.authService.isAuthenticated()) return true;\n    this.modalService.open(this.router.url);\n    return false;\n  }\n\n  // Subbscribe to search\n  subscribeToSearchQuery() {\n    this.eventService.searchQueryChanged.subscribe((query) => {\n      this.loadingService.enableLoading();\n      // Fetch and unsubscribe\n      if (!query) {\n        // this.page = 0;\n        // this.fetchAllByPage();\n      } else\n        this.productService.findByName(query).subscribe((res: Product[]) => {\n          this.productQuery = query;\n          this.activeCategory = null;\n          this.productList = res;\n          this.loadingService.disableLoading();\n        });\n    });\n  }\n\n  // Category change subscription\n  subscribeToCategories() {\n    this.eventService.categoryChanged.subscribe((category) => {\n      this.loadingService.enableLoading();\n      // Reset previous cateogry\n      this.activeCategory = null;\n      this.productQuery = null;\n      if (!category) {\n        // this.page = 0;\n        // this.fetchAllByPage();\n      } else\n        this.productService\n          .findByCategory(category)\n          .pipe(take(1))\n          .subscribe((res: Product[]) => {\n            this.productQuery = null;\n            this.activeCategory = category;\n            this.productList = res;\n            this.loadingService.disableLoading();\n          });\n    });\n  }\n\n  previousScrollValue = 0;\n\n  @HostListener('window:scroll', ['$event.target']) // for window scroll events\n  onScroll(event) {\n    if (\n      window.innerHeight + window.scrollY >= (document.body.scrollHeight-100) &&\n      !this.activeCategory &&\n      !this.productQuery &&\n      this.previousScrollValue !== window.innerHeight + window.scrollY\n    ) {\n      this.previousScrollValue = window.innerHeight + window.scrollY;\n      this.page++;\n      this.fetchAllByPage();\n    }\n  }\n\n  fetchAllByPage() {\n    this.loadingService.enableLoading();\n    this.productService\n      .fetchAllByPaging(this.page, this.activeSortType.sortBy, this.activeSortType.direction)\n      // .pipe(take(1))\n      .subscribe((res: Product[]) => {        \n        if (!this.activeCategory && !this.productQuery)\n          if (\n            this.productList &&\n            JSON.stringify(\n              this.productList.slice(Math.max(this.productList.length - 10, 0))\n            ) != JSON.stringify(res) &&\n            !this.sortTypeChanged\n          )\n            // Paging works when category and search are null\n            this.productList.push(...res);\n          else {\n            this.sortTypeChanged = undefined;\n            this.productList = res;\n          }\n        this.loadingService.disableLoading();\n        \n      });\n  }\n\n  onChangeSorting(item) {\n    this.sortTypeChanged = 1;\n    this.activeSortType = item;\n    this.page = 0;\n    this.fetchAllByPage();\n  }\n}\n","<div class=\"parent\">\n  <div class=\"section-category-carausel\" *ngIf=\"(!this.activeCategory && !this.productQuery)\">\n    <app-category-carausel></app-category-carausel>\n  </div>\n  <!-- Displyed when no category is selected -->\n  <div class=\"category\" *ngIf=\"!activeCategory && !productQuery\">\n    All Products\n    <div class=\"dropdown\">\n      <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        {{ activeSortType?.name }}\n      </button>\n      <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" >\n        <a *ngFor=\"let types of sortByTypes\" class=\"dropdown-item\" (click)=\"onChangeSorting(types)\"> {{ types.name }} </a>\n      </div>\n    </div>\n    <span *ngIf=\"loadingService.loading\" class=\"spinner-grow\"></span>\n  </div>\n  <!-- Displayed when we pecify a cateogy -->\n  <div class=\"category\" *ngIf=\"!productQuery && activeCategory\">\n    {{ activeCategory }}\n    <img\n      *ngIf=\"activeCategory !== null\"\n      (click)=\"resetAll()\"\n      class=\"category-icon\"\n      data-toggle=\"tooltip\"\n      data-placement=\"right\"\n      title=\"Show all categories\"\n      src=\"assets/images/x-circle.svg\"\n      alt=\"\"\n    />\n    <span *ngIf=\"loadingService.loading\" class=\"spinner-grow\"></span>\n  </div>\n  <!-- Displayed when we enter a seacrh criteria -->\n  <div class=\"category\" *ngIf=\"!activeCategory && productQuery\">\n    {{ \"Search: \" + productQuery }}\n    <img\n      (click)=\"resetAll()\"\n      class=\"category-icon\"\n      data-toggle=\"tooltip\"\n      data-placement=\"right\"\n      title=\"Show all categories\"\n      src=\"assets/images/x-circle.svg\"\n      alt=\"\"\n    />\n    <span *ngIf=\"loadingService.loading\" class=\"spinner-grow\"></span>\n  </div>\n  <app-product-card\n    class=\"product-card\"\n    *ngFor=\"let item of productList\"\n    [productId]=\"item.productId\"\n    [productName]=\"item.productName\"\n    [productPrice]=\"item.productPrice\"\n    [productImageUrl]=\"item.productIcon\"\n    [productDescription]=\"item.productDescription\"\n    [productStatus]=\"item.productStatus\"\n    [productQuantity]=\"item.productStock\"\n    [discountPercent]=\"item.discountPercent\"\n    (addToCartEvent)=\"addToCart($event)\"\n  ></app-product-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"allButFooter\">\n  <app-navigation></app-navigation>\n  <!-- <div class=\"backdrop\"></div> -->\n  <div class=\"backdrop\"></div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-cart-confirm-modal></app-cart-confirm-modal>\n<app-footer></app-footer>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Item } from 'src/app/models/item.model';\nimport { Product } from 'src/app/models/product.model';\nimport { UserDetails } from 'src/app/models/user-details.model';\nimport { AuthModalService } from 'src/app/services/auth-modal.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartConfirmModalService } from 'src/app/services/cart-confirm-modal.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.scss'],\n})\nexport class ViewProfileComponent implements OnInit {\n  user: UserDetails;\n\n  constructor(\n    public loadingService: LoadingService,\n    private router: Router,\n    private location: Location,\n    private route: ActivatedRoute,\n    public eventService: EventService,\n    private authService: AuthService,\n    private authModalService: AuthModalService,\n    private manageUserService: ManageUserService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchUserDetails();\n  }\n  fetchUserDetails() {\n    this.manageUserService\n      .fetchById(this.authService.fetchFromSessionStorage().userId)\n      .subscribe((res: UserDetails) => {\n        this.user = res;\n      });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"root\">\n  <div\n    class=\"background\"\n    [ngStyle]=\"{\n      'background-image': 'url(assets/images/celebration2.jpg)'\n    }\"\n  ></div>\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div\n          class=\"col-6 front-img\"\n          [ngStyle]=\"{\n            'background-image': 'url(assets/images/celebration2.jpg)'\n          }\"\n        ></div>\n        <div class=\"col-6 section-user\">\n          <div class=\"p-5\">\n            <div class=\"section-back\" (click)=\"goBack()\">\n              <img class=\"back-img\" src=\"assets/images/back.svg\" alt=\"\" />\n              <span class=\"back-text\">Back</span>\n            </div>\n            <div class=\"profile-data\">\n              <div class=\"section-userinfo\">\n                <hr />\n                <p class=\"summary name\">\n                  {{ user?.firstName + \" \" + user?.lastName }}\n                  <img\n                    class=\"edit\"\n                    [routerLink]=\"['/products/editprofile']\"\n                    src=\"assets/images/edit.svg\"\n                    alt=\"\"\n                  />\n                </p>\n                <p class=\"summary\">\n                  User #<span class=\"item\">{{ user?.userId }} </span>\n                </p>\n\n                <p class=\"summary\">\n                  Phone No <span class=\"item\">{{ user?.phoneNo }} </span>\n                </p>\n                <p class=\"summary\">\n                  Email <span class=\"item\">{{ user?.emailId }} </span>\n                </p>\n              </div>\n              <div class=\"section-address\">\n                <hr />\n                <p class=\"address\">Address</p>\n                <p class=\"summary\">{{ user?.address?.area }},</p>\n                <p class=\"summary\">{{ user?.address?.city }},</p>\n                <p class=\"summary\">{{ user?.address?.state }},</p>\n                <p class=\"summary\">\n                  {{ user?.address?.pincode }}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-29 14:12:31\n * @modify date 2021-01-29 14:12:31\n * @desc Prevents logged in user from accessing Auth pages\n */\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthAccessGuard implements CanActivate {\n  constructor(private authServie: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authServie.isAuthenticated()) {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthModalService } from '../services/auth-modal.service';\nimport { AuthService } from '../services/auth.service';\nimport { EventService } from '../services/event.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authServie: AuthService,\n    private router: Router,\n    private modalAuthService: AuthModalService,\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (!this.authServie.isAuthenticated()) {\n      this.modalAuthService.open(state.url);\n      // this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n      return false;\n    }\n    return true;\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 14:49:14\n * @modify date 2021-01-25 14:49:14\n * @desc [description]\n */\nimport { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccessDeniedModalService } from '../services/access-denied-modal.service';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoleGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private accessDeniedModal: AccessDeniedModalService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.checkUserLogin(route, state.url);\n  }\n\n  checkUserLogin(route: ActivatedRouteSnapshot, url: any): boolean {\n    if (this.authService.isAuthenticated()) {\n      const userRole = this.authService.getRole();\n      if (route.data.role && route.data.role.indexOf(userRole) === -1) {\n        // this.router.navigate(['/403']);\n        this.accessDeniedModal.open();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-30 19:33:05\n * @modify date 2021-01-30 19:33:05\n * @desc [description]\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule, // Required for Sorting table\n    MatPaginatorModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n  ],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule, // Required for Sorting table\n    MatPaginatorModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n  ],\n})\nexport class MaterialCustomModule { }\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-27 00:58:38\n * @modify date 2021-01-27 00:58:38\n * @desc [description]\n */\nexport class Address {\n  addressId: number;\n  city: string;\n  state: string;\n  area: string;\n  pincode: string;\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-27 00:58:47\n * @modify date 2021-01-27 00:58:47\n * @desc [description]\n */\nimport { ProductInOrder } from './product-in-order.model';\n\nexport class Cart {\n  cartId: number;\n  products: ProductInOrder[];\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 10:14:28\n * @modify date 2021-01-25 10:14:28\n * @desc [description]\n */\nexport class Category {\n  categoryId: number;\n  categoryName: string;\n  categoryDescription: string;\n  categoryImageUrl: string;\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-26 01:05:49\n * @modify date 2021-01-26 01:05:49\n * @desc [description]\n */\nexport enum OrderStatus {\n  DISPATCHED = 'Dispatched',\n  OUT_FOR_DELIVERY = 'Out for Deliver',\n  DELIVERED = 'Delivered',\n  NEW = 'Order Created',\n  CANCELLED = 'Order Cancelled'\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-05 19:00:47\n * @modify date 2021-02-05 19:00:47\n * @desc [description]\n */\nexport enum ProductStatus {\n  ENABLED = 'Enabled',\n  DISABLED = 'Disabled',\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 11:25:56\n * @modify date 2021-01-25 11:25:56\n * @desc [description]\n */\nexport class Product {\n  categoryId: number;\n  categoryName: string;\n  productDescription: string;\n  productIcon: string;\n  productId: number;\n  productName: string;\n  productPrice: number;\n  productStatus: string;\n  productStock: number;\n  discountPercent: number;\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-28 12:53:14\n * @modify date 2021-01-28 12:53:14\n * @desc [description]\n */\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, ErrorHandler } from '@angular/core';\nimport { GlobalErrorModalService } from '../services/global-error-modal.service';\nimport { LoadingService } from '../services/loading.service';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(\n    private modalService: GlobalErrorModalService,\n    private loadingService: LoadingService\n  ) {}\n\n  handleError(error: Error) {\n    this.loadingService.disableLoading();\n    // Only shows error which are not related to http\n    if (!(error instanceof HttpErrorResponse)) this.modalService.open(error);\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-28 12:54:38\n * @modify date 2021-01-28 12:54:38\n * @desc [description]\n */\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { GlobalErrorModalService } from '../services/global-error-modal.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private modalService: GlobalErrorModalService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error?.error?.message !== 'FieldException') // Ignore for Validation error\n          this.handleErrorResponse(error);\n        return throwError(error);\n      })\n    );\n  }\n\n  handleErrorResponse(error: HttpErrorResponse) {\n    if (error instanceof HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        console.error('Error Event');\n      } else {\n        switch (error.status) {\n          case 404:\n            this.modalService.open('Error 404: Service not ready');\n            break;\n          case 403:\n            this.modalService.open('Error 403: Access Denied');\n            break;\n          case 500:\n            this.modalService.open(\n              \"Error 500: Server couldn't process the request, Retry\"\n            );\n            break;\n          default:\n            this.modalService.open(`Error ${error.status} Something went wrong while connecting to server`)\n        }\n      }\n    } else {\n      console.error('some thing else happened');\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { ErrorHandler } from \"@angular/core\";\nimport { JWT_OPTIONS } from \"@auth0/angular-jwt\";\nimport { GlobalErrorHandler } from \"./global-error-handler\";\nimport { HttpErrorInterceptor } from \"./http-error.interceptor\";\nimport { JwtTokenInterceptor } from \"./jwt-token.interceptor\";\n\n/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-21 13:16:20\n * @modify date 2021-01-21 13:16:20\n * @desc [description]\n */\nexport const httpInterceptors = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtTokenInterceptor,\n    multi: true,\n  },\n  {\n    provide: JWT_OPTIONS,\n    useValue: JWT_OPTIONS,\n  },\n  {\n    provide: ErrorHandler,\n    useClass: GlobalErrorHandler,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpErrorInterceptor,\n    multi: true,\n  },\n  // Breaks Code for now \n  // {\n  //   provide: HTTP_INTERCEPTORS,\n  //   useClass: CorsInterceptor,\n  //   multi: true,\n  // },\n];","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class JwtTokenInterceptor implements HttpInterceptor {\n  \n  constructor(private authService: AuthService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // Prevent auth token in specific URL\n    if (request.headers.get('skip')) {\n      request = request.clone({\n        headers: request.headers.delete('skip'),\n      });\n      return next.handle(request);\n    }\n\n    let authReq = request;\n    const token = this.authService.fetchFromSessionStorage()?.token;\n    // Null will still add a token\n    if (token !== undefined)\n      authReq = request.clone({\n        headers: request.headers.append('Authorization', `Bearer ${token}`)\n      });\n    return next.handle(authReq);\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-29 14:26:55\n * @modify date 2021-01-29 14:26:55\n * @desc [description]\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccessDeniedModalService {\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 18:19:16\n * @modify date 2021-01-25 18:19:16\n * @desc [description]\n */\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthModalService {\n\n  redirectUrl;\n  constructor(private route: ActivatedRoute) {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(url) {\n    this.redirectUrl = url || '/'\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n    this.redirectUrl = '';\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-21 12:48:30\n * @modify date 2021-01-21 12:48:30\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model';\nimport { EventService } from './event.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authServiceUrl = `${environment.protocol}${environment.applicationUrl}/auth`;\n  // authServiceUrl = `http://localhost:9100/auth`;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private jwtHelper: JwtHelperService,\n    private eventServie: EventService\n  ) {}\n\n  login(formData) {\n    return this.http\n      .post(`${this.authServiceUrl}/login`, formData)\n      .pipe(tap((user: User) => {\n        this.saveToSessionStorage(user);\n        this.eventServie.loggedInUser.next(user);\n      }));\n  }\n\n  saveToSessionStorage(user: User) {\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  fetchFromSessionStorage(): User {\n    return JSON.parse(sessionStorage.getItem('user'));\n  }\n\n  logout(): void {\n    sessionStorage.clear();\n    localStorage.clear();\n    this.eventServie.loggedInUser.next(null);\n    this.router.navigate(['/']);\n  }\n\n  redirectIfLoggedIn() {\n    if (this.fetchFromSessionStorage()?.token)\n      this.router.navigate(['/']);\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.fetchFromSessionStorage()?.token;\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  requestSecretQuestion (username) {\n    return this.http.get(`${this.authServiceUrl}/forgotpassword/${username}`);\n  }\n\n  requestPasswordReset (formData) {\n    return this.http.put(`${this.authServiceUrl}/forgotpassword`, formData);\n  }\n\n  getRole() {\n    return this.fetchFromSessionStorage()?.role;\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 19:52:33\n * @modify date 2021-01-25 19:52:33\n * @desc [description]\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartConfirmModalService {\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-27 02:57:17\n * @modify date 2021-01-27 02:57:17\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Item } from '../models/item.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  cartServiceUrl = `${environment.protocol}${environment.applicationUrl}/cart`;\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  addToCart(item: Item) {\n    return this.http.put(`${this.cartServiceUrl}/${this.authService.fetchFromSessionStorage()?.userId}`, item);\n  }\n\n  fetchCartByUserId() {\n    return this.http.get(`${this.cartServiceUrl}/user/${this.authService.fetchFromSessionStorage()?.userId}`);\n  }\n\n  removeItemFromCart(productId) {\n    return this.http.delete(`${this.cartServiceUrl}/delete/${productId}/${this.authService.fetchFromSessionStorage()?.userId}`)\n  }\n\n  checkout(data) {\n    return this.http.post(`${this.cartServiceUrl}/manualcheckout/${this.authService.fetchFromSessionStorage()?.userId}`, data)\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 11:02:43\n * @modify date 2021-01-25 11:02:43\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Category } from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  categoryServiceUrl = `${environment.protocol}${environment.applicationUrl}/categories`;\n\n  constructor(private http: HttpClient) {}\n\n  fetchAllCategories() {\n    return this.http.get(this.categoryServiceUrl);\n  }\n\n  updateCategory(data) {\n    return this.http.put(this.categoryServiceUrl, data);\n  }\n\n  createCategory(data) {\n    return this.http.post(this.categoryServiceUrl, data);\n  }\n\n  fetchById(id) {\n    return this.http.get(`${this.categoryServiceUrl}/${id}`);\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-26 11:23:10\n * @modify date 2021-01-26 11:23:10\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryHistoryService {\n  orderServiceUrl = `${environment.protocol}${environment.applicationUrl}/delivery`;\n\n  constructor(private http: HttpClient) {}\n\n  fetchDeliveryByOrderId(orderId) {\n    return this.http.get(`${this.orderServiceUrl}/${orderId}`);\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-21 12:49:26\n * @modify date 2021-01-21 12:49:26\n * @desc Used to execute events\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Category } from '../models/category.model';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  public resetPasswordData = new BehaviorSubject<any>(null);\n  public loggedInUser = new BehaviorSubject<User>(null);\n  public categoryChanged = new BehaviorSubject<String>(null);\n  public searchQueryChanged = new BehaviorSubject<String>(null);\n\n  constructor() { }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-05 22:31:03\n * @modify date 2021-02-05 22:31:03\n * @desc [description]\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormSubmitModalService {\n  url: string;\n  message: string;\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(message, url) {\n    this.message = message;\n    this.url = url;\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-27 01:13:57\n * @modify date 2021-01-27 01:13:57\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocationService {\n\n  applicationUrl = `${environment.mapQuestUrl}?key=${environment.mapQuestAPIKey}&`;\n  constructor(private http: HttpClient) {}\n\n  fetchDistance(to) {\n    // return this.http.get(this.generateUrl(environment.from, to));\n    return this.http.get(`${this.applicationUrl}from=${environment.from}&to=${to}`, {headers:{skip:\"true\"}})\n  }\n\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-28 22:48:41\n * @modify date 2021-01-28 22:48:41\n * @desc [description]\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalErrorModalService {\n\n  error;\n\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(error) {\n    this.error = error;\n    this.display.next('open');\n  }\n\n  close() {\n    this.error = null;\n    this.display.next('close');\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-21 13:13:20\n * @modify date 2021-01-21 13:13:20\n * @desc Used to manage loading stage\n */\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  public loading = false;\n\n  constructor() {}\n\n  enableLoading() {\n    this.loading = true;\n  }\n\n  disableLoading() {\n    this.loading = false;\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-22 11:38:04\n * @modify date 2021-01-22 11:38:04\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ManageUserService {\n  authServiceUrl = `${environment.protocol}${environment.applicationUrl}`;\n\n  constructor(private http: HttpClient) {}\n\n  fetchAllUsers() {\n    return this.http.get(`${this.authServiceUrl}/register`);\n  }\n\n  updateUser(formData) {\n    return this.http.put(`${this.authServiceUrl}/register`, formData);\n  }\n\n  addUser(formData) {\n    return this.http.post(`${this.authServiceUrl}/register`, formData);\n  }\n\n  fetchById(id) {\n    return this.http.get(`${this.authServiceUrl}/register/${id}`);\n  }\n\n  fetchLoggedInUserForEdit() {\n    return this.http.get(`${this.authServiceUrl}/me`);\n  }\n\n  updateLoggedInUser(data) {\n    return this.http.get(`${this.authServiceUrl}/me`, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderCancelModalService {\n\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close' | 'cancel-order'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close' | 'cancel-order'> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n\n  cancelOrder() {\n    this.display.next('cancel-order');\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-26 11:35:44\n * @modify date 2021-01-26 11:35:44\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { UpdateOrderStatus } from '../models/update-order-status.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  orderServiceUrl = `${environment.protocol}${environment.applicationUrl}/orders`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  updateOrderStatus(data: UpdateOrderStatus) {\n    return this.http.post(`${this.orderServiceUrl}`, data);\n  }\n\n  fetchOrder() {\n    return this.http.get(`${this.orderServiceUrl}`);\n  }\n\n  fetchById(id) {\n    return this.http.get(`${this.orderServiceUrl}/${id}`);\n  }\n\n  fetchByLoggedInUserId() {\n    return this.fetchByUserId(\n      this.authService.fetchFromSessionStorage()?.userId\n    );\n  }\n\n  fetchByUserId(userId) {\n    return this.http.get(`${this.orderServiceUrl}/user/${userId}`);\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-28 13:26:03\n * @modify date 2021-01-28 13:26:03\n * @desc [description]\n */\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentRazorpayService {\n  paymentServiceUrl = `${environment.protocol}${environment.applicationUrl}/payment`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  generateOrderId(amount) {\n    let params = new HttpParams()\n      .set('CUST_ID', this.authService.fetchFromSessionStorage().username)\n      .set('TXN_AMOUNT', amount.toString());\n    return this.http.get(`${this.paymentServiceUrl}/razorpayorder`, {\n      params,\n    });\n  }\n\n  updatePaymentInDb(data) {\n    return this.http.post(`${this.paymentServiceUrl}/razorsuccess`, data);\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-28 00:33:13\n * @modify date 2021-01-28 00:33:13\n * @desc [description]\n */\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentStripeService {\n  paymentServiceUrl = `${environment.protocol}${environment.applicationUrl}/payment`;\n  paymentComplete = new Subject();\n  constructor(private http: HttpClient) {}\n\n  loadStripe() {\n    if (!window.document.getElementById('stripe-script')) {\n      var s = window.document.createElement('script');\n      s.id = 'stripe-script';\n      s.type = 'text/javascript';\n      s.src = 'https://checkout.stripe.com/checkout.js';\n      window.document.body.appendChild(s);\n    }\n  }\n\n  // Predefined UI\n  pay(amount) {\n    var handler = (window as any).StripeCheckout.configure({\n      key: environment.publicStripeKey,\n      locale: 'auto',\n      token: (token: any) => {\n        // You can access the token ID with `token.id`.\n        // Get the token ID to your server-side code for use.\n        this.chargeCard(token.id, amount);\n      },\n    });\n\n    handler.open({\n      name: 'Gift Shop',\n      description:\n        'Online Gift Shopping application to purchse and share happiness',\n      amount: amount * 100,\n      currency: 'INR',\n    });\n  }\n\n  chargeCard(token: string, amount: number) {\n    // const headers = new HttpHeaders()\n    let headers = new HttpHeaders().set('token', token); // create header object\n    headers = headers.append('amount', amount.toString()); // add a new header, creating a new object\n\n    this.http\n      .post(`${this.paymentServiceUrl}/charge`, {}, { headers })\n      .subscribe((resp) => {\n        this.paymentComplete.next(resp);\n      });\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 11:17:01\n * @modify date 2021-01-25 11:17:01\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  productServiceUrl = `${environment.protocol}${environment.applicationUrl}/products`;\n\n  constructor(private http: HttpClient) {}\n\n  fetchAllProducts() {\n    return this.http.get(this.productServiceUrl);\n  }\n\n  findByName(name) {\n    return this.http.get(`${this.productServiceUrl}/name/${name}`);\n  }\n\n  findByCategory(category) {\n    return this.http.get(`${this.productServiceUrl}/category/${category}`);\n  }\n\n  fetchById(productId) {\n    return this.http.get(`${this.productServiceUrl}/${productId}`);\n  }\n\n  addProduct(product) {\n    return this.http.post(`${this.productServiceUrl}`, product);\n  }\n\n  deleteProduct(productId) {\n    return this.http.delete(`${this.productServiceUrl}/${productId}`);\n  }\n\n  updateProduct(product) {\n    return this.http.put(`${this.productServiceUrl}`, product);\n  }\n\n  fetchAllByPaging(page, sortBy, direction) {\n    return this.http.get(`${this.productServiceUrl}/pages?pageNo=${page}&sortBy=${sortBy}&direction=${direction}`).pipe(map(res => res['content']));\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-29 10:40:53\n * @modify date 2021-01-29 10:40:53\n * @desc [description]\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model';\nimport { AuthService } from './auth.service';\nimport { EventService } from './event.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocialAuthService {\n  authServiceUrl = `${environment.protocol}${environment.applicationUrl}/social`;\n\n  constructor(\n    private http: HttpClient,\n    private eventServie: EventService,\n    private authService: AuthService\n  ) {}\n\n  validateGoogleTokenAndLogin(data) {\n    return this.http\n      .post(`${this.authServiceUrl}/google`, data)\n      .pipe(tap((user: User) => this.triggerLogin(user)));\n  }\n\n  validateFacebookTokenAndLogin(data) {\n    return this.http\n      .post(`${this.authServiceUrl}/facebook`, data)\n      .pipe(tap((user: User) => this.triggerLogin(user)));\n  }\n\n  socialSignUp(data) {\n    return this.http\n      .post(`${this.authServiceUrl}/signup`, data)\n      .pipe(tap((user: User) => this.triggerLogin(user)));\n  }\n\n  triggerLogin(user: User) {\n    this.authService.saveToSessionStorage(user);\n    this.eventServie.loggedInUser.next(user);\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-05 18:42:15\n * @modify date 2021-02-05 18:42:15\n * @desc [description]\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateStatusModalService {\n  product;\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(product) {\n    this.product = product;\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Access Denied</h1>\n      <p>You are not authorized to access this page</p>\n      <hr>\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Go Back</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccessDeniedModalService } from 'src/app/services/access-denied-modal.service';\n\n@Component({\n  selector: 'app-access-denied-modal',\n  templateUrl: './access-denied-modal.component.html',\n  styleUrls: ['./access-denied-modal.component.scss'],\n})\nexport class AccessDeniedModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n\n  constructor(\n    private modalService: AccessDeniedModalService,\n    private location: Location,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.router.navigateByUrl('/')\n    this.modalService.close();\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.scss'],\n})\nexport class AccessDeniedComponent implements OnInit {\n  returnUrl;\n  constructor(private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  previousPage() {\n    this.router.navigateByUrl(this.returnUrl);\n  }\n}\n","<div class=\"parent\">\n  <div class=\"item\">\n    <h1>403</h1> <br><br>\n    <h2>Access Denied</h2>\n    <p>You are not authorized to access this page</p>\n    <hr />\n    <p>Go back to <a (click)=\"previousPage()\">previous Page</a></p>\n  </div>\n</div>\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>You are currently not logged In</h1>\n      <p>To access your cart or other functionalities, you will have to login to the application.</p>\n      <hr>\n      <div class=\"actions\">\n        <div class=\"auth\">\n          <button class=\"custom-btn\" (click)=\"goTo('/login')\">Login</button>\n          <button class=\"custom-btn\" (click)=\"goTo('/register')\">Register</button>\n        </div>\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 18:20:54\n * @modify date 2021-01-25 18:20:54\n * @desc [description]\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthModalService } from 'src/app/services/auth-modal.service';\n\n@Component({\n  selector: 'app-auth-modal',\n  templateUrl: './auth-modal.component.html',\n  styleUrls: ['./auth-modal.component.scss'],\n})\nexport class AuthModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n\n  constructor(private modalService: AuthModalService, private router: Router) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  goTo(path) {\n    this.router.navigate([path], { queryParams: { returnUrl: this.modalService.redirectUrl }});\n    this.close();\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Item Added to Cart</h1>\n      <p>Thank You.</p>\n      <hr>\n      <div class=\"actions\">\n        <button class=\"custom-btn\"  (click)=\"goToCart()\">Go to Cart</button>\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Okay</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-25 19:53:04\n * @modify date 2021-01-25 19:53:04\n * @desc [description]\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CartConfirmModalService } from 'src/app/services/cart-confirm-modal.service';\n\n@Component({\n  selector: 'app-cart-confirm-modal',\n  templateUrl: './cart-confirm-modal.component.html',\n  styleUrls: ['./cart-confirm-modal.component.scss'],\n})\nexport class CartConfirmModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n\n  constructor(\n    private modalService: CartConfirmModalService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  goToCart() {\n    this.router.navigateByUrl('/products/cart');\n    this.close();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer font-small bg-light pt-4\">\n  <div class=\"container-fluid text-center text-md-left\">\n    <div class=\"row\">\n      <div class=\"col-md-1 mt-md-0 mt-3\"></div>\n      <div class=\"col-md-4 mt-md-0 mt-3\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n          <img class=\"brand-logo\" src=\"assets/images/gift-box.svg\" />\n          <img class=\"title\" src=\"assets/images/logo-text.png\" />\n        </a>\n        <p>\n          Gift Shop Private Limited, <br />\n          Powai, 400072, Maharashtra, India\n        </p>\n      </div>\n      <hr class=\"clearfix w-100 d-md-none pb-3\" />\n      <div class=\"col-md-2 mb-md-0 mb-3\">\n        <h5 class=\"text-uppercase footer-title\">Community</h5>\n        <ul class=\"list-unstyled\">\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/about']\">About Us</a>\n          </li>\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/']\">Home</a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-2 mb-md-0 mb-3\">\n        <h5 class=\"text-uppercase footer-title\">Links</h5>\n\n        <ul class=\"list-unstyled text-dark\">\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/products/cart']\">Cart</a>\n          </li>\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/products/orders']\">\n              Purchases\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-2 mb-md-0 mb-3\">\n        <h5 class=\"text-uppercase footer-title\">Follow Us</h5>\n        <ul class=\"list-unstyled row\">\n          <li>\n            <a [routerLink]=\"['/']\">\n              <img class=\"social\" src=\"assets/images/twitter.svg\" />\n            </a>\n          </li>\n          <li>\n            <a [routerLink]=\"['/']\">\n              <img class=\"social\" src=\"assets/images/facebook_color.svg\" />\n            </a>\n          </li>\n          <li>\n            <a [routerLink]=\"['/']\">\n              <img class=\"social\" src=\"assets/images/instagram.svg\" />\n            </a>\n          </li>\n          <li>\n            <a [routerLink]=\"['/']\">\n              <img class=\"social\" src=\"assets/images/whatsapp.svg\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  <div class=\"footer-copyright text-center\">\n    © 2021 Copyright ❤️️\n    <a class=\"footer-items\" [routerLink]=\"['/']\"> Gift Shop</a>\n  </div>\n</footer>\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Success</h1>\n      <p> {{ message }} </p>\n      <hr />\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button class=\"custom-btn\" (click)=\"close()\">Okay</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { UpdateStatusModalService } from 'src/app/services/update-status-modal.service';\n\n@Component({\n  selector: 'app-form-submit-modal',\n  templateUrl: './form-submit-modal.component.html',\n  styleUrls: ['./form-submit-modal.component.scss'],\n})\nexport class FormSubmitModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n  message;\n\n  constructor(\n    private modalService: FormSubmitModalService,\n    public loadingService: LoadingService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n    this.openSubscription();\n  }\n  openSubscription() {\n    this.display$.subscribe((res) => {\n      this.message = this.modalService.message;\n    });\n  }\n\n  close() {\n    this.modalService.close();\n    this.router.navigateByUrl(this.modalService.url);\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Something went wrong</h1>\n      <p> {{ error }} </p>\n      <hr>\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Okay</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-01-28 22:48:06\n * @modify date 2021-01-28 22:48:06\n * @desc [description]\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GlobalErrorModalService } from 'src/app/services/global-error-modal.service';\n\n@Component({\n  selector: 'app-global-error-modal',\n  templateUrl: './global-error-modal.component.html',\n  styleUrls: ['./global-error-modal.component.scss'],\n})\nexport class GlobalErrorModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n  error;\n\n  constructor(private modalService: GlobalErrorModalService) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n    this.openSubscription();\n  }\n  openSubscription() {\n    this.display$.subscribe((res) => (this.error = this.modalService.error));\n  }\n\n  close() {\n    this.modalService.close();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { UserDetailsEdit } from 'src/app/models/user-details-edit';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n  isLoggedIn: boolean;\n  activeTabs = [];\n  role: string;\n  name: string;\n  profileTabs = [\n    { name: 'My Profile', link: '/products/profile' },\n    { name: 'Edit Profile', link: '/products/editprofile' },\n    { name: 'My Purchase', link: '/products/orders' },\n  ];\n  userTabs = [\n    { name: 'About', link: '/about' },\n    { name: 'Cart', link: '/products/cart' },\n  ];\n  anonymousTab = [\n    { name: 'About', link: '/about' },\n    { name: 'Login', link: '/auth/login' },\n    { name: 'Register', link: '/auth/register' },\n  ];\n  adminTabs = [\n    { name: 'Add Product', link: '/admin/add' },\n    { name: 'View Products', link: '/admin/view' },\n    { name: 'Add Category', link: '/admin/categoryadd' },\n    { name: 'View Categories', link: '/admin/categoryview' },\n  ];\n  categories: Category[] = [];\n  searchQuery = '';\n\n  constructor(\n    private authService: AuthService,\n    private eventService: EventService,\n    private categoryService: CategoryService,\n    private router: Router,\n    private manageUserService: ManageUserService\n  ) {}\n  initializeApp() {\n    // If user data is present and token not expired, emi event to update navi\n    if (this.authService.isAuthenticated()) {\n      this.eventService.loggedInUser.next(\n        this.authService.fetchFromSessionStorage()\n      );\n    }\n    // Log out user if toke already expired\n    else this.authService.logout();\n  }\n  initCategories() {\n    this.categoryService\n      .fetchAllCategories()\n      .subscribe((res: Category[]) => (this.categories = res));\n  }\n\n  initializeNavItems() {\n    this.eventService.loggedInUser.subscribe((res) => {\n      if (!res || res['status'] === 202 ) {\n        this.isLoggedIn = false;\n        this.activeTabs = this.anonymousTab;\n      } else {\n        this.isLoggedIn = true;\n        this.activeTabs = this.userTabs;\n        this.role = res.role;\n        this.fetchUserData();\n      }\n    });\n  }\n\n  fetchUserData() {\n    this.manageUserService\n      .fetchLoggedInUserForEdit()\n      .subscribe(\n        (res: UserDetailsEdit) =>\n          (this.name = res?.firstName + ' ' + res?.lastName)\n      );\n  }\n\n  ngOnInit(): void {\n    this.initializeApp();\n    this.initializeNavItems();\n    this.initCategories();\n  }\n\n  logOut() {\n    this.authService.logout();\n  }\n\n  changeCategory(category) {\n    this.eventService.categoryChanged.next(category);\n    this.redirectHome();\n  }\n\n  searchItem() {\n    this.eventService.searchQueryChanged.next(this.searchQuery);\n    this.searchQuery = '';\n    this.redirectHome();\n  }\n\n  redirectHome() {\n    this.router.navigateByUrl('/');\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-light navbar-light py-3 sticky-top\">\n  <a class=\"navbar-brand\" (click)=\"changeCategory(null)\">\n    <img class=\"brand-logo\" src=\"assets/images/gift-box.svg\" />\n    <img class=\"title\" src=\"assets/images/logo-text.png\" />\n  </a>\n  <ul class=\"navbar-nav ml-auto\">\n    <li class=\"nav-item px-2\">\n      <input\n        type=\"text\"\n        (keydown.enter)=\"searchItem()\"\n        [(ngModel)]=\"searchQuery\"\n        class=\"search-hover\"\n        name=\"\"\n        placeholder=\"Search...\"\n      />\n    </li>\n    <li class=\"dropdown\">\n      <a\n        class=\"nav-link dropdown-toggle\"\n        id=\"navbarDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        All Products\n      </a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n        <a\n          *ngFor=\"let category of categories\"\n          class=\"dropdown-item\"\n          (click)=\"changeCategory(category.categoryName)\"\n        >\n          {{ category.categoryName }}\n        </a>\n        <a class=\"dropdown-item\" (click)=\"changeCategory(null)\">\n          All Products\n        </a>\n      </div>\n    </li>\n    <!-- Admin drop down -->\n    <li class=\"dropdown\" *ngIf=\"isLoggedIn && role === 'Admin'\">\n      <a\n        class=\"nav-link dropdown-toggle\"\n        id=\"navbarDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        Manage\n      </a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n        <a\n          *ngFor=\"let item of adminTabs\"\n          class=\"dropdown-item\"\n          [routerLink]=\"[item.link]\"\n        >\n          {{ item.name }}\n        </a>\n      </div>\n    </li>\n    <!-- Navbar items -->\n    <li class=\"nav-item px-2\" *ngFor=\"let item of activeTabs\">\n      <!-- <span class=\"cart-quantity\">0</span>  -->\n      <a class=\"nav-link menu-item\" [routerLink]=\"[item.link]\">\n        {{ item.name }}</a\n      >\n    </li>\n    <li class=\"nav-item px-2\"></li>\n    <!-- User Profile Dropdown -->\n    <li class=\"dropdown\" *ngIf=\"isLoggedIn\">\n      <a\n        class=\"nav-link dropdown-toggle\"\n        id=\"navbarDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        {{ name }}\n      </a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n        <a\n          *ngFor=\"let item of profileTabs\"\n          class=\"dropdown-item\"\n          [routerLink]=\"[item.link]\"\n        >\n          {{ item.name }}\n        </a>\n        <a class=\"dropdown-item\" *ngIf=\"isLoggedIn\" (click)=\"logOut()\"\n          >Log Out</a\n        >\n      </div>\n    </li>\n  </ul>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Do you really want to cancel?</h1>\n      <p>Action is irreversible.</p>\n      <hr>\n      <div class=\"actions\">\n        <button class=\"custom-btn\"  (click)=\"triggerCancelOrder()\">Yes</button>\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">No</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { OrderCancelModalService } from 'src/app/services/order-cancel-modal.service';\n\n@Component({\n  selector: 'app-order-cancel-modal',\n  templateUrl: './order-cancel-modal.component.html',\n  styleUrls: ['./order-cancel-modal.component.scss']\n})\nexport class OrderCancelModalComponent implements OnInit {\n\n  display$: Observable<'open' | 'close' | 'cancel-order'>;\n\n  constructor(\n    private modalService: OrderCancelModalService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  triggerCancelOrder() {\n    this.modalService.cancelOrder();\n  }\n}\n","/**\n * @author Gagandeep Singh\n * @email singh.gagandeep3911@gmail.com\n * @create date 2021-02-05 18:41:08\n * @modify date 2021-02-05 18:41:08\n * @desc [description]\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { ProductStatus } from 'src/app/models/product-status.model';\nimport { Product } from 'src/app/models/product.model';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { UpdateStatusModalService } from 'src/app/services/update-status-modal.service';\n\n@Component({\n  selector: 'app-update-status-modal',\n  templateUrl: './update-status-modal.component.html',\n  styleUrls: ['./update-status-modal.component.scss'],\n})\nexport class UpdateStatusModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n  product: Product;\n  statusTypes = ProductStatus;\n  currentStatus = 'DISABLED';\n\n  constructor(\n    private modalService: UpdateStatusModalService,\n    public loadingService: LoadingService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n    this.openSubscription();\n  }\n  openSubscription() {\n    this.display$.subscribe((res) => {\n      this.product = this.modalService.product;\n    });\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  update() {\n    this.product.productStatus = this.currentStatus;\n    this.loadingService.enableLoading();\n    this.productService\n      .updateProduct(this.product)\n      .pipe(take(1))\n      .subscribe({\n        next: () => {\n          this.loadingService.disableLoading();\n          this.close();\n        },\n      });\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Updte Status</h1>\n      <p>Product ID: {{ product?.productId }}</p>\n      <p>Current Status: {{ product?.productStatus }}</p>\n      <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"currentStatus\">\n          <option value=\"\" disabled=\"true\" [selected]=\"true\">\n            Select a Category\n          </option>\n          <option *ngFor=\"let item of statusTypes | keyvalue\" [value]=\"item.key\">\n            {{ item.value }}\n          </option>\n        </select>\n      </div>\n      <hr />\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button [disabled]=\"currentStatus===product?.productStatus\" class=\"custom-btn\" (click)=\"update()\">\n            <span\n              *ngIf=\"loadingService.loading\"\n              class=\"spinner-border spinner-border-sm\"\n            ></span>\n            Update\n          </button>\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  protocol: 'http://',\n  applicationUrl: 'localhost:8085/gift-shop-api',\n  // applicationUrl: 'localhost:1999',\n  authService: '',\n  productService: '',\n  orderService: '',\n  paymentService: '',\n  cartService: '',\n  mapQuestAPIKey: 'nXLMbpX6U0545mAaAJyeI2QQd1JYVqG4',\n  mapQuestUrl: 'http://www.mapquestapi.com/directions/v2/route',\n  publicStripeKey: 'pk_test_51I3zWOI8py6Rj5ufY6RnJ1zjPK930I2xwWW0XKPWFr6cp7mAvgM8q8aoAV5R0trqmGEEqSgrLY6xVhZRqTsgZJqE00zW2TqkZa',\n  publicRazorpayKey: 'rzp_test_QHK5P7ne66SdWo',\n  googleClientId: '120787335948-g4r6bof29ub3vaaaiu7pc01jd5dalooq.apps.googleusercontent.com',\n  facebookClientId: '745534413011559',\n  from: '400072',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["i0","$event","AccessDeniedModalComponent","constructor","modalService","location","router","ngOnInit","display$","watch","close","navigateByUrl","goBack","back","selectors","decls","vars","consts","template","AuthModalComponent","goTo","path","navigate","queryParams","returnUrl","redirectUrl","CartConfirmModalComponent","goToCart","FormSubmitModalComponent","loadingService","openSubscription","subscribe","res","message","url","GlobalErrorModalComponent","error","OrderCancelModalComponent","triggerCancelOrder","cancelOrder","take","ProductStatus","UpdateStatusModalComponent","productService","product","update","productStatus","currentStatus","enableLoading","updateProduct","pipe","next","disableLoading"],"sourceRoot":"webpack:///"}